/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Vista;

import Controlador.AbstractDAO;
import Controlador.PacientesDAO;
import Modelo.Paciente;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.Iterator;
import java.util.List;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import util.modalInternalFrame;

/**
 *
 * @author usuario
 */
public class iFraAgenda extends modalInternalFrame {
    PacientesDAO pacientesDAO = null;
    private DefaultTableModel model;
    boolean bandera;
    

    /**
     * Creates new form iFraAgenda
     */
    public iFraAgenda() {
        initComponents();        
        arranque();
        grupoBotones();
        SLetras(txtNomBuscar);  
        SNroEntero(this.txtIdBuscar);
        bandera=false; //solo hay 1 ventana
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        popMnuContacto = new javax.swing.JPopupMenu();
        itemAgregar = new javax.swing.JMenuItem();
        itemQuitar = new javax.swing.JMenuItem();
        panelDatos = new javax.swing.JPanel();
        rbtTodos = new javax.swing.JRadioButton();
        jPanel7 = new javax.swing.JPanel();
        txtIdBuscar = new javax.swing.JTextField();
        txtNomBuscar = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        rbtNro = new javax.swing.JRadioButton();
        rbtPaciente = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        itemAgregar.setText("Agregar");
        itemAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemAgregarActionPerformed(evt);
            }
        });
        popMnuContacto.add(itemAgregar);

        itemQuitar.setText("Quitar");
        itemQuitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemQuitarActionPerformed(evt);
            }
        });
        popMnuContacto.add(itemQuitar);

        setClosable(true);
        setTitle("Agenda");

        panelDatos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        rbtTodos.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtTodos.setText("Ver todos");
        rbtTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtTodosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelDatosLayout = new javax.swing.GroupLayout(panelDatos);
        panelDatos.setLayout(panelDatosLayout);
        panelDatosLayout.setHorizontalGroup(
            panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDatosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rbtTodos, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelDatosLayout.setVerticalGroup(
            panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDatosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rbtTodos)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtIdBuscar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        txtNomBuscar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/img/binoculares.png"))); // NOI18N
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        rbtNro.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtNro.setText("Nro");
        rbtNro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtNroActionPerformed(evt);
            }
        });

        rbtPaciente.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtPaciente.setText("Paciente");
        rbtPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtPacienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbtNro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtIdBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbtPaciente)
                .addGap(6, 6, 6)
                .addComponent(txtNomBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNomBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtIdBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(rbtNro)
                        .addComponent(rbtPaciente)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Apellido y Nombre", "Tel√©fono", "Email"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setComponentPopupMenu(popMnuContacto);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelDatos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
    }//GEN-LAST:event_jTable1MouseClicked

    private void rbtTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtTodosActionPerformed
        
        cargarTabla(1);
        this.rbtNro.setSelected(true);
        this.txtIdBuscar.setText(null);
        this.txtIdBuscar.setEnabled(true);
        this.txtNomBuscar.setText(null);
        txtNomBuscar.setEnabled(false);
        this.txtIdBuscar.grabFocus();
    }//GEN-LAST:event_rbtTodosActionPerformed

    private void rbtNroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtNroActionPerformed
        habilitarBusqueda(true);
    }//GEN-LAST:event_rbtNroActionPerformed

    private void rbtPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtPacienteActionPerformed
        habilitarBusqueda(false);
    }//GEN-LAST:event_rbtPacienteActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
       buscar();
//        clickBuscar();       
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void itemQuitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemQuitarActionPerformed
        JOptionPane.showMessageDialog(this, "Quitar");
    }//GEN-LAST:event_itemQuitarActionPerformed

    private void itemAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemAgregarActionPerformed
        
//        public void mouseReleased(MouseEvent e)
////        {
//            if (evt.isPopupTrigger())
//            {
//                JTable source = (JTable)evt.getSource();
//                int row = source.rowAtPoint( evt.getPoint() );
//                int column = source.columnAtPoint( evt.getPoint() );
//
//                if (! source.isRowSelected(row))
//                    source.changeSelection(row, column, false, false);
//
//                popMnuContacto.show(evt.getComponent(), evt.getX(), evt.getY());
//            }
////        }
        JOptionPane.showMessageDialog(this, "Agregar" + this.jTable1.getSelectedColumn());
    }//GEN-LAST:event_itemAgregarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JMenuItem itemAgregar;
    private javax.swing.JMenuItem itemQuitar;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JPanel panelDatos;
    private javax.swing.JPopupMenu popMnuContacto;
    private javax.swing.JRadioButton rbtNro;
    private javax.swing.JRadioButton rbtPaciente;
    private javax.swing.JRadioButton rbtTodos;
    private javax.swing.JTextField txtIdBuscar;
    private javax.swing.JTextField txtNomBuscar;
    // End of variables declaration//GEN-END:variables


    private void arranque(){
        this.txtIdBuscar.setEnabled(false);
        this.txtIdBuscar.setText(null);
        this.txtNomBuscar.setEnabled(false);
        this.txtNomBuscar.setText(null);
        habilitarBusqueda(true);
        tableModel();
    }
    
public void setPaciente(String ape, String nom, String id){
    this.txtIdBuscar.setText(id);
    this.txtNomBuscar.setText(nom + " " + ape);
    
//    if(id.isEmpty()) bandera=false;
//    else bandera=true;
//    bandera = " ".equals(nom);
//    JOptionPane.showMessageDialog(this, bandera);
}

//public void clickBuscar(){
//    int cant=fraMenu.getEscritorio().getAllFrames().length;
//    if(cant==1){
////        JOptionPane.showMessageDialog(this, "Buscar: " + bandera);
//        buscar();    
//    }else{
////        JOptionPane.showMessageDialog(this, "Arranque: " + bandera);
//        cargarTabla(3);
////        arranque(); 
//
//    }
//}

public void buscar(){
    if(this.rbtNro.isSelected())
        {
            if(txtIdBuscar.getText().trim().length()!=0)
                cargarTabla(3);
            else {JOptionPane.showMessageDialog(this, "<html><font size=5>Ingrese un Nro a buscar..");
                txtIdBuscar.grabFocus(); }
        }
        else{
            if(txtNomBuscar.getText().trim().length()!=0)
                cargarTabla(2);
            else {JOptionPane.showMessageDialog(this, "<html><font size=5>Ingrese un nombre a buscar..");
                txtNomBuscar.grabFocus(); }
        }
}

private void grupoBotones(){
        this.buttonGroup1=new ButtonGroup();
        this.buttonGroup1.add(rbtTodos);
//        this.buttonGroup1.add(rbtSEmail);
//        this.buttonGroup1.add(rbtSTel);
        this.buttonGroup1.add(rbtNro);
        this.buttonGroup1.add(rbtPaciente);
    }

public void cargarTabla(int op){
    List<Paciente> lista = null;
    tableModel();
    if (op==1){ 
        lista=AbstractDAO.getListaEntidades(Paciente.class);
     } else if(op==2){
            String nom = txtNomBuscar.getText();
            pacientesDAO = new PacientesDAO();
            lista=pacientesDAO.getPacientesXnonApe(nom);
     } else if(op==3){
            int cod = Integer.parseInt(txtIdBuscar.getText());    
            lista=AbstractDAO.getListaEntidadesXid(Paciente.class, cod);
     }
      
    for (Iterator<Paciente> it = lista.iterator(); it.hasNext();) {
            Paciente pac = it.next();
            model.addRow(new Object[]{
//                pac.getApellido() + ", " +pac.getNombre(), pac.getTelefono(), null ,pac.getEmail()
                 pac.getApellido() + ", " +pac.getNombre(), pac.getTelefono(), pac.getEmail()   
            });
        } 
    
    if(lista.isEmpty())JOptionPane.showMessageDialog(this, "<html><font size=5>Esta b√∫squeda no arrojo resultados..");
}

public void tableModel(){
    this.jTable1.getColumnModel().getColumn(0).setPreferredWidth(100);
    this.jTable1.getColumnModel().getColumn(1).setPreferredWidth(80);
    this.jTable1.getColumnModel().getColumn(2).setPreferredWidth(80);
//    this.jTable1.getColumnModel().getColumn(3).setPreferredWidth(80);
//    this.jTable1.getColumnModel().getColumn(4).setPreferredWidth(80);
    jTable1.getTableHeader().setFont(new Font("Segoe UI", Font.ITALIC, 18));
    jTable1.setFont(new Font("Segoe UI", Font.PLAIN, 18));
    jTable1.setRowHeight(30);
    jTable1.setAutoCreateRowSorter(true);
    model = (DefaultTableModel)this.jTable1.getModel();
    
    model.setNumRows(0);
}

public void habilitarBusqueda(boolean op){
        this.txtNomBuscar.setEnabled(!op);
        this.txtIdBuscar.setEnabled(op);
        this.txtIdBuscar.setText(null);
        this.txtNomBuscar.setText(null);
        if(op) {this.txtIdBuscar.grabFocus(); this.rbtNro.setSelected(true);}
        if(!op){ this.txtNomBuscar.grabFocus(); this.rbtPaciente.setSelected(true);}
        tableModel();
}

private void SLetras(JTextField a){
        a.addKeyListener(new KeyAdapter() {
       @Override public void keyTyped(KeyEvent e) {            
            char car = e.getKeyChar();       
            if((car<'a' || car>'z') && (car<'A' || car>'Z')            
                && car !='√°' //Min√∫sculas            
                && car !='√©'           
                && car !='√≠'           
                && car !='√≥'          
                && car !='√∫'  
                && car !='√Å' //May√∫sculas            
                && car !='√â'           
                && car !='√ç'           
                && car !='√ì'
                && car !='√ö'
                && car !='√±'
                && car !='√ë'    
                && (car!=(char)KeyEvent.VK_SPACE)
                && (car!=(char)KeyEvent.VK_BACK_SPACE)    
                    )
            {
              Toolkit.getDefaultToolkit().beep();
              e.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
                    JOptionPane.showMessageDialog(null, "<html><font size=5 style=color:red;>Solo puede ingresar letras", "Validando Datos",
                            JOptionPane.ERROR_MESSAGE);
              e.consume(); 
            }
            String text = ((JTextField) e.getSource()).getText();
            if (text.length() >= 40) {
                e.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
                JOptionPane.showMessageDialog(null, "<html><font size=5 style=color:red;>Ha excedido el n√∫mero m√°ximo de caracteres!!! (40)", "Validando Datos",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
        });          
    }

private void SNroEntero(JTextField a){   
        a.addKeyListener(new KeyAdapter() {
       @Override public void keyTyped(KeyEvent e) {            
		String text = ((JTextField) e.getSource()).getText();
		
                if(!Character.isDigit(e.getKeyChar()) && !Character.isISOControl(e.getKeyChar()))
                {
                     Toolkit.getDefaultToolkit().beep();

                     e.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
                    JOptionPane.showMessageDialog(null, "<html><font size=5 style=color:red;>Solo puede ingresar n√∫meros", "Validando Datos",
                            JOptionPane.ERROR_MESSAGE);
                    e.consume();
                }

                //Limitar el numero de caracteres. Solo se pueden ingresar 5 caracteres
                if (text.length() >= 5) {
                    e.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
                    JOptionPane.showMessageDialog(null, "<html><font size=5 style=color:red;>Ha excedido el numero maximo de caracteres!!! (5)", "Validando Datos",
                            JOptionPane.ERROR_MESSAGE);
                }                     
        }
        });  
    }




}
