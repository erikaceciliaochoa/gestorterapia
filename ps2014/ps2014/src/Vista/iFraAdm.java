/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Vista;

import java.awt.Dimension;
import javax.swing.ImageIcon;
import javax.swing.JInternalFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import util.modalInternalFrame;

/**
 *
 * @author usuario
 */
public class iFraAdm extends modalInternalFrame {
    boolean activadoPanel;
    int cant;
//    private JInternalFrame JInternalFrame;
    /**
     * Creates new form iFraAdm
     */
    public iFraAdm() {
        initComponents();
        activadoPanel=true;
        
        
//        setFrameIcon(new ImageIcon("Vista/img/Blog_Artdesigner.png"));
//        this.setIconImage(new ImageIcon("Vista/img/Blog_Artdesigner.png").getImage());
//        this.setFrameIcon(new ImageIcon(this.getClass().getResource("img/Blog_Artdesigner.png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnOcupacion = new javax.swing.JButton();
        btnPacientes = new javax.swing.JButton();
        btnMotivos = new javax.swing.JButton();
        btnPruebas = new javax.swing.JButton();
        btnDiagnosticos = new javax.swing.JButton();
        btnTratamientos = new javax.swing.JButton();
        btnHorarios = new javax.swing.JButton();

        setClosable(true);
        setResizable(true);
        setTitle("Panel de Administración");

        btnOcupacion.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnOcupacion.setText("Administrar Ocupaciones/Profesiones");
        btnOcupacion.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnOcupacion.setContentAreaFilled(false);
        btnOcupacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOcupacionActionPerformed(evt);
            }
        });

        btnPacientes.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnPacientes.setText("Administrar Pacientes");
        btnPacientes.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnPacientes.setContentAreaFilled(false);
        btnPacientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPacientesActionPerformed(evt);
            }
        });

        btnMotivos.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnMotivos.setText("Administrar Motivos de Consulta");
        btnMotivos.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnMotivos.setContentAreaFilled(false);
        btnMotivos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMotivosActionPerformed(evt);
            }
        });

        btnPruebas.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnPruebas.setText("Administrar Pruebas");
        btnPruebas.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnPruebas.setContentAreaFilled(false);
        btnPruebas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPruebasActionPerformed(evt);
            }
        });

        btnDiagnosticos.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnDiagnosticos.setText("Administrar Diagnósticos");
        btnDiagnosticos.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnDiagnosticos.setContentAreaFilled(false);
        btnDiagnosticos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDiagnosticosActionPerformed(evt);
            }
        });

        btnTratamientos.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnTratamientos.setText("Administrar Tratamientos");
        btnTratamientos.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnTratamientos.setContentAreaFilled(false);
        btnTratamientos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTratamientosActionPerformed(evt);
            }
        });

        btnHorarios.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnHorarios.setText("Administrar Usuarios");
        btnHorarios.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnHorarios.setContentAreaFilled(false);
        btnHorarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHorariosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDiagnosticos, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)
                    .addComponent(btnPruebas, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)
                    .addComponent(btnMotivos, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)
                    .addComponent(btnPacientes, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)
                    .addComponent(btnOcupacion, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)
                    .addComponent(btnTratamientos, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)
                    .addComponent(btnHorarios, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE))
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnOcupacion, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPacientes, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMotivos, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPruebas, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDiagnosticos, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTratamientos, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnHorarios, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOcupacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOcupacionActionPerformed
        limpiarVentanas();
        iFraOcupacion p=new iFraOcupacion();
        p.setModal(true); 
        fraMenu.getEscritorio().add(p);
        centrarVentanas();
        p.show();
//        ((javax.swing.plaf.basic.BasicInternalFrameUI) getUI()).getNorthPane().setPreferredSize(new Dimension(100, 300));
//        p.nuevo();
//        incluir(p);
    }//GEN-LAST:event_btnOcupacionActionPerformed

    private void btnPacientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPacientesActionPerformed
        limpiarVentanas();
        iFraPaciente p=new iFraPaciente();
        p.setModal(true); 
        fraMenu.getEscritorio().add(p);
        centrarVentanas();
        p.show();
//        incluir(p);
    }//GEN-LAST:event_btnPacientesActionPerformed

    private void btnMotivosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMotivosActionPerformed
        limpiarVentanas();
        iFraMotivo p=new iFraMotivo();
        p.setModal(true); 
        fraMenu.getEscritorio().add(p);
        centrarVentanas();
        p.show();
//        incluir(p);
    }//GEN-LAST:event_btnMotivosActionPerformed

    private void btnPruebasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPruebasActionPerformed
        limpiarVentanas();
        iFraPrueba p=new iFraPrueba();
        p.setModal(true); 
        fraMenu.getEscritorio().add(p);
        centrarVentanas();
        p.show();
//        incluir(p);
    }//GEN-LAST:event_btnPruebasActionPerformed

    private void btnDiagnosticosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDiagnosticosActionPerformed
        limpiarVentanas();
        iFraDiagnostico p=new iFraDiagnostico();
        p.setModal(true); 
        fraMenu.getEscritorio().add(p);
        centrarVentanas();
        p.show();
//        incluir(p);
    }//GEN-LAST:event_btnDiagnosticosActionPerformed

    private void btnTratamientosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTratamientosActionPerformed
        limpiarVentanas();
        iFraTratamientos p=new iFraTratamientos();
        p.setModal(true); 
        fraMenu.getEscritorio().add(p);
        centrarVentanas();
        p.show();
//        incluir(p);
    }//GEN-LAST:event_btnTratamientosActionPerformed

    private void btnHorariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHorariosActionPerformed
        limpiarVentanas();
        iFraUsuario adm=new iFraUsuario();
        adm.setModal(true); 
        fraMenu.getEscritorio().add(adm);
        centrarVentanas();
        adm.show();
        
    }//GEN-LAST:event_btnHorariosActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDiagnosticos;
    private javax.swing.JButton btnHorarios;
    private javax.swing.JButton btnMotivos;
    private javax.swing.JButton btnOcupacion;
    private javax.swing.JButton btnPacientes;
    private javax.swing.JButton btnPruebas;
    private javax.swing.JButton btnTratamientos;
    // End of variables declaration//GEN-END:variables

private void limpiarVentanas(){
    //Ocultar todos los frame menos iFraAdm
    cant=fraMenu.getEscritorio().getAllFrames().length;
    JInternalFrame internalFrames[] = fraMenu.getEscritorio().getAllFrames();
    for (int i=0; i<cant; i++) {
//            fraMenu.getEscritorio().remove(i);         
        if(!internalFrames[i].getTitle().equals("Panel de Administración")){
            internalFrames[i].dispose();
        }
    }
}


    
public void centrarVentanas(){
    //    int x = (desktop.getWidth()/2) - internalFrame.getWidth()/2;
//    int y = (desktop.getHeight()/2) - internalFrame.getHeight()/2;
//
//    if(internalFrame.isShowing()){
//            internalFrame.setLocation(x,y);
//    } else{
//            desktop.add(internalFrame);
//            internalFrame.setLocation(x,y);
//            internalFrame.show();
//    }
    
    //Centrar todas las ventanas menos el panel
    int x,y;
    cant=fraMenu.getEscritorio().getAllFrames().length;
    JInternalFrame internalFrames[] = fraMenu.getEscritorio().getAllFrames();
    for (int i=0; i<cant; i++) {         
        if(!internalFrames[i].getTitle().equals("Panel de Administración")){
            x = (fraMenu.getEscritorio().getWidth()/2) - internalFrames[i].getWidth()/2;
            y = (fraMenu.getEscritorio().getHeight()/2) - internalFrames[i].getHeight()/2;
            internalFrames[i].setLocation(x, y);
        }

    }
}

public void mostrar(String ifra){
    int cant=fraMenu.getEscritorio().getAllFrames().length;
    JInternalFrame internalFrames[] = fraMenu.getEscritorio().getAllFrames();
    for (int i=1; i<cant; i++) {
        if(internalFrames[i].getTitle().equals(ifra)){
            internalFrames[i].show();
        }
        else{
            internalFrames[i].hide();
        }
    }
}  


public void incluir(JInternalFrame p){  
        p.setBorder(null);
        ((BasicInternalFrameUI) p.getUI()).setNorthPane(null);
        fraMenu.getEscritorio().add(p);
        centrarVentanas();
        p.show();
        
        JLabel [] options = new JLabel[1];
        options[0] = new JLabel("");
        
        JOptionPane.showInternalOptionDialog( 
            fraMenu.getEscritorio(),                             // the parent that the dialog blocks 
            p,//inputs,                       // the dialog message array 
            "", // the title of the dialog window 
            JOptionPane.PLAIN_MESSAGE,                 // option type 
            JOptionPane.PLAIN_MESSAGE,            // message type 
            null,                                       // optional icon, use null to use the default icon 
            options,                                    // options string array, will be made into buttons 
            options[0]                                  // option that should be made into a default button 
        ); 
}

protected static ImageIcon createImageIcon(String path) {
        java.net.URL imgURL = iFraAdm.class.getResource(path);
        if (imgURL != null) {
            return new ImageIcon(imgURL);
        } else {
            System.err.println("Couldn't find file: " + path);
            return null;
        }
    }




}
