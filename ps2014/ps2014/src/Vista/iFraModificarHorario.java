/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Vista;

import Controlador.AbstractDAO;
import Controlador.HorarioDAO;
import Modelo.DiaLaboral;
import Modelo.HorarioCab;
import Modelo.HorarioDet;
import Modelo.RangoHorario;
import Modelo.odt.HorarioXDia;
//import static Vista.iFraAdministracion.createImageIcon;
import java.awt.Component;
import java.awt.Font;
import java.awt.Frame;
import java.util.Iterator;
import java.util.List;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import util.modalInternalFrame;

/**
 *
 * @author usuario
 */
public class iFraModificarHorario extends modalInternalFrame {
    // private DefaultTableModel model;
    private DefaultTableModel modelRango;
    private int var;//, idHorario,numVenta;
    HorarioDAO horarioDAO= null;
//    HorarioDAO horarioDAO2= null;
     boolean bandera;//, diaV, rhV;
//     iFraDiasLaborales d=new iFraDiasLaborales();
//     iFraFranjaHoraria rh=new iFraFranjaHoraria();
//     ImageIcon icon;

    /**
     * Creates new form iFraModificarHorario
     */
    public iFraModificarHorario() {
        initComponents();
        arranque();
//        diaV=rhV=true;
        bandera=false;//no hay horario reg para ese dia
//        d.setClosable(false);
//        fraMenu.getEscritorio().add(d);
//        rh.setClosable(false);
//        fraMenu.getEscritorio().add(rh);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelAltaHorario = new javax.swing.JPanel();
        panelDatosHorario = new javax.swing.JPanel();
        lblIdOcupacion = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        lblOcupacion2 = new javax.swing.JLabel();
        cboDia = new javax.swing.JComboBox();
        btnOkDia = new javax.swing.JButton();
        btnAddDia = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        cboHorario = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableRango = new javax.swing.JTable();
        btnAgregar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        lblOcupacion3 = new javax.swing.JLabel();
        txtDia = new javax.swing.JTextField();
        btnAddHorario = new javax.swing.JButton();
        panelBotones = new javax.swing.JPanel();
        btnNuevo = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnInforme = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        setClosable(true);
        setTitle("Horario");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        panelAltaHorario.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Registrar Horario", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18))); // NOI18N

        panelDatosHorario.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        lblIdOcupacion.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblIdOcupacion.setText("Número");

        txtId.setEditable(false);
        txtId.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        lblOcupacion2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblOcupacion2.setText("Días Laborales");

        cboDia.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        btnOkDia.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnOkDia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/img/ok.png"))); // NOI18N
        btnOkDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkDiaActionPerformed(evt);
            }
        });

        btnAddDia.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnAddDia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/img/24_add.png"))); // NOI18N
        btnAddDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddDiaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelDatosHorarioLayout = new javax.swing.GroupLayout(panelDatosHorario);
        panelDatosHorario.setLayout(panelDatosHorarioLayout);
        panelDatosHorarioLayout.setHorizontalGroup(
            panelDatosHorarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDatosHorarioLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(panelDatosHorarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblOcupacion2)
                    .addComponent(lblIdOcupacion))
                .addGap(21, 21, 21)
                .addGroup(panelDatosHorarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDatosHorarioLayout.createSequentialGroup()
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panelDatosHorarioLayout.createSequentialGroup()
                        .addComponent(cboDia, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnOkDia, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddDia, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24))))
        );
        panelDatosHorarioLayout.setVerticalGroup(
            panelDatosHorarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDatosHorarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDatosHorarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblIdOcupacion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDatosHorarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDatosHorarioLayout.createSequentialGroup()
                        .addGroup(panelDatosHorarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblOcupacion2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cboDia))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btnOkDia, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btnAddDia, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Registrar Horarios por día", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18))); // NOI18N

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel13.setText("Horario:");

        cboHorario.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jScrollPane2.setBackground(new java.awt.Color(255, 255, 255));

        jTableRango.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "", "Hora desde", "Hora hasta"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableRango.getTableHeader().setReorderingAllowed(false);
        jTableRango.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableRangoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableRango);
        if (jTableRango.getColumnModel().getColumnCount() > 0) {
            jTableRango.getColumnModel().getColumn(0).setResizable(false);
        }

        btnAgregar.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/img/ok.png"))); // NOI18N
        btnAgregar.setText("Agregar");
        btnAgregar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAgregar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEliminar.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/img/Trashcan_empty.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEliminar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        lblOcupacion3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblOcupacion3.setText("Día:");

        txtDia.setEditable(false);
        txtDia.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        btnAddHorario.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnAddHorario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/img/24_add.png"))); // NOI18N
        btnAddHorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddHorarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(lblOcupacion3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtDia)
                            .addComponent(cboHorario, 0, 171, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddHorario, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAgregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminar)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtDia)
                            .addComponent(lblOcupacion3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel13)
                                .addComponent(cboHorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnAddHorario, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnEliminar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAgregar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout panelAltaHorarioLayout = new javax.swing.GroupLayout(panelAltaHorario);
        panelAltaHorario.setLayout(panelAltaHorarioLayout);
        panelAltaHorarioLayout.setHorizontalGroup(
            panelAltaHorarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAltaHorarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAltaHorarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelDatosHorario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelAltaHorarioLayout.setVerticalGroup(
            panelAltaHorarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAltaHorarioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelDatosHorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        panelBotones.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        btnNuevo.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/img/New.png"))); // NOI18N
        btnNuevo.setText("Nuevo");
        btnNuevo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNuevo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnGuardar.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/img/Save.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnGuardar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnInforme.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        btnInforme.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/img/Tasks.png"))); // NOI18N
        btnInforme.setText("Informe");
        btnInforme.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnInforme.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnInforme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInformeActionPerformed(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/img/cancel32.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBotonesLayout = new javax.swing.GroupLayout(panelBotones);
        panelBotones.setLayout(panelBotonesLayout);
        panelBotonesLayout.setHorizontalGroup(
            panelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBotonesLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(btnNuevo)
                .addGap(29, 29, 29)
                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(btnInforme)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(btnCancelar)
                .addGap(34, 34, 34))
        );

        panelBotonesLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCancelar, btnGuardar, btnInforme, btnNuevo});

        panelBotonesLayout.setVerticalGroup(
            panelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBotonesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnInforme, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelar)
                    .addComponent(btnNuevo))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelBotonesLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnCancelar, btnGuardar, btnInforme, btnNuevo});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelAltaHorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelBotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(panelAltaHorario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelBotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOkDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkDiaActionPerformed

        if(cboDia.getSelectedIndex()==-1){
            JOptionPane.showMessageDialog(this, "<html><font size=5>Seleccione un día para registrar horarios.");
            cboDia.grabFocus();
//            return;
        }else if(cboDia.getSelectedIndex()>-1){
            this.txtDia.setText(cboDia.getSelectedItem().toString());
            tableModelRango();
            cargarTabla(2);
        }
//        if(cboDia.getSelectedIndex()>-1){
//            this.txtDia.setText(cboDia.getSelectedItem().toString());
//            cboDia.grabFocus();
//            return;
//        }
        
        
    }//GEN-LAST:event_btnOkDiaActionPerformed

    private void jTableRangoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableRangoMouseClicked
        //        obtenerTabla();
    }//GEN-LAST:event_jTableRangoMouseClicked

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        agregar();
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        eliminar();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        nuevo();
        //tamMod();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        guardar();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnInformeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInformeActionPerformed
        //informe();
        Frame f = JOptionPane.getFrameForComponent(this);
        dlgOpHr dialog = new dlgOpHr(f, true);
        dialog.show();
    }//GEN-LAST:event_btnInformeActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        arranque();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnAddDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddDiaActionPerformed
//    if(diaV){          
////            a.setPaciente(this.txtApePac.getText(), this.txtNomPac.getText(), this.txtIdPac.getText());
//            d.show();
////            this.btnAgenda.setText("Cerrar Agenda");
//            icon = createImageIcon("img/24_Delete.png");
////            icon = createImageIcon("img/24_eye-close.png");
//            this.btnAddDia.setIcon(icon);
//            if(fraMenu.getEscritorio().getAllFrames().length==1){
//                fraMenu.getEscritorio().add(d);
//                d.show();
//                
//            }           
//            diaV=false;
//        }else {
//            fraMenu.getEscritorio().setSelectedFrame(this);
//            d.hide();
//            diaV=true;
////            this.btnAgenda.setText("Agenda Tel.");
//            //ACTUALIZAR COMBODIA!
//            icon = createImageIcon("img/24_add.png");
////            icon = createImageIcon("img/24_eye-open.png");
//            this.btnAddDia.setIcon(icon);
//            cargarComboDía();
//        }
        limpiarVentanas();
        iFraDiasLaborales p=new iFraDiasLaborales();
        p.setModal(true); 
        p.nuevo();
        fraMenu.getEscritorio().add(p);
        centrarVentanas();
        p.show();
        cargarComboDía();
        cboDia.setSelectedIndex(-1);
    }//GEN-LAST:event_btnAddDiaActionPerformed

    private void btnAddHorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddHorarioActionPerformed
//        if(rhV){          
////            a.setPaciente(this.txtApePac.getText(), this.txtNomPac.getText(), this.txtIdPac.getText());
//            rh.show();
////            this.btnAgenda.setText("Cerrar Agenda");
//            icon = createImageIcon("img/24_Delete.png");
//            this.btnAddHorario.setIcon(icon);
//            if(fraMenu.getEscritorio().getAllFrames().length==1){
//                fraMenu.getEscritorio().add(rh);
//                rh.show();
//                
//            }           
//            rhV=false;
//        }else {
//            fraMenu.getEscritorio().setSelectedFrame(this);
////            d.hide();
//            rh.hide();
//            rhV=true;
////            this.btnAgenda.setText("Agenda Tel.");
//            icon = createImageIcon("img/24_add.png");
//            this.btnAddHorario.setIcon(icon);
//            //ACTUALIZAR COMBODIA!
//            cargarComboRangoHr();
//        }
        limpiarVentanas();
        iFraFranjaHoraria p=new iFraFranjaHoraria();
        p.setModal(true); 
        p.nuevo();
        fraMenu.getEscritorio().add(p);
        centrarVentanas();
        p.show();
        cargarComboRangoHr();
        cboHorario.setSelectedIndex(-1);
    }//GEN-LAST:event_btnAddHorarioActionPerformed

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
//        d.hide();
//        rh.hide();
    }//GEN-LAST:event_formInternalFrameClosed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddDia;
    private javax.swing.JButton btnAddHorario;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnInforme;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnOkDia;
    private javax.swing.JComboBox cboDia;
    private javax.swing.JComboBox cboHorario;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableRango;
    private javax.swing.JLabel lblIdOcupacion;
    private javax.swing.JLabel lblOcupacion2;
    private javax.swing.JLabel lblOcupacion3;
    private javax.swing.JPanel panelAltaHorario;
    private javax.swing.JPanel panelBotones;
    private javax.swing.JPanel panelDatosHorario;
    private javax.swing.JTextField txtDia;
    private javax.swing.JTextField txtId;
    // End of variables declaration//GEN-END:variables

private void arranque(){ 
    tableModelRango();
    this.btnGuardar.setEnabled(false);
    this.btnInforme.setEnabled(true);
    this.btnNuevo.setEnabled(true);
    this.btnGuardar.setText("Guardar");
    EnableForm(panelAltaHorario,false);
    cargarComboDía();//Trae todos los dias, debo filtrar por estado
    cargarComboRangoHr();
    clearForm(panelAltaHorario);
}


public void tableModelRango(){
    this.jTableRango.getColumnModel().getColumn(0).setPreferredWidth(0);
    this.jTableRango.getColumnModel().getColumn(0).setMaxWidth(0);
    this.jTableRango.getColumnModel().getColumn(0).setMinWidth(0);
    this.jTableRango.getColumnModel().getColumn(1).setPreferredWidth(70);
    this.jTableRango.getColumnModel().getColumn(2).setPreferredWidth(70);
    jTableRango.getTableHeader().setFont(new Font("Segoe UI", Font.ITALIC, 18));
    jTableRango.setFont(new Font("Segoe UI", Font.PLAIN, 18));
    jTableRango.setRowHeight(20);
    modelRango = (DefaultTableModel)this.jTableRango.getModel();
    modelRango.setNumRows(0);
}

public void cargarComboDía(){   
    List<DiaLaboral> lista=null;
    this.cboDia.removeAllItems();
    horarioDAO= new HorarioDAO();
    lista =horarioDAO.getDiasLaborales(0);
    
    for(DiaLaboral diaList : lista){
        this.cboDia.addItem(diaList.getDes());
    }   
    
}

public void cargarComboRangoHr(){
     //cargarComboRangoHorario
    this.cboHorario.removeAllItems();
    List<RangoHorario> lista =AbstractDAO.getListaEntidades(RangoHorario.class);
    for(RangoHorario horarioList : lista){
        //cargarelmodelo!!para tener el id
        this.cboHorario.addItem(horarioList.getHoraIni() + " a " + horarioList.getHoraFin() );
    }
    if(lista.isEmpty()){
        this.cboHorario.addItem("No hay horarios.");
    }
}

public boolean cambioDia(){
    boolean res=false;
    String lbl=txtDia.getText();
    if(!lbl.equals(cboDia.getSelectedItem()))
        res=true;
    return res;

}

public void agregar(){
    if(!validar()){
        //JOptionPane.showMessageDialog(null, "Imposible guardar hay campos vacios.");
    }
    else{        
        verificar(); //Verifica si ese RangoHorario ya fue agregado 
        if(var>=1){
            JOptionPane.showMessageDialog(this, "<html><font size=5>Rango Horario ya Agregado.");
        }   
        else{
            cargarTabla(1);
        } 
    }  
}//fin agregar

public void cargarTabla(int op){
    if (op==1){
        int id = cboHorario.getSelectedIndex()+1;
        List<RangoHorario> lista = null; 
        lista=AbstractDAO.getListaEntidadesXid(RangoHorario.class, id);
        
        for (Iterator<RangoHorario> it = lista.iterator(); it.hasNext();) {
            RangoHorario h = it.next();
            modelRango.addRow(new Object[]{
                h.getId(), h.getHoraIni(), h.getHoraFin()
            });
        } 
        if(lista.isEmpty())JOptionPane.showMessageDialog(this, "<html><font size=5>No hay Rangos Horarios registrados..");
    }
    else if (op==2){
        String diaSemana=this.txtDia.getText();
//        JOptionPane.showMessageDialog(this, diaSemana);
        horarioDAO= new HorarioDAO();
        List<HorarioXDia> list =horarioDAO.getHorarios(diaSemana);
        
        for(int i=0; i< list.size(); i++){
                modelRango.addRow(new Object[]{
                    list.get(i).getIdRango(), list.get(i).getHoraIni(), list.get(i).getHoraFin()
                });
            }
        if(list.isEmpty()){
            JOptionPane.showMessageDialog(this, "<html><font size=5>No ha registrado ningún horario para este dia");
            bandera=true;
//            JOptionPane.showMessageDialog(this, "bandera=true");
        }
        else{
            bandera=false;
//            JOptionPane.showMessageDialog(this, "bandera=false");
        }
    }
}

public void verificar(){
    var = 0; //Recorre la tabla para saber si ya esta agregado ese idArticulo
    int idAr = cboHorario.getSelectedIndex()+1;
    if(this.jTableRango.getRowCount()>=1){
        for (int i = 0; i < this.jTableRango.getRowCount(); i++) {
            Object valueAt = modelRango.getValueAt(i, 0);
            int parseInt = Integer.parseInt(valueAt.toString());
            if(idAr == parseInt){
                var = 1;//encontro uno igual!
                //idHorario = i;
            }        
        }        
    }  
}

public boolean validar(){
    String tit="Atención"; String msj; 
    boolean res=true;
        
    
    if(this.cboDia.getSelectedIndex()==-1)
      {   msj="<html><font size=5 style=color:red;>Día. Dato Requerido";
          JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
          cboDia.grabFocus();
          return false;
      }
    
    if(this.txtDia.getText().isEmpty())
      {   msj="<html><font size=5 style=color:red;>Día. Dato Requerido";
          JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
          cboDia.grabFocus();
          return false;
      }

    if(this.cboHorario.getSelectedIndex()==-1)
    {   msj="<html><font size=5 style=color:red;>Rango Horario. Dato Requerido.";
        JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
        cboHorario.grabFocus();
        return false;
    }
    
    if(cambioDia()){
        int showConfirmDialog = JOptionPane.showConfirmDialog(null, "<html><font size=5>Cambio el día seleccionado. Desea borrar los horarios para este día?", "Mensaje del Sistema.", JOptionPane.YES_NO_OPTION);
        if(showConfirmDialog == 0){
            //Si. borro toda la tabla.
            tableModelRango();
            return false;
        }
        else{
            //No. vuelvo el combo al dia. y foco en 
            cboDia.setSelectedItem(txtDia.getText());
            cboHorario.grabFocus();
            return false;
        }
    } 
    return res;
}

public void eliminar(){
    if(this.jTableRango.getSelectedRow()==-1){
      JOptionPane.showMessageDialog(this, "<html><font size=5>No ha seleccionado ninguna fila de la tabla.");  
    }
    else{
        int showConfirmDialog = JOptionPane.showConfirmDialog(this, "<html><font size=5>¿Desea eliminar la fila seleccionada?", "Mensaje del Sistema.", JOptionPane.YES_NO_OPTION);
        if(showConfirmDialog == 0){
            int sel = this.jTableRango.getSelectedRow();
            modelRango.removeRow(sel);
            cboHorario.requestFocus();
        }
        else{
            cboHorario.requestFocus();
        }
    }
}

public void nuevo(){
    this.btnNuevo.setEnabled(false);
    this.btnGuardar.setEnabled(true);
    this.txtId.setText("Auto");
    EnableForm(panelAltaHorario,true);
}

public void guardar(){   
    if(this.jTableRango.getRowCount()==0){
        JOptionPane.showMessageDialog(this, "<html><font size=5>No hay datos para guardar.");
    }
    else{
        int showConfirmDialog = JOptionPane.showConfirmDialog(this, "<html><font size=5>¿Desea guardar este horario?", "Mensaje del Sistema.", JOptionPane.YES_NO_OPTION);
        if(showConfirmDialog == 0){//SI
            if(!bandera){ //true no hay horarios
//                JOptionPane.showMessageDialog(this, "eliminarHR()");
                eliminarHR();
//                JOptionPane.showMessageDialog(this, "fin eliminarHR()");
            }//}
            try {//ES NUEVO
                HorarioCab horario= new HorarioCab();

                horarioDAO=new HorarioDAO();
                String desDia=txtDia.getText();

                DiaLaboral diaLaboral=horarioDAO.getDiaLaboralXnom(desDia);

                horario.setDiaLaboral(diaLaboral);

                for (int i = 0; i < this.jTableRango.getRowCount(); i++) {
                    HorarioDet detalleHorario = new HorarioDet();
                    int idRango = Integer.parseInt(String.valueOf(modelRango.getValueAt(i, 0)));                        

                    RangoHorario rangoHorario = AbstractDAO.getEntidad(idRango, RangoHorario.class);                       

                    detalleHorario.setRangoHorario(rangoHorario);
                    detalleHorario.setHorarioCab(horario);
                    horario.addHorarioDet(detalleHorario);
                }
                AbstractDAO.almacenaEntidad(horario);
                arranque();
                JOptionPane.showMessageDialog(this, "<html><font size=5>Horario guardado correctamente.");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "<html><font size=5 style=color:red;>Error guardando el horario. Verifique.");
            }       
        }
        else{//NO                
            this.txtDia.requestFocus(); //es lo mismo q gragBag
        }
    }
}

public void eliminarHR(){
//    int idCab, idDet, idRango;// = getId(); 
//    HorarioDet detalleHorario = new HorarioDet();
//    HorarioDet dh=AbstractDAO.getEntidad(idDet, HorarioDet.class);
//    AbstractDAO.borrarEntidad(dh);        
//    JOptionPane.showMessageDialog(null, "Registro Eliminado...");
//    arranque();
    try {
//        HorarioCab horario= new HorarioCab();

        horarioDAO=new HorarioDAO();
        String desDia=txtDia.getText();

        DiaLaboral diaLaboral=horarioDAO.getDiaLaboralXnom(desDia);
        int nroDia=diaLaboral.getId();
        HorarioCab cabHorario;
//        cabHorario = AbstractDAO.get

        List<HorarioDet> list = AbstractDAO.getListaEntidades(HorarioDet.class);
        
//        list.get(i).getIdRango(), list.get(i).getHoraIni(), list.get(i).getHoraFin()
//        JOptionPane.showMessageDialog(null, "list.size()" +list.size());
        HorarioDet detalleHorario;
        int comp, idDet, idCab, dia;
        comp=idDet=idCab=dia=0;
        for (int i = 0; i < list.size(); i++) {
            idDet = list.get(i).getId(); //horarioCab_id
            idCab=list.get(i).getHorarioCab().getId();
            dia = list.get(i).getHorarioCab().getDiaLaboral().getId();
            if(dia==nroDia){
                comp=idCab;
            }
//            JOptionPane.showMessageDialog(null, "idDet: " +idDet + "idCab: " + idCab + "Dia" + dia + "NroDia ingresado" + nroDia);
            if(idCab==comp && idDet!=0){                      
                detalleHorario=AbstractDAO.getEntidad(idDet, HorarioDet.class); 
                AbstractDAO.borrarEntidad(detalleHorario);
            }
        }  
        if(idCab!=0){
            cabHorario=AbstractDAO.getEntidad(idCab, HorarioCab.class);
            AbstractDAO.borrarEntidad(cabHorario);
        }
//        JOptionPane.showMessageDialog(null, "Horario eliminado correctamente.");
    } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, "Error eliminando el horario. Verifique.");
        }
    
}

private void limpiarVentanas(){
    int cant=fraMenu.getEscritorio().getAllFrames().length;
    JInternalFrame internalFrames[] = fraMenu.getEscritorio().getAllFrames();
    for (int i=0; i<cant; i++) {        
        if(!internalFrames[i].getTitle().equals("Horario")){
            internalFrames[i].dispose();
        }
    }
}
    
public void centrarVentanas(){
    int x,y,cant;
    cant=fraMenu.getEscritorio().getAllFrames().length;
    JInternalFrame internalFrames[] = fraMenu.getEscritorio().getAllFrames();
    for (int i=0; i<cant; i++) {         
        if(!internalFrames[i].getTitle().equals("Horario")){
            x = (fraMenu.getEscritorio().getWidth()/2) - internalFrames[i].getWidth()/2;
            y = (fraMenu.getEscritorio().getHeight()/2) - internalFrames[i].getHeight()/2;
            internalFrames[i].setLocation(x, y);
        }
    }
}

/**
* Método que limpia los datos de todos los componentes
* susceptibles de ser puestos en blanco, como los "JTextField"
* "jTextAreas", etc…, que pertenezcan a un "JPanel" o "JScrollPane",
* es recursivo, asi que si dentro del panel hay otro panel con
* más componentes susceptibles también los pondrá en blanco.
     * @param panel
*/
    public void clearForm(Object panel) {
        // Obtenemos el nombre de la clase
        String nombre_clase = panel.getClass().getName();
        switch (nombre_clase) {
            case "javax.swing.JPanel":
                // Estamos en el caso de un JPanel
                clearPanel((javax.swing.JPanel) panel);
                break;
            case "javax.swing.JScrollPane":
                // Estamos en el caso de un JScrollPane
                clearScrollPane((javax.swing.JScrollPane) panel);
                break;
            case "javax.swing.JTabbedPane":
                // Estamos en el caso de un JScrollPane
                clearTabbedPane((javax.swing.JTabbedPane) panel);
                break;
        }
    }

    private void clearPanel(javax.swing.JPanel panel) {
        // Obtenemos todos los componentes que cuelgan del panel
        java.awt.Component[] componentes = panel.getComponents();
        for (Component componente : componentes) {
            clearComponent(componente);
        }
    }

    private void clearTabbedPane(javax.swing.JTabbedPane panel) {
        // Obtenemos todos los componentes que cuelgan del panel
        java.awt.Component[] componentes = panel.getComponents();
        for (Component componente : componentes) {
            clearComponent(componente);
        }
    }
    
    private void clearScrollPane(javax.swing.JScrollPane panel) {
        // Obtenemos todos los componentes que cuelgan del panel
        java.awt.Component[] componentes = panel.getViewport().getComponents();
        for (Component componente : componentes) {
            clearComponent(componente);
        }
    }

    private void clearComponent(java.awt.Component comp) {
        // Nombre de la clase del componente
        String nombre_clase = comp.getClass().getName();
        switch (nombre_clase) {
            case "javax.swing.JTextField":
                // Es un JTextField asi que lo ponemos en blanco
                ((javax.swing.JTextField) comp).setText("");
                break;
            case "javax.swing.JComboBox":
                // Es un JComboBox asi que ponemos el primer elemento
                ((javax.swing.JComboBox) comp).setSelectedIndex(-1);
                break;
            case "javax.swing.JTextArea":
                // Es un JTextArea asi que lo ponemos en blanco
                ((javax.swing.JTextArea) comp).setText("");
                break;
            case "javax.swing.JPanel":
                // Es un JPanel asi que llamamos a clearPanel
                clearPanel((javax.swing.JPanel) comp);
                break;
            case "javax.swing.JScrollPane":
                // Es un JScrollPane asi que llamamos a clearScrollPane
                clearScrollPane((javax.swing.JScrollPane) comp);
                break;
            case "javax.swing.JTabbedPane":
                // Es un JScrollPane asi que llamamos a clearScrollPane
                clearTabbedPane((javax.swing.JTabbedPane) comp);
                break;
        }
    }
    
    
    
  /**
* Método habilita o inhabilita todos los componentes
     * @param panel
     * @param op
*/
    public void EnableForm(Object panel, boolean op) {
        // Obtenemos el nombre de la clase
        String nombre_clase = panel.getClass().getName();
        switch (nombre_clase) {
            case "javax.swing.JPanel":
                // Estamos en el caso de un JPanel
                enablePanel((javax.swing.JPanel) panel, op);
                break;
            case "javax.swing.JScrollPane":
                // Estamos en el caso de un JScrollPane
                enableScrollPane((javax.swing.JScrollPane) panel, op);
                break;
            case "javax.swing.JTabbedPane":
                // Estamos en el caso de un JScrollPane
                enableTabbedPane((javax.swing.JTabbedPane) panel, op);
                break;
        }
    }

    private void enablePanel(javax.swing.JPanel panel, boolean op) {
        // Obtenemos todos los componentes que cuelgan del panel
        java.awt.Component[] componentes = panel.getComponents();
        for (Component componente : componentes) {
            enableComponent(componente, op);
        }
    }

    private void enableTabbedPane(javax.swing.JTabbedPane panel, boolean op) {
        // Obtenemos todos los componentes que cuelgan del panel
        java.awt.Component[] componentes = panel.getComponents();
        for (Component componente : componentes) {
            enableComponent(componente, op);
        }
    }
    
    private void enableScrollPane(javax.swing.JScrollPane panel, boolean op) {
        // Obtenemos todos los componentes que cuelgan del panel
        java.awt.Component[] componentes = panel.getViewport().getComponents();
        for (Component componente : componentes) {
            enableComponent(componente, op);
        }
    }

    private void enableComponent(java.awt.Component comp, boolean op) {
        // Nombre de la clase del componente
        String nombre_clase = comp.getClass().getName();
        switch (nombre_clase) {
            case "javax.swing.JTextField":
                // Es un JTextField asi que lo ponemos en blanco
                ((javax.swing.JTextField) comp).setEnabled(op);
                break;
            case "javax.swing.JComboBox":
                // Es un JComboBox asi que ponemos el primer elemento
                ((javax.swing.JComboBox) comp).setEnabled(op);
                break;
            case "javax.swing.JTextArea":
                // Es un JTextArea asi que lo ponemos en blanco
                ((javax.swing.JTextArea) comp).setEnabled(op);
                break;
            case "javax.swing.JLabel":
                // Es un JTextArea asi que lo ponemos en blanco
                ((javax.swing.JLabel) comp).setEnabled(op);
                break;
            case "javax.swing.JTable":
                // Es un JTextArea asi que lo ponemos en blanco
                ((javax.swing.JTable) comp).setEnabled(op);
                break;
            case "javax.swing.JButton":
                // Es un JTextArea asi que lo ponemos en blanco
                ((javax.swing.JButton) comp).setEnabled(op);
                break;
            case "javax.swing.JPanel":
                // Es un JPanel asi que llamamos a clearPanel
                enablePanel((javax.swing.JPanel) comp, op);
                ((javax.swing.JPanel) comp).setEnabled(op);
                break;
            case "javax.swing.JScrollPane":
                // Es un JScrollPane asi que llamamos a clearScrollPane
                enableScrollPane((javax.swing.JScrollPane) comp, op);
                ((javax.swing.JScrollPane) comp).setEnabled(op);
                break;
            case "javax.swing.JTabbedPane":
                // Es un JScrollPane asi que llamamos a clearScrollPane
                enableTabbedPane((javax.swing.JTabbedPane) comp, op);
                ((javax.swing.JTabbedPane) comp).setEnabled(op);
                break;
        }
    } 

}
