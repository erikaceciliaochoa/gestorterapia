/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Vista;

import Controlador.AbstractDAO;
import Controlador.PacientesDAO;
import Controlador.TurnoDAO;
import Controlador.conexion;
import Modelo.Diagnostico;
import Modelo.Paciente;
import Modelo.Seguimiento;
import Modelo.odt.DiagnosticosXCant;
import Modelo.odt.FechasDiagnostico;
import java.awt.Component;
import java.awt.Font;
import java.awt.Frame;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.Calendar;
import java.util.Iterator;
import java.util.List;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.table.DefaultTableModel;
import util.Fecha;
import util.modalInternalFrame;

/**
 *
 * @author usuario
 */
public class iFraSeguimiento extends modalInternalFrame {
    PacientesDAO pacientesDAO = null;
    TurnoDAO turnoDAO =null;
    Fecha fecha=null;
    private DefaultTableModel model;
    private DefaultTableModel modelF;
    private int numSeg;
    private int codPac;

    /**
     * Creates new form iFraSeguimiento
     */
    public iFraSeguimiento() {
        initComponents();
        grupoBotones();
        arranque();
        fecha=new Fecha();
        maxLetras(this.txtConclusion);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        btnGroupControl = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablalDiagnosticos = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaFechas = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        lblPaciente = new javax.swing.JLabel();
        btnSeleccionarPac = new javax.swing.JButton();
        panelBotones = new javax.swing.JPanel();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        panelDatos = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtConclusion = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        rbtNoNecesario = new javax.swing.JRadioButton();
        rbtPersiste = new javax.swing.JRadioButton();
        panelEncabezado = new javax.swing.JPanel();
        txtHora = new javax.swing.JTextField();
        txtFecha = new javax.swing.JTextField();
        txtNum = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        txtDiag = new javax.swing.JTextField();
        txtPac = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Seguimiento de Diagnóstico");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Diagnósticos realizados al paciente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18))); // NOI18N

        tablalDiagnosticos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Diagnóstico", "Cant veces tratado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablalDiagnosticos.getTableHeader().setReorderingAllowed(false);
        tablalDiagnosticos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablalDiagnosticosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablalDiagnosticos);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Diagnóstico seleccionado", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18))); // NOI18N

        tablaFechas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Fecha", "Descripción"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaFechas.getTableHeader().setReorderingAllowed(false);
        tablaFechas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaFechasMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tablaFechas);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Paciente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18))); // NOI18N

        lblPaciente.setBackground(new java.awt.Color(255, 255, 255));
        lblPaciente.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        lblPaciente.setForeground(new java.awt.Color(51, 51, 255));
        lblPaciente.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPaciente.setText("nombre");
        lblPaciente.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        lblPaciente.setOpaque(true);

        btnSeleccionarPac.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnSeleccionarPac.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/img/_select.png"))); // NOI18N
        btnSeleccionarPac.setText("Seleccionar");
        btnSeleccionarPac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarPacActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(lblPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 594, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSeleccionarPac, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lblPaciente, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSeleccionarPac, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelBotones.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        btnGuardar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/img/Save.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnGuardar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/img/cancel32.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnNuevo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/img/New.png"))); // NOI18N
        btnNuevo.setText("Nuevo");
        btnNuevo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNuevo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBotonesLayout = new javax.swing.GroupLayout(panelBotones);
        panelBotones.setLayout(panelBotonesLayout);
        panelBotonesLayout.setHorizontalGroup(
            panelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBotonesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnNuevo)
                .addGap(56, 56, 56)
                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(btnCancelar)
                .addGap(214, 214, 214))
        );

        panelBotonesLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCancelar, btnGuardar, btnNuevo});

        panelBotonesLayout.setVerticalGroup(
            panelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBotonesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnNuevo)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelar))
                .addContainerGap())
        );

        panelBotonesLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnCancelar, btnGuardar});

        panelDatos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtConclusion.setColumns(20);
        txtConclusion.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtConclusion.setRows(5);
        jScrollPane4.setViewportView(txtConclusion);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Conclusión");

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Control", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18))); // NOI18N

        rbtNoNecesario.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtNoNecesario.setText("No es necesario");

        rbtPersiste.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtPersiste.setText(" Control si el problema persiste");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(rbtNoNecesario)
                        .addGap(128, 128, 128))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(rbtPersiste)
                        .addContainerGap())))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbtNoNecesario)
                .addGap(11, 11, 11)
                .addComponent(rbtPersiste)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelEncabezado.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        txtHora.setEditable(false);
        txtHora.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtHora.setForeground(new java.awt.Color(0, 51, 153));
        txtHora.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtFecha.setEditable(false);
        txtFecha.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtFecha.setForeground(new java.awt.Color(0, 51, 153));
        txtFecha.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtNum.setEditable(false);
        txtNum.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtNum.setForeground(new java.awt.Color(0, 51, 153));
        txtNum.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel16.setText("Nro");

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel17.setText("Fecha");

        jLabel18.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel18.setText("Hora");

        javax.swing.GroupLayout panelEncabezadoLayout = new javax.swing.GroupLayout(panelEncabezado);
        panelEncabezado.setLayout(panelEncabezadoLayout);
        panelEncabezadoLayout.setHorizontalGroup(
            panelEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEncabezadoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNum, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addGroup(panelEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelEncabezadoLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(txtHora, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelEncabezadoLayout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jLabel17)
                        .addGap(78, 78, 78)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        panelEncabezadoLayout.setVerticalGroup(
            panelEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEncabezadoLayout.createSequentialGroup()
                .addGap(0, 5, Short.MAX_VALUE)
                .addGroup(panelEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 6, Short.MAX_VALUE))
        );

        txtDiag.setEditable(false);
        txtDiag.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        txtPac.setEditable(false);
        txtPac.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jLabel19.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel19.setText("Paciente");

        jLabel20.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel20.setText("Diagnóstico");

        javax.swing.GroupLayout panelDatosLayout = new javax.swing.GroupLayout(panelDatos);
        panelDatos.setLayout(panelDatosLayout);
        panelDatosLayout.setHorizontalGroup(
            panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDatosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addGroup(panelDatosLayout.createSequentialGroup()
                        .addGroup(panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel20)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPac, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDiag, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 24, Short.MAX_VALUE)
                .addGroup(panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelEncabezado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelDatosLayout.setVerticalGroup(
            panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDatosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panelEncabezado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelDatosLayout.createSequentialGroup()
                        .addGroup(panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDiag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelDatosLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelDatos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelBotones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelBotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        guardar();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        arranque();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void tablalDiagnosticosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablalDiagnosticosMouseClicked
        if(this.tablalDiagnosticos.isEnabled()){
            tableModelF();  
            String nomDiag = getDiagnostico();
            //codPac obtenerlo cuando es un nombre
            if(codPac==0)
                codPac=conexion.getInstance().getCodPacienteXnom(this.txtPac.getText());
            List<FechasDiagnostico> lista = null;
            lista=conexion.getInstance().geFechasDiagnostico(codPac, nomDiag);
            
            for (Iterator<FechasDiagnostico> it = lista.iterator(); it.hasNext();) {
                FechasDiagnostico t = it.next();
                    modelF.addRow(new Object[]{
                        fecha.getStringXfecha(t.getFechas()), t.getDesDiagnostico()
                    });
                this.txtDiag.setText(t.getDiagnostico());
            } 

            if(lista.isEmpty()){
                this.txtDiag.setText(null);
                JOptionPane.showMessageDialog(this, "El paciente seleccionado no posee diagnósticos..");
            }     
        }   
    }//GEN-LAST:event_tablalDiagnosticosMouseClicked

    private void tablaFechasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaFechasMouseClicked

        String car=getObservaciones();
        if(!car.isEmpty())
           JOptionPane.showInternalMessageDialog(this, getObservaciones());
    }//GEN-LAST:event_tablaFechasMouseClicked

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed

        nuevo();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnSeleccionarPacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarPacActionPerformed

        Frame f = JOptionPane.getFrameForComponent(this);
        dlgSeleccion dialog = new dlgSeleccion(f, true);
        dialog.setOpcion(2);
        dialog.show();
    }//GEN-LAST:event_btnSeleccionarPacActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.ButtonGroup btnGroupControl;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnSeleccionarPac;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblPaciente;
    private javax.swing.JPanel panelBotones;
    private javax.swing.JPanel panelDatos;
    private javax.swing.JPanel panelEncabezado;
    private javax.swing.JRadioButton rbtNoNecesario;
    private javax.swing.JRadioButton rbtPersiste;
    private javax.swing.JTable tablaFechas;
    private javax.swing.JTable tablalDiagnosticos;
    private javax.swing.JTextArea txtConclusion;
    private javax.swing.JTextField txtDiag;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtHora;
    private javax.swing.JTextField txtNum;
    private javax.swing.JTextField txtPac;
    // End of variables declaration//GEN-END:variables

public void setPaciente(int id, String nombre){
    codPac=id;
    lblPaciente.setText(nombre.toUpperCase());

  if(id!=0 && !nombre.isEmpty()){
//      limpiar();
      cargarTabla(1);
  }
}
    

public void tableModel(){
    this.tablalDiagnosticos.getColumnModel().getColumn(0).setPreferredWidth(100);
    this.tablalDiagnosticos.getColumnModel().getColumn(1).setPreferredWidth(80);
    tablalDiagnosticos.getTableHeader().setFont(new Font("Segoe UI", Font.ITALIC, 18));
    tablalDiagnosticos.setFont(new Font("Segoe UI", Font.PLAIN, 18));
    tablalDiagnosticos.setRowHeight(30);
    model = (DefaultTableModel)this.tablalDiagnosticos.getModel();
    model.setNumRows(0);
}

public void tableModelF(){
    this.tablaFechas.getColumnModel().getColumn(0).setPreferredWidth(80);
    this.tablaFechas.getColumnModel().getColumn(1).setPreferredWidth(120);
    tablaFechas.getTableHeader().setFont(new Font("Segoe UI", Font.ITALIC, 18));
    tablaFechas.setFont(new Font("Segoe UI", Font.PLAIN, 18));
    tablaFechas.setRowHeight(30);
    modelF = (DefaultTableModel)this.tablaFechas.getModel();
    modelF.setNumRows(0);
}

private String getDiagnostico(){
    int selectedRow = this.tablalDiagnosticos.getSelectedRow();
    Object valueAt = model.getValueAt(selectedRow, 0);
    String diag = valueAt.toString();
    return diag;
}

private String getObservaciones(){
    Object valueAt; String obs="";
    try{
        int selectedRow = this.tablaFechas.getSelectedRow();
        valueAt = modelF.getValueAt(selectedRow, 1);
        obs = valueAt.toString();
    }catch(Exception e){System.out.printf("Tabla observaciones vacia.");}
    
    return obs;
}

private void grupoBotones(){
        btnGroupControl=new ButtonGroup();
        btnGroupControl.add(this.rbtNoNecesario);
        btnGroupControl.add(this.rbtPersiste);
        btnGroupControl.clearSelection();
    }

public void cargarTabla(int op){
    List<DiagnosticosXCant> lista = null;
    turnoDAO = new TurnoDAO();
    tableModel();
    //
    tableModelF();
    this.txtPac.setText("");
    this.txtDiag.setText("");

    if(codPac!=0){
        lista=conexion.getInstance().getDiagnosticos(codPac);
        for (Iterator<DiagnosticosXCant> it = lista.iterator(); it.hasNext();) {
            DiagnosticosXCant d = it.next();
            model.addRow(new Object[]{
               d.getDiagnostico(), d.getCant()
            });
            this.txtPac.setText(d.getPaciente());
        }
    }
    if(lista.isEmpty()){
        this.txtPac.setText(null);
        JOptionPane.showMessageDialog(this, "<html><font size=5>El paciente seleccionado no posee diagnósticos..");      
    }
}


public void nuevo(){  
    obtenetID(); //Obtiene el nro de turno!!
    this.btnGuardar.setEnabled(true);
    this.btnNuevo.setEnabled(false);
    
//    this.txtObservaciones.setEnabled(true);

    String calString = fecha.getString();
    String calHora = fecha.getStringHora();
    
    this.txtFecha.setText(calString);
    this.txtNum.setText(String.valueOf(numSeg));    
    this.txtHora.setText(calHora);
    
    EnableForm(panelDatos, true);
    this.txtDiag.setEnabled(false);
    this.txtPac.setEnabled(false);
    this.txtConclusion.grabFocus();
}

public void obtenetID(){
    numSeg = 0;
    List<Seguimiento> lista = AbstractDAO.getListaEntidades(Seguimiento.class);
    for (Iterator<Seguimiento> it = lista.iterator(); it.hasNext();) {
        Seguimiento seg = it.next();
        numSeg = seg.getNum() + 1;
    }
    if(numSeg==0){
        numSeg=1;
    } 
}

public void arranque(){
    this.btnNuevo.setEnabled(true);
    this.btnGuardar.setEnabled(false);
    this.txtNum.setText(null);
    this.txtFecha.setText(null);
    this.txtHora.setText(null);
    this.lblPaciente.setText(null);
//    this.txtObservaciones.setText(null);
    txtConclusion.setLineWrap(true);
    txtConclusion.setText(null);
    this.txtDiag.setText(null);
    this.txtPac.setText(null);
    tableModel();
    tableModelF(); 
    this.btnGroupControl.clearSelection();
    EnableForm(panelDatos, false);
}

public void cargarPaciente(){// EN LOS COMPONENTES PARA LUEGO EDITAR
        int idPac = codPac;
        Paciente pac = AbstractDAO.getEntidad(idPac, Paciente.class);

        this.txtPac.setText(pac.getApellido() + " " + pac.getNombre());
        this.btnNuevo.setEnabled(false);
}

public void guardar(){
    if(!validar()){
        //JOptionPane.showMessageDialog(null, "Imposible guardar hay campos vacios.");
    }
    else{
        Seguimiento seg=new Seguimiento();

        Paciente paciente=AbstractDAO.getEntidad(codPac, Paciente.class);
        
        Diagnostico diagnostico=turnoDAO.getDiagnostico(this.txtDiag.getText());
        Calendar fechaSeg=fecha.retornarCalendar(this.txtFecha.getText());
        String horaSeg=this.txtHora.getText();
        seg.setFecha(fechaSeg);
        seg.setHora(horaSeg);
        seg.setPaciente(paciente);
        seg.setDiagnostico(diagnostico);
        seg.setConclusion(this.txtConclusion.getText());
        
        if(this.rbtNoNecesario.isSelected())
            seg.setEstadoControl(Seguimiento.control.NO);
        else
            seg.setEstadoControl(Seguimiento.control.SI);

        AbstractDAO.almacenaEntidad(seg);

        arranque();
        JOptionPane.showMessageDialog(this, "<html><font size=5>Seguimiento guardado correctamente.");
    }
}

public boolean validar(){
    
    boolean res=true;
    String tit="Atención"; String msj;    
    if((txtPac.getText().trim()).length()==0)
    {   msj="<html><h2 style=color:red;>Debe seleccionar un Paciente.";  
        JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
        btnSeleccionarPac.grabFocus();
        return false;
    }

    if((txtDiag.getText().trim()).length()==0)
    {   msj="<html><h2 style=color:red;>Debe seleccionar un Diagnóstico.";
        JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
        tablalDiagnosticos.grabFocus();
        return false;
    }

    if((this.txtFecha.getText().trim()).length()==0)
      {   msj="<html><h2 style=color:red;>Fecha de Seguimiento. Dato Requerido.";
          JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
          btnNuevo.grabFocus();
          return false;
      }
    
//    if(!this.rbtNoNecesario.isSelected() && !this.rbtDias.isSelected() && !this.rbtPersiste.isSelected()){
    if(!this.rbtNoNecesario.isSelected() && !this.rbtPersiste.isSelected()){  
      msj="<html><h2 style=color:red;>Tipo de control. Dato Requerido.";
      JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
//      btnNuevo.grabFocus();
      return false;
    }
    
    return res;
}


 /**
* Método habilita o inhabilita todos los componentes
     * @param panel
     * @param op
*/
    public void EnableForm(Object panel, boolean op) {
        String nombre_clase = panel.getClass().getName();
        switch (nombre_clase) {
            case "javax.swing.JPanel":
                enablePanel((javax.swing.JPanel) panel, op);
                break;
            case "javax.swing.JScrollPane":
                enableScrollPane((javax.swing.JScrollPane) panel, op);
                break;
            case "javax.swing.JTabbedPane":
                enableTabbedPane((javax.swing.JTabbedPane) panel, op);
                break;
        }
    }

    private void enablePanel(javax.swing.JPanel panel, boolean op) {
        java.awt.Component[] componentes = panel.getComponents();
        for (Component componente : componentes) {
            enableComponent(componente, op);
        }
    }

    private void enableTabbedPane(javax.swing.JTabbedPane panel, boolean op) {
        java.awt.Component[] componentes = panel.getComponents();
        for (Component componente : componentes) {
            enableComponent(componente, op);
        }
    }
    
    private void enableScrollPane(javax.swing.JScrollPane panel, boolean op) {
        java.awt.Component[] componentes = panel.getViewport().getComponents();
        for (Component componente : componentes) {
            enableComponent(componente, op);
        }
    }

    private void enableComponent(java.awt.Component comp, boolean op) {
        String nombre_clase = comp.getClass().getName();
        switch (nombre_clase) {
            case "javax.swing.JTextField":
                ((javax.swing.JTextField) comp).setEnabled(op);
                break;
            case "javax.swing.JComboBox":
                ((javax.swing.JComboBox) comp).setEnabled(op);
                break;
            case "javax.swing.JTextArea":
                ((javax.swing.JTextArea) comp).setEnabled(op);
                break;
            case "javax.swing.JCheckBox":
                ((javax.swing.JCheckBox) comp).setEnabled(op);
                break;
            case "javax.swing.JRadioButton":
            ((javax.swing.JRadioButton) comp).setEnabled(op);
            break;
            case "javax.swing.JLabel":
                ((javax.swing.JLabel) comp).setEnabled(op);
                break;
            case "javax.swing.JTable":
                ((javax.swing.JTable) comp).setEnabled(op);
                break;
            case "javax.swing.JButton":
                ((javax.swing.JButton) comp).setEnabled(op);
                break;
            case "javax.swing.JPanel":
                enablePanel((javax.swing.JPanel) comp, op);
                ((javax.swing.JPanel) comp).setEnabled(op);
                break;
            case "javax.swing.JScrollPane":
                enableScrollPane((javax.swing.JScrollPane) comp, op);
                ((javax.swing.JScrollPane) comp).setEnabled(op);
                break;
            case "javax.swing.JTabbedPane":
                enableTabbedPane((javax.swing.JTabbedPane) comp, op);
                ((javax.swing.JTabbedPane) comp).setEnabled(op);
                break;
        }
    }
    
    private void maxLetras(JTextArea a){
        a.addKeyListener(new KeyAdapter() {
       @Override public void keyTyped(KeyEvent e) {            
            String text = ((JTextArea) e.getSource()).getText();
            if (text.length() >= 200) {
                e.setKeyChar((char) KeyEvent.VK_CLEAR);
                JOptionPane.showMessageDialog(null, "<html><font size=5 style=color:red;>Ha excedido el número máximo de caracteres!!! (200)", "Validando Datos",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
        });
        
    }




}
