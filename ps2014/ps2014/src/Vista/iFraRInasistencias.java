/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Vista;

import Controlador.conexion;
import Reportes.InasistenciasR;
import static Vista.iFraAdm.createImageIcon;
import java.awt.Frame;
import java.awt.Toolkit;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import util.Fecha;
import util.modalInternalFrame;

/**
 *
 * @author usuario
 */
public class iFraRInasistencias extends modalInternalFrame {
    private boolean ordPac,ordF,ordHr,asc,desc,todos,algunos;
    int anio,mes;
    Fecha f;
    ImageIcon icon = createImageIcon("img/ayuda_.png");

    /**
     * Creates new form iFraRInasistencias
     */
    public iFraRInasistencias() {
        initComponents();
        arranque();
        grupoBotones();
        ordPac=ordF=ordHr=asc=desc=todos=algunos=false;
        anio=mes=0;
        f=null;
        SNroEntero(this.txtCant);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGpOrdenar = new javax.swing.ButtonGroup();
        btnGpOrdenarTipo = new javax.swing.ButtonGroup();
        btnGpMostrar = new javax.swing.ButtonGroup();
        btnGpEstado = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        panelMostrar = new javax.swing.JPanel();
        rbtXRegistros = new javax.swing.JRadioButton();
        rbtMostrarTodos = new javax.swing.JRadioButton();
        txtCant = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        btnVer = new javax.swing.JButton();
        panelTipo = new javax.swing.JPanel();
        rbtAsc = new javax.swing.JRadioButton();
        rbtDesc = new javax.swing.JRadioButton();
        panelFiltro = new javax.swing.JPanel();
        lblFecha = new javax.swing.JLabel();
        lblInclu = new javax.swing.JLabel();
        lblEntre = new javax.swing.JLabel();
        lblY1 = new javax.swing.JLabel();
        lblPaciente = new javax.swing.JLabel();
        lblNroPac = new javax.swing.JLabel();
        txtIdPac = new javax.swing.JTextField();
        lblEstado = new javax.swing.JLabel();
        btnSeleccionarPac = new javax.swing.JButton();
        lblNomPac = new javax.swing.JLabel();
        txtNomPac = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        btnAyuda = new javax.swing.JButton();
        lblAnio = new javax.swing.JLabel();
        chooserAnio = new com.toedter.calendar.JYearChooser();
        lblMes = new javax.swing.JLabel();
        chooserMes = new com.toedter.calendar.JMonthChooser();
        chkRangoFecha = new javax.swing.JCheckBox();
        chkAnio = new javax.swing.JCheckBox();
        chkMes = new javax.swing.JCheckBox();
        rbtTurnosCancelados = new javax.swing.JRadioButton();
        rbtTurnosAdeudados = new javax.swing.JRadioButton();
        rbtTurnosInasistencias = new javax.swing.JRadioButton();
        chkPaciente = new javax.swing.JCheckBox();
        chkEstado = new javax.swing.JCheckBox();
        txtIni = new com.toedter.calendar.JDateChooser();
        txtFin = new com.toedter.calendar.JDateChooser();
        panelOrdenar = new javax.swing.JPanel();
        rbtPac = new javax.swing.JRadioButton();
        rbtFecha = new javax.swing.JRadioButton();
        rbtHr = new javax.swing.JRadioButton();

        setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        setClosable(true);
        setTitle("Consultas por Fecha y Paciente");

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 0, 36)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/img/note.png"))); // NOI18N
        jLabel1.setText("        Turnos por Paciente y Fecha");
        jLabel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        panelMostrar.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        panelMostrar.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Mostrar", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semilight", 0, 24))); // NOI18N

        rbtXRegistros.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        rbtXRegistros.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtXRegistros.setText("Listrar ");
        rbtXRegistros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtXRegistrosActionPerformed(evt);
            }
        });

        rbtMostrarTodos.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        rbtMostrarTodos.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtMostrarTodos.setText("Listar todos.");
        rbtMostrarTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtMostrarTodosActionPerformed(evt);
            }
        });

        txtCant.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtCant.setEnabled(false);

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel13.setText("registros.");

        btnVer.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnVer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/img/Preview.png"))); // NOI18N
        btnVer.setText("VER");
        btnVer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelMostrarLayout = new javax.swing.GroupLayout(panelMostrar);
        panelMostrar.setLayout(panelMostrarLayout);
        panelMostrarLayout.setHorizontalGroup(
            panelMostrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMostrarLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(rbtXRegistros)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCant, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel13)
                .addGap(72, 72, 72)
                .addComponent(rbtMostrarTodos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnVer, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        panelMostrarLayout.setVerticalGroup(
            panelMostrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMostrarLayout.createSequentialGroup()
                .addGroup(panelMostrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtXRegistros)
                    .addComponent(txtCant, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(rbtMostrarTodos)
                    .addComponent(btnVer, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelTipo.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        panelTipo.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Tipo de Ordenamiento", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semilight", 0, 24))); // NOI18N

        rbtAsc.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        rbtAsc.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtAsc.setText("Ascendente");
        rbtAsc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtAscActionPerformed(evt);
            }
        });

        rbtDesc.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        rbtDesc.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtDesc.setText("Descendente");
        rbtDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtDescActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelTipoLayout = new javax.swing.GroupLayout(panelTipo);
        panelTipo.setLayout(panelTipoLayout);
        panelTipoLayout.setHorizontalGroup(
            panelTipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTipoLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(rbtAsc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rbtDesc)
                .addGap(18, 18, 18))
        );
        panelTipoLayout.setVerticalGroup(
            panelTipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTipoLayout.createSequentialGroup()
                .addGroup(panelTipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtAsc)
                    .addComponent(rbtDesc))
                .addGap(0, 15, Short.MAX_VALUE))
        );

        panelFiltro.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        panelFiltro.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Filtro", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semilight", 0, 24))); // NOI18N
        panelFiltro.setEnabled(false);

        lblFecha.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblFecha.setText(" Fecha:");
        lblFecha.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblFecha.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblFecha.setEnabled(false);
        lblFecha.setOpaque(true);

        lblInclu.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblInclu.setText("inclusive.");
        lblInclu.setEnabled(false);

        lblEntre.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblEntre.setText("Entre");
        lblEntre.setEnabled(false);

        lblY1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblY1.setText(" y");
        lblY1.setEnabled(false);

        lblPaciente.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblPaciente.setText(" Paciente: ");
        lblPaciente.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblPaciente.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblPaciente.setEnabled(false);
        lblPaciente.setOpaque(true);

        lblNroPac.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblNroPac.setText("Nro");
        lblNroPac.setEnabled(false);

        txtIdPac.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtIdPac.setEnabled(false);

        lblEstado.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblEstado.setText(" Estado: ");
        lblEstado.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblEstado.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblEstado.setEnabled(false);
        lblEstado.setOpaque(true);

        btnSeleccionarPac.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/img/_select.png"))); // NOI18N
        btnSeleccionarPac.setEnabled(false);
        btnSeleccionarPac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarPacActionPerformed(evt);
            }
        });

        lblNomPac.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblNomPac.setText("Nombre");
        lblNomPac.setEnabled(false);

        txtNomPac.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtNomPac.setEnabled(false);

        jPanel5.setBackground(java.awt.SystemColor.inactiveCaptionBorder);

        btnAyuda.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnAyuda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/img/48_ayuda.png"))); // NOI18N
        btnAyuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAyudaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(btnAyuda, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnAyuda, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, Short.MAX_VALUE)
        );

        lblAnio.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblAnio.setText(" Año:");
        lblAnio.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblAnio.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblAnio.setEnabled(false);
        lblAnio.setOpaque(true);

        chooserAnio.setEnabled(false);

        lblMes.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblMes.setText(" Mes:");
        lblMes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblMes.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblMes.setEnabled(false);
        lblMes.setOpaque(true);

        chooserMes.setEnabled(false);
        chooserMes.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N

        chkRangoFecha.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        chkRangoFecha.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        chkRangoFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkRangoFechaActionPerformed(evt);
            }
        });

        chkAnio.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        chkAnio.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        chkAnio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAnioActionPerformed(evt);
            }
        });

        chkMes.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        chkMes.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        chkMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkMesActionPerformed(evt);
            }
        });

        rbtTurnosCancelados.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        rbtTurnosCancelados.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtTurnosCancelados.setText("Cancelados");
        rbtTurnosCancelados.setEnabled(false);
        rbtTurnosCancelados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtTurnosCanceladosActionPerformed(evt);
            }
        });

        rbtTurnosAdeudados.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        rbtTurnosAdeudados.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtTurnosAdeudados.setText("Adeudados");
        rbtTurnosAdeudados.setEnabled(false);
        rbtTurnosAdeudados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtTurnosAdeudadosActionPerformed(evt);
            }
        });

        rbtTurnosInasistencias.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        rbtTurnosInasistencias.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtTurnosInasistencias.setText("Inasistencias");
        rbtTurnosInasistencias.setEnabled(false);
        rbtTurnosInasistencias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtTurnosInasistenciasActionPerformed(evt);
            }
        });

        chkPaciente.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        chkPaciente.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        chkPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkPacienteActionPerformed(evt);
            }
        });

        chkEstado.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        chkEstado.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        chkEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkEstadoActionPerformed(evt);
            }
        });

        txtIni.setDateFormatString("dd/MM/yyyy");
        txtIni.setEnabled(false);
        txtIni.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtIni.setMaxSelectableDate(new java.util.Date(32503694463000L));
        txtIni.setMinSelectableDate(new java.util.Date(441777663000L));
        txtIni.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtIniPropertyChange(evt);
            }
        });

        txtFin.setDateFormatString("dd/MM/yyyy");
        txtFin.setEnabled(false);
        txtFin.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtFin.setMaxSelectableDate(new java.util.Date(32503694463000L));
        txtFin.setMinSelectableDate(new java.util.Date(441777663000L));
        txtFin.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtFinPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout panelFiltroLayout = new javax.swing.GroupLayout(panelFiltro);
        panelFiltro.setLayout(panelFiltroLayout);
        panelFiltroLayout.setHorizontalGroup(
            panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFiltroLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblEstado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFiltroLayout.createSequentialGroup()
                        .addComponent(lblNroPac)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtIdPac, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblNomPac)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNomPac, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSeleccionarPac, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(chkPaciente))
                    .addGroup(panelFiltroLayout.createSequentialGroup()
                        .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelFiltroLayout.createSequentialGroup()
                                .addComponent(rbtTurnosCancelados, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbtTurnosAdeudados, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(rbtTurnosInasistencias)
                                .addGap(18, 18, 18)
                                .addComponent(chkEstado))
                            .addGroup(panelFiltroLayout.createSequentialGroup()
                                .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelFiltroLayout.createSequentialGroup()
                                        .addComponent(lblMes, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(chooserMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(chkMes)
                                        .addGap(49, 49, 49)
                                        .addComponent(lblAnio, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(chooserAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(chkAnio))
                                    .addGroup(panelFiltroLayout.createSequentialGroup()
                                        .addComponent(lblEntre)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtIni, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(13, 13, 13)
                                        .addComponent(lblY1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(13, 13, 13)
                                        .addComponent(txtFin, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblInclu)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(chkRangoFecha)))
                                .addGap(18, 18, 18)
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelFiltroLayout.setVerticalGroup(
            panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelFiltroLayout.createSequentialGroup()
                .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFiltroLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(lblFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelFiltroLayout.createSequentialGroup()
                        .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelFiltroLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(txtIni, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelFiltroLayout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chkRangoFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblEntre)
                                        .addComponent(lblY1)
                                        .addComponent(lblInclu))
                                    .addComponent(txtFin, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblAnio, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                            .addComponent(chooserAnio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblMes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(chooserMes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(chkAnio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(chkMes, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(18, 18, 18)
                .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFiltroLayout.createSequentialGroup()
                        .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelFiltroLayout.createSequentialGroup()
                                .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblNroPac)
                                    .addComponent(txtIdPac, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblNomPac)
                                    .addComponent(txtNomPac, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(chkPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelFiltroLayout.createSequentialGroup()
                                .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rbtTurnosCancelados)
                                    .addComponent(rbtTurnosAdeudados)
                                    .addComponent(rbtTurnosInasistencias))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(chkEstado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(panelFiltroLayout.createSequentialGroup()
                        .addComponent(btnSeleccionarPac, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 56, Short.MAX_VALUE)))
                .addContainerGap())
        );

        panelOrdenar.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        panelOrdenar.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Ordenar por", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semilight", 0, 24))); // NOI18N

        rbtPac.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        rbtPac.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtPac.setText("Paciente");
        rbtPac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtPacActionPerformed(evt);
            }
        });

        rbtFecha.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        rbtFecha.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtFecha.setText("Fecha");
        rbtFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtFechaActionPerformed(evt);
            }
        });

        rbtHr.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        rbtHr.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtHr.setText("Horario");
        rbtHr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtHrActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelOrdenarLayout = new javax.swing.GroupLayout(panelOrdenar);
        panelOrdenar.setLayout(panelOrdenarLayout);
        panelOrdenarLayout.setHorizontalGroup(
            panelOrdenarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOrdenarLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(rbtPac)
                .addGap(30, 30, 30)
                .addComponent(rbtFecha)
                .addGap(35, 35, 35)
                .addComponent(rbtHr)
                .addContainerGap(37, Short.MAX_VALUE))
        );
        panelOrdenarLayout.setVerticalGroup(
            panelOrdenarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOrdenarLayout.createSequentialGroup()
                .addGroup(panelOrdenarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtPac)
                    .addComponent(rbtFecha)
                    .addComponent(rbtHr))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelOrdenar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panelTipo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(panelFiltro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelMostrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, panelFiltro});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelOrdenar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelMostrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerActionPerformed
//       informeGeneral();
        if(validar()){
//            this.dispose();
            informe(); //segun opcion es la tabla que se muestra
        }

    }//GEN-LAST:event_btnVerActionPerformed

    private void btnSeleccionarPacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarPacActionPerformed

        Frame f = JOptionPane.getFrameForComponent(this);
        dlgSeleccion dialog = new dlgSeleccion(f, true);
        dialog.setOpcion(2);
        dialog.show();
    }//GEN-LAST:event_btnSeleccionarPacActionPerformed

    private void btnAyudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAyudaActionPerformed
        
//        String ini="<html><font size=5 style=color:Teal;> "; 
        String ini="<html><font size=5 style=color:black;> "; 
        String mensaje= ini + " Si no selecciona ninguna opción para filtrado de datos, se mostraran \n"
                + ini + "\"todos los turnos de los pacientes que asistieron y abonaron la consulta\"";     
        JOptionPane.showMessageDialog(this, mensaje, "AYUDA",JOptionPane.INFORMATION_MESSAGE, icon);
    }//GEN-LAST:event_btnAyudaActionPerformed

    private void chkRangoFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkRangoFechaActionPerformed
        if(this.chkRangoFecha.isSelected()){
            this.txtIni.setEnabled(true);
            this.txtFin.setEnabled(true);
            this.lblEntre.setEnabled(true);
            if(!lblFecha.isEnabled())this.lblFecha.setEnabled(true);
            this.lblInclu.setEnabled(true);
            this.lblY1.setEnabled(true);
            setearFechas();
            ///
            this.chooserAnio.setEnabled(false);
            f=new Fecha();
            chooserAnio.setYear(f.getAnio());
            this.lblAnio.setEnabled(false);
            chkAnio.setSelected(false);
            this.chooserMes.setEnabled(false);
            this.lblMes.setEnabled(false);
            f=new Fecha();
            chooserMes.setMonth(f.getMes()-1);
            chkMes.setSelected(false);
        }
        else{
            this.txtIni.setEnabled(false);
            this.txtFin.setEnabled(false);
            this.txtIni.setDate(null);
            this.txtFin.setDate(null);
            this.lblEntre.setEnabled(false);
            if(lblFecha.isEnabled())this.lblFecha.setEnabled(false);
            this.lblInclu.setEnabled(false);
            this.lblY1.setEnabled(false);
        }
    }//GEN-LAST:event_chkRangoFechaActionPerformed

    private void chkAnioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAnioActionPerformed
        if(this.chkAnio.isSelected()){
            this.chooserAnio.setEnabled(true);
            this.lblAnio.setEnabled(true);
            if(!lblFecha.isEnabled())this.lblFecha.setEnabled(true);
            //
            chkRangoFecha.setSelected(false);
            this.txtIni.setEnabled(false);
            this.txtFin.setEnabled(false);
            this.txtIni.setDate(null);
            this.txtFin.setDate(null);
            this.lblEntre.setEnabled(false);
//            this.lblFecha.setEnabled(false);
            this.lblInclu.setEnabled(false);
            this.lblY1.setEnabled(false);
        }else{
            this.chooserAnio.setEnabled(false);
            f=new Fecha();
            chooserAnio.setYear(f.getAnio());
            this.lblAnio.setEnabled(false);
            chkAnio.setSelected(false);
            if(lblFecha.isEnabled())this.lblFecha.setEnabled(false);
        }
    }//GEN-LAST:event_chkAnioActionPerformed

    private void chkMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkMesActionPerformed
        if(this.chkMes.isSelected()){
            this.chooserMes.setEnabled(true);
            this.lblMes.setEnabled(true);
            if(!lblFecha.isEnabled())this.lblFecha.setEnabled(true);
            //
            chkRangoFecha.setSelected(false);
            this.txtIni.setEnabled(false);
            this.txtFin.setEnabled(false);
            this.txtIni.setDate(null);
            this.txtFin.setDate(null);
            this.lblEntre.setEnabled(false);
//            this.lblFecha.setEnabled(false);
            this.lblInclu.setEnabled(false);
            this.lblY1.setEnabled(false);
            
        }else{
            this.chooserMes.setEnabled(false);
            this.lblMes.setEnabled(false);
            f=new Fecha();
            chooserMes.setMonth(f.getMes()-1);
            chkMes.setSelected(false);
            if(lblFecha.isEnabled())this.lblFecha.setEnabled(false);
        }
    }//GEN-LAST:event_chkMesActionPerformed

    private void chkPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkPacienteActionPerformed
        if(this.chkPaciente.isSelected()){
            this.lblNomPac.setEnabled(true);
            this.lblNroPac.setEnabled(true);
            this.btnSeleccionarPac.setEnabled(true);
            this.lblPaciente.setEnabled(true);
        }else{
            this.lblNomPac.setEnabled(false);
            this.lblNroPac.setEnabled(false);
            this.txtNomPac.setText(null);
            this.txtIdPac.setText(null);
            this.btnSeleccionarPac.setEnabled(false);
            this.lblPaciente.setEnabled(false);
        }
    }//GEN-LAST:event_chkPacienteActionPerformed

    private void chkEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkEstadoActionPerformed
        if(chkEstado.isSelected()){
            this.rbtTurnosCancelados.setEnabled(true);
            this.rbtTurnosAdeudados.setEnabled(true);
            this.rbtTurnosInasistencias.setEnabled(true);
            lblEstado.setEnabled(true);
        }else{
            this.rbtTurnosInasistencias.setEnabled(false);
            this.rbtTurnosCancelados.setEnabled(false);
            this.rbtTurnosAdeudados.setEnabled(false);
            lblEstado.setEnabled(false);
            btnGpEstado.clearSelection();
        }
    }//GEN-LAST:event_chkEstadoActionPerformed

    private void rbtMostrarTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtMostrarTodosActionPerformed
        todos = this.rbtMostrarTodos.isSelected();
        algunos=!todos;
        txtCant.setEnabled(false);
        txtCant.setText(null);
    }//GEN-LAST:event_rbtMostrarTodosActionPerformed

    private void rbtXRegistrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtXRegistrosActionPerformed
        algunos=rbtXRegistros.isSelected();
        todos = !algunos;
        if(algunos)
            txtCant.setEnabled(true);
    }//GEN-LAST:event_rbtXRegistrosActionPerformed

    private void rbtDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtDescActionPerformed
        desc = this.rbtDesc.isSelected();
        asc = !desc;
    }//GEN-LAST:event_rbtDescActionPerformed

    private void rbtAscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtAscActionPerformed
        asc = this.rbtAsc.isSelected();
        desc = !asc;
    }//GEN-LAST:event_rbtAscActionPerformed

    private void rbtPacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtPacActionPerformed
        ordPac = this.rbtPac.isSelected();
        ordHr=ordF=!ordPac;
    }//GEN-LAST:event_rbtPacActionPerformed

    private void rbtFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtFechaActionPerformed
        ordF = this.rbtFecha.isSelected();
        ordHr=ordPac=!ordF;
    }//GEN-LAST:event_rbtFechaActionPerformed

    private void rbtHrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtHrActionPerformed
        ordHr = this.rbtHr.isSelected();
        ordPac=ordF=!ordHr;
    }//GEN-LAST:event_rbtHrActionPerformed

    private void txtIniPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtIniPropertyChange
        if(txtIni.getDate()!=null){
            if(f.checkFecha(txtIni)){
                //JOptionPane.showMessageDialog(this, "Fecha Inicio inválida.");
            }else txtIni.setDate(null);
        }
    }//GEN-LAST:event_txtIniPropertyChange

    private void txtFinPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtFinPropertyChange
        if(txtFin.getDate()!=null){
            if(f.checkFecha(txtFin)){
                //JOptionPane.showMessageDialog(this, "Fecha fin inválida.");
            }else txtFin.setDate(null);
        }
    }//GEN-LAST:event_txtFinPropertyChange

    private void rbtTurnosInasistenciasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtTurnosInasistenciasActionPerformed
        JOptionPane.showMessageDialog(this, "<html><font size=5>Al seleccionar esta opción: \n"
                + "<html><font size=5>Se mostraran los pacientes\n"
                + "<html><font size=5> que solicitaron un turno \n"
                + "<html><font size=5>y no asistieron a la consulta.");
    }//GEN-LAST:event_rbtTurnosInasistenciasActionPerformed

    private void rbtTurnosAdeudadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtTurnosAdeudadosActionPerformed
        JOptionPane.showMessageDialog(this, "<html><font size=5>Al seleccionar esta opción:\n"
                + "<html><font size=5>Se mostraran los pacientes que asistieron \n"
                + "<html><font size=5>a la consulta y no abonaron la misma");
    }//GEN-LAST:event_rbtTurnosAdeudadosActionPerformed

    private void rbtTurnosCanceladosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtTurnosCanceladosActionPerformed
        JOptionPane.showMessageDialog(this, "<html><font size=5>Al seleccionar esta opción: \n"
                + "<html><font size=5>Se mostraran los turnos cancelados \n"
                + "<html><font size=5>por el Terapeuta.");
    }//GEN-LAST:event_rbtTurnosCanceladosActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAyuda;
    private javax.swing.ButtonGroup btnGpEstado;
    private javax.swing.ButtonGroup btnGpMostrar;
    private javax.swing.ButtonGroup btnGpOrdenar;
    private javax.swing.ButtonGroup btnGpOrdenarTipo;
    private javax.swing.JButton btnSeleccionarPac;
    private javax.swing.JButton btnVer;
    private javax.swing.JCheckBox chkAnio;
    private javax.swing.JCheckBox chkEstado;
    private javax.swing.JCheckBox chkMes;
    private javax.swing.JCheckBox chkPaciente;
    private javax.swing.JCheckBox chkRangoFecha;
    private com.toedter.calendar.JYearChooser chooserAnio;
    private com.toedter.calendar.JMonthChooser chooserMes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JLabel lblAnio;
    private javax.swing.JLabel lblEntre;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblInclu;
    private javax.swing.JLabel lblMes;
    private javax.swing.JLabel lblNomPac;
    private javax.swing.JLabel lblNroPac;
    private javax.swing.JLabel lblPaciente;
    private javax.swing.JLabel lblY1;
    private javax.swing.JPanel panelFiltro;
    private javax.swing.JPanel panelMostrar;
    private javax.swing.JPanel panelOrdenar;
    private javax.swing.JPanel panelTipo;
    private javax.swing.JRadioButton rbtAsc;
    private javax.swing.JRadioButton rbtDesc;
    private javax.swing.JRadioButton rbtFecha;
    private javax.swing.JRadioButton rbtHr;
    private javax.swing.JRadioButton rbtMostrarTodos;
    private javax.swing.JRadioButton rbtPac;
    private javax.swing.JRadioButton rbtTurnosAdeudados;
    private javax.swing.JRadioButton rbtTurnosCancelados;
    private javax.swing.JRadioButton rbtTurnosInasistencias;
    private javax.swing.JRadioButton rbtXRegistros;
    private javax.swing.JTextField txtCant;
    private com.toedter.calendar.JDateChooser txtFin;
    private javax.swing.JTextField txtIdPac;
    private com.toedter.calendar.JDateChooser txtIni;
    private javax.swing.JTextField txtNomPac;
    // End of variables declaration//GEN-END:variables



private void arranque(){
//    Calendar cal = Calendar.getInstance();
//    f=new Fecha();
//    String fecha = f.retornarString(cal);
//    txtIni.setText(fecha);
//    txtFin.setText(fecha);;
//    txtNomPac.setText(null);
}

private void grupoBotones(){
        this.btnGpOrdenar=new ButtonGroup();
        this.btnGpOrdenar.add(this.rbtPac);
        this.btnGpOrdenar.add(this.rbtHr);
        this.btnGpOrdenar.add(this.rbtFecha);
        btnGpOrdenar.clearSelection();
        this.btnGpOrdenarTipo=new ButtonGroup();
        this.btnGpOrdenarTipo.add(this.rbtDesc);
        this.btnGpOrdenarTipo.add(this.rbtAsc);
        btnGpOrdenarTipo.clearSelection();
        btnGpMostrar=new ButtonGroup();
        btnGpMostrar.add(this.rbtMostrarTodos);
        btnGpMostrar.add(this.rbtXRegistros);
        btnGpMostrar.clearSelection();
        btnGpEstado=new ButtonGroup();
        btnGpEstado.add(this.rbtTurnosCancelados);
        btnGpEstado.add(this.rbtTurnosAdeudados);
        btnGpEstado.add(this.rbtTurnosInasistencias);
        btnGpEstado.clearSelection();
    }

public void setearFechas(){
    Calendar cal = Calendar.getInstance();
    f=new Fecha();
    Date fecha = f.convertirCalendaDate(cal);
    txtIni.setDate(fecha);
    txtFin.setDate(fecha);
}

public void setPaciente(int id, String nombre){
      this.txtIdPac.setText(String.valueOf(id));
      this.txtNomPac.setText(nombre);
  }

public boolean validar(){
    String tit="Atención"; String msj; 
    boolean res=true;
    
    if(this.chkRangoFecha.isSelected() && (txtIni.getDate()==null)){
      msj="<html><font size=5 style=color:red;>Fecha desde. Dato Requerido.";
      JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
      txtIni.grabFocus();
      return false;
    } 
    if(this.chkRangoFecha.isSelected() && (txtFin.getDate()==null)){
      msj="<html><font size=5 style=color:red;>Fecha hasta. Dato Requerido.";
      JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
      txtFin.grabFocus();
      return false;
    }
    
//    String stFecha1, stFecha2; 
//     stFecha1=txtIni.getText();
//     stFecha2=txtFin.getText();
//     SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
//     Date fecha1 = sdf.parse(stFecha1 , new ParsePosition(0));
//     Date fecha2 = sdf.parse(stFecha2 , new ParsePosition(0)); 
//     
//     if (chkRangoFecha.isSelected() && !fecha1.before(fecha2) && !fecha1.equals(fecha2)){ 
//         msj="<html><font size=5 style=color:red;>Fecha de inicio debe ser menor o igual a Fecha de fin.";
//         JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
//         txtIni.grabFocus();
//         return false;
//     }
     
     if (chkRangoFecha.isSelected() && !txtIni.getDate().before(txtFin.getDate()) && !txtIni.getDate().equals(txtFin.getDate())){ 
         msj="<html><font size=5 style=color:red;>Fecha de inicio debe ser menor o igual a Fecha de fin.";
         JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
         txtIni.grabFocus();
         return false;
     }
    
    if(!this.chkAnio.isSelected())
        anio=0;
    else
        anio=chooserAnio.getYear();
    if(!this.chkMes.isSelected())
        mes=0;
    else
        mes=this.chooserMes.getMonth()+1;
    
    //Paciente
    if(this.chkPaciente.isSelected() && (txtNomPac.getText().trim()).length()==0){
      msj="<html><font size=5 style=color:red;>Paciente. Dato Requerido.";
      JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
      txtNomPac.grabFocus();
      return false;
    }
    
//    if(chkEstado.isSelected() && (!rbtTurnosCancelados.isSelected() && !rbtTurnosAdeudados.isSelected() && !rbtTurnosInasistencias.isSelected())){
//      msj="<html><font size=5 style=color:red;>Estado. Dato Requerido.";
//      JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
//      rbtTurnosCancelados.grabFocus();
//      return false;
//    }
    
    if(!this.rbtPac.isSelected() && !this.rbtHr.isSelected() && !this.rbtFecha.isSelected()){
      msj="<html><font size=5 style=color:red;>Ordenar por.. Dato Requerido.";
      JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
      rbtPac.grabFocus();
      return false;
    }
    
    if(!this.rbtAsc.isSelected() && !this.rbtDesc.isSelected()){
      msj="<html><font size=5 style=color:red;>Tipo de Ordenenamiento.. Dato Requerido.";
      JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
      rbtAsc.grabFocus();
      return false;
    }
    if(!this.rbtXRegistros.isSelected() && !this.rbtMostrarTodos.isSelected()){
      msj="<html><font size=5 style=color:red;>Opción de muestra. Dato Requerido.";
      JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
      rbtXRegistros.grabFocus();
      return false;
    }
    if(this.rbtXRegistros.isSelected() && (txtCant.getText().trim()).length()==0){
      msj="<html><font size=5 style=color:red;>Cant de registros a mostrar. Dato Requerido.";
      JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
      txtCant.grabFocus();
      return false;
    }

    return res;
} 

public void informe(){
    try {
        int c, campo, idP, tu; String ord, f1,f2;
        campo=1; ord="ASC";

        String paciente, fecha, horario,obs;
        if(!txtCant.getText().isEmpty()) c=Integer.parseInt(txtCant.getText());
            else c=cantReg();
        if(!txtIdPac.getText().isEmpty()) idP=Integer.parseInt(txtIdPac.getText());
            else idP=0;
        
        tu=3;
        if(rbtTurnosCancelados.isSelected()) tu=0;
        else if(rbtTurnosAdeudados.isSelected()) tu=1;
        else if(rbtTurnosInasistencias.isSelected()) tu=2;
        
        f=new Fecha();
        if(txtIni.getDate()!=null) f1=f.getFormatedFechaToCalendar(f.getStringXfecha(txtIni.getDate()));
            else f1="";
        if(txtIni.getDate()!=null) f2=f.getFormatedFechaToCalendar(f.getStringXfecha(txtFin.getDate()));
            else f2="";
        
        if((ordPac && asc && todos) || (ordPac && asc && algunos)){campo=2; ord="ASC";}
        if((ordPac && desc && todos) || (ordPac && desc && algunos)){campo=2; ord="DESC";}
        if((ordF && desc && todos) || (ordF && desc && algunos)){campo=3; ord="DESC";}
        if((ordF && asc && todos) || (ordF && asc && algunos)) {campo=3; ord="ASC";}
        if((ordHr && desc && todos) || (ordHr && desc && algunos)){campo=4; ord="DESC";}
        if((ordHr && asc && todos) || (ordHr && asc && algunos)) {campo=4; ord="ASC";}

        List inasistenciasList = new ArrayList();
        List<InasistenciasR> lista = conexion.getInstance().getInasistenciasR2(campo, ord, c, anio,mes,idP,tu,f1,f2);
        
        if(!lista.isEmpty()){
            for (Iterator<InasistenciasR> it = lista.iterator(); it.hasNext();) {
                InasistenciasR t = it.next();
//                nroTurno=t.getNroTurno();
                obs=t.getObservaciones();
                paciente=t.getPaciente();
                fecha=t.getFecha();
                horario=t.getHorario();
                inasistenciasList.add(new InasistenciasR(paciente, fecha, horario,obs));               
                } 
            JasperReport report  = (JasperReport)JRLoader.loadObject(ClassLoader.getSystemResource("Reportes/ReportTurnos.jasper"));
            JasperPrint fillReport = JasperFillManager.fillReport(report, null,new JRBeanCollectionDataSource(inasistenciasList));
            JasperViewer jviewer = new JasperViewer(fillReport,false);
            jviewer.setTitle("Consultas por paciente.");
            jviewer.setVisible(true); 
            
            this.dispose();
        }else{
//            this.dispose();
            JOptionPane.showMessageDialog(this, "<html><font size=5>No hay información suficiente para generar el documento.");
        }  
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "<html><font size=5 style=color:red;>Error cargando reporte." + e);
    }
}
  
  public int cantReg(){
        int num = 0;
        List<InasistenciasR> lista = conexion.getInstance().getInasistenciasR();
        for (Iterator<InasistenciasR> it = lista.iterator(); it.hasNext();) {
            InasistenciasR t = it.next();
            num = num + 1;
        }
        if(num==0){
            num=1;
        }
        return num;
    }

private void SNroEntero(JTextField a){   
        a.addKeyListener(new KeyAdapter() {
       @Override public void keyTyped(KeyEvent e) {            
		String text = ((JTextField) e.getSource()).getText();
		
                if(!Character.isDigit(e.getKeyChar()) && !Character.isISOControl(e.getKeyChar()))
                {
                     Toolkit.getDefaultToolkit().beep();

                     e.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
                    JOptionPane.showMessageDialog(null, "<html><font size=5 style=color:red;>Solo puede ingresar números", "Validando Datos",
                            JOptionPane.ERROR_MESSAGE);
                    e.consume();
                }

                //Limitar el numero de caracteres. Solo se pueden ingresar 5 caracteres
                if (text.length() >= 5) {
                    e.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
                    JOptionPane.showMessageDialog(null, "<html><font size=5 style=color:red;>Ha excedido el numero maximo de caracteres!!! (5)", "Validando Datos",
                            JOptionPane.ERROR_MESSAGE);
                }                     
        }
        });  
    }








}
