/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Vista;

import Controlador.AbstractDAO;
import Controlador.TurnoDAO;
import Controlador.conexion;
import Modelo.Paciente;
import Modelo.Seguimiento;
import Modelo.Turno;
import Modelo.odt.DiagnosticosXPac;
import Modelo.odt.MotivosXPac;
import Modelo.odt.PruebasXPac;
import Modelo.odt.TratamientosXPac;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.Frame;
import java.util.Calendar;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import javax.swing.ButtonGroup;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import util.Fecha;
import util.modalInternalFrame;

/**
 *
 * @author usuario
 */
public class iFraTerapia extends modalInternalFrame {
    private DefaultTableModel modelMotivos;
    private DefaultTableModel modelPruebas;
    private DefaultTableModel modelSeguimientos;
    private DefaultTableModel modelTratamientos;
    private DefaultTableModel modelDiagnosticos;
    private DefaultTableModel modelTurnos;
    private int codPac;
    Fecha fecha = null;
    TurnoDAO turnoDAO = null;
//    private static iFraTerapia instanciaTerapia;
    
//    private Terapia()
//    { }

    /**
     * Creates new form iFraTerapia
     */
    public iFraTerapia() {
        initComponents();
        arranque();
        grupoBotones();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGpPruebas = new javax.swing.ButtonGroup();
        btnGpTurnos = new javax.swing.ButtonGroup();
        btnGpSeguimiento = new javax.swing.ButtonGroup();
        buttonGroup1 = new javax.swing.ButtonGroup();
        btnGpTratamiento = new javax.swing.ButtonGroup();
        btnGpDiagnostico = new javax.swing.ButtonGroup();
        btnGpMotivos = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        panelPacientes = new javax.swing.JPanel();
        panelDatosPersonales = new javax.swing.JPanel();
        lblEdad2 = new javax.swing.JLabel();
        lblEdad3 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtApellido = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        lblEdad1 = new javax.swing.JLabel();
        lblEdad4 = new javax.swing.JLabel();
        lblEdad = new javax.swing.JLabel();
        txtFechaNac = new javax.swing.JFormattedTextField();
        txtEstadoCivil = new javax.swing.JTextField();
        txtSexo = new javax.swing.JTextField();
        txtOcupacion = new javax.swing.JTextField();
        txtEdad = new javax.swing.JTextField();
        panelDatosContacto = new javax.swing.JPanel();
        txtTelefono = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        txtFechaAlta = new javax.swing.JLabel();
        panelMotivos = new javax.swing.JPanel();
        panelMotivo = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tablaMotivos = new javax.swing.JTable();
        rbtTodosMot = new javax.swing.JRadioButton();
        rbtObsTurno = new javax.swing.JRadioButton();
        panelPruebas = new javax.swing.JPanel();
        panelPrueba = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tablaPruebas = new javax.swing.JTable();
        rbtTodosPru = new javax.swing.JRadioButton();
        rbtRtdoPru = new javax.swing.JRadioButton();
        btnPruebas = new javax.swing.JButton();
        panelDiagnosticos = new javax.swing.JPanel();
        panelDiagnostico = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tablaDiagnostico = new javax.swing.JTable();
        rbtTodosDiag = new javax.swing.JRadioButton();
        rbtSDescDiag = new javax.swing.JRadioButton();
        btnDiag = new javax.swing.JButton();
        panelTratamientos = new javax.swing.JPanel();
        panelTratamiento = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        tablaTratamientos = new javax.swing.JTable();
        rbtTodosTrat = new javax.swing.JRadioButton();
        rbtSDescTrat = new javax.swing.JRadioButton();
        panelTurnos = new javax.swing.JPanel();
        panelTurno = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        tablaTurnos = new javax.swing.JTable();
        btnVerTurnos = new javax.swing.JButton();
        rbtTodosTurnos = new javax.swing.JRadioButton();
        jLabel25 = new javax.swing.JLabel();
        rbtTurnosCancelados = new javax.swing.JRadioButton();
        rbtTurnosAdeudados = new javax.swing.JRadioButton();
        rbtTurnosInasistencias = new javax.swing.JRadioButton();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        btnTurnos = new javax.swing.JButton();
        txtTurnosFDesde = new com.toedter.calendar.JDateChooser();
        txtTurnosFHasta = new com.toedter.calendar.JDateChooser();
        panelSeguimientos = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaSeguimiento = new javax.swing.JTable();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        rbtTodosSeg = new javax.swing.JRadioButton();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        verG1 = new javax.swing.JButton();
        rbtConclusionSeg = new javax.swing.JRadioButton();
        txtSegFDesde = new com.toedter.calendar.JDateChooser();
        txtSegFHasta = new com.toedter.calendar.JDateChooser();
        panelBuscar = new javax.swing.JPanel();
        btnSeleccionarPac = new javax.swing.JButton();
        lblPaciente = new javax.swing.JLabel();
        panelHistorico = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtUltimoTurno = new javax.swing.JFormattedTextField();
        txtProxTurno = new javax.swing.JFormattedTextField();
        txtPrimerTurno = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Historico de Paciente");

        jTabbedPane1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        panelDatosPersonales.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos Personales", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18))); // NOI18N

        lblEdad2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblEdad2.setText("Profesión/Ocupación");

        lblEdad3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblEdad3.setText("Fecha Nacimiento");

        txtId.setEditable(false);
        txtId.setBackground(new java.awt.Color(255, 255, 255));
        txtId.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtId.setRequestFocusEnabled(false);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Nro");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Nombre");

        txtNombre.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtNombre.setRequestFocusEnabled(false);

        txtApellido.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtApellido.setRequestFocusEnabled(false);

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel17.setText("Apellido");

        lblEdad1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblEdad1.setText("Sexo");

        lblEdad4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblEdad4.setText("Estado civil");

        lblEdad.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblEdad.setText("Edad");

        try {
            txtFechaNac.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtFechaNac.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtFechaNac.setRequestFocusEnabled(false);

        txtEstadoCivil.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtEstadoCivil.setRequestFocusEnabled(false);

        txtSexo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtSexo.setRequestFocusEnabled(false);

        txtOcupacion.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtOcupacion.setRequestFocusEnabled(false);

        txtEdad.setEditable(false);
        txtEdad.setBackground(new java.awt.Color(255, 255, 255));
        txtEdad.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtEdad.setRequestFocusEnabled(false);

        javax.swing.GroupLayout panelDatosPersonalesLayout = new javax.swing.GroupLayout(panelDatosPersonales);
        panelDatosPersonales.setLayout(panelDatosPersonalesLayout);
        panelDatosPersonalesLayout.setHorizontalGroup(
            panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDatosPersonalesLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDatosPersonalesLayout.createSequentialGroup()
                        .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))
                        .addGap(17, 17, 17)
                        .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblEdad3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtFechaNac, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEdad)
                            .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelDatosPersonalesLayout.createSequentialGroup()
                        .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEdad4)
                            .addComponent(txtEstadoCivil, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelDatosPersonalesLayout.createSequentialGroup()
                                .addComponent(lblEdad1)
                                .addGap(168, 168, 168)
                                .addComponent(lblEdad2))
                            .addGroup(panelDatosPersonalesLayout.createSequentialGroup()
                                .addComponent(txtSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtOcupacion, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        panelDatosPersonalesLayout.setVerticalGroup(
            panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDatosPersonalesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(panelDatosPersonalesLayout.createSequentialGroup()
                            .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(jLabel5)
                                .addComponent(jLabel17))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(panelDatosPersonalesLayout.createSequentialGroup()
                            .addComponent(lblEdad3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtFechaNac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(lblEdad))
                .addGap(18, 18, 18)
                .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEdad2)
                    .addGroup(panelDatosPersonalesLayout.createSequentialGroup()
                        .addComponent(lblEdad4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEstadoCivil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtOcupacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblEdad1))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        panelDatosContacto.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos de Contacto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18))); // NOI18N

        txtTelefono.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtTelefono.setRequestFocusEnabled(false);
        txtTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefonoKeyTyped(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel18.setText("Teléfono");

        jLabel19.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel19.setText("Email");

        txtEmail.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtEmail.setRequestFocusEnabled(false);
        txtEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEmailKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout panelDatosContactoLayout = new javax.swing.GroupLayout(panelDatosContacto);
        panelDatosContacto.setLayout(panelDatosContactoLayout);
        panelDatosContactoLayout.setHorizontalGroup(
            panelDatosContactoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDatosContactoLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(panelDatosContactoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDatosContactoLayout.createSequentialGroup()
                        .addComponent(txtTelefono)
                        .addGap(60, 60, 60))
                    .addGroup(panelDatosContactoLayout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 235, Short.MAX_VALUE)))
                .addGroup(panelDatosContactoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );
        panelDatosContactoLayout.setVerticalGroup(
            panelDatosContactoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDatosContactoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDatosContactoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDatosContactoLayout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelDatosContactoLayout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        txtFechaAlta.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        txtFechaAlta.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtFechaAlta.setForeground(new java.awt.Color(0, 51, 153));
        txtFechaAlta.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtFechaAlta.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        txtFechaAlta.setOpaque(true);

        javax.swing.GroupLayout panelPacientesLayout = new javax.swing.GroupLayout(panelPacientes);
        panelPacientes.setLayout(panelPacientesLayout);
        panelPacientesLayout.setHorizontalGroup(
            panelPacientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPacientesLayout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(panelDatosContacto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
            .addGroup(panelPacientesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelPacientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelDatosPersonales, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFechaAlta, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelPacientesLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {panelDatosContacto, panelDatosPersonales});

        panelPacientesLayout.setVerticalGroup(
            panelPacientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPacientesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtFechaAlta, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelDatosPersonales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(panelDatosContacto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Paciente", panelPacientes);

        panelMotivo.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Motivos de consulta", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18))); // NOI18N
        panelMotivo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tablaMotivos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "", "", "Nombre", "Observaciones", "Fecha"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaMotivos.getTableHeader().setReorderingAllowed(false);
        tablaMotivos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMotivosMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(tablaMotivos);
        if (tablaMotivos.getColumnModel().getColumnCount() > 0) {
            tablaMotivos.getColumnModel().getColumn(0).setResizable(false);
            tablaMotivos.getColumnModel().getColumn(1).setResizable(false);
        }

        panelMotivo.add(jScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 69, 760, 280));

        rbtTodosMot.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtTodosMot.setText("Ver todos");
        rbtTodosMot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtTodosMotActionPerformed(evt);
            }
        });
        panelMotivo.add(rbtTodosMot, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 34, 120, -1));

        rbtObsTurno.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtObsTurno.setText("Con observaciones en el Turno");
        rbtObsTurno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtObsTurnoActionPerformed(evt);
            }
        });
        panelMotivo.add(rbtObsTurno, new org.netbeans.lib.awtextra.AbsoluteConstraints(145, 34, 280, -1));

        javax.swing.GroupLayout panelMotivosLayout = new javax.swing.GroupLayout(panelMotivos);
        panelMotivos.setLayout(panelMotivosLayout);
        panelMotivosLayout.setHorizontalGroup(
            panelMotivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMotivosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelMotivo, javax.swing.GroupLayout.DEFAULT_SIZE, 811, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelMotivosLayout.setVerticalGroup(
            panelMotivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMotivosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelMotivo, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE)
                .addContainerGap())
        );

        panelMotivo.getAccessibleContext().setAccessibleName("motivos");

        jTabbedPane1.addTab("Motivos", panelMotivos);

        panelPrueba.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Prueba", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18))); // NOI18N
        panelPrueba.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tablaPruebas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "", "", "Nombre", "Resultado", "Fecha"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaPruebas.getTableHeader().setReorderingAllowed(false);
        tablaPruebas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaPruebasMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tablaPruebas);
        if (tablaPruebas.getColumnModel().getColumnCount() > 0) {
            tablaPruebas.getColumnModel().getColumn(0).setResizable(false);
            tablaPruebas.getColumnModel().getColumn(1).setResizable(false);
        }

        panelPrueba.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 69, 760, 280));

        rbtTodosPru.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtTodosPru.setText("Ver todos");
        rbtTodosPru.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtTodosPruActionPerformed(evt);
            }
        });
        panelPrueba.add(rbtTodosPru, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 34, 120, -1));

        rbtRtdoPru.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtRtdoPru.setText("Con resultado");
        rbtRtdoPru.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtRtdoPruActionPerformed(evt);
            }
        });
        panelPrueba.add(rbtRtdoPru, new org.netbeans.lib.awtextra.AbsoluteConstraints(145, 34, 146, -1));

        btnPruebas.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnPruebas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/img/48_Imprimir.png"))); // NOI18N
        btnPruebas.setText("Imprimir Todos");
        btnPruebas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPruebasActionPerformed(evt);
            }
        });
        panelPrueba.add(btnPruebas, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 350, 224, 43));

        javax.swing.GroupLayout panelPruebasLayout = new javax.swing.GroupLayout(panelPruebas);
        panelPruebas.setLayout(panelPruebasLayout);
        panelPruebasLayout.setHorizontalGroup(
            panelPruebasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPruebasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelPrueba, javax.swing.GroupLayout.DEFAULT_SIZE, 811, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelPruebasLayout.setVerticalGroup(
            panelPruebasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPruebasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelPrueba, javax.swing.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Pruebas", panelPruebas);

        panelDiagnostico.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Diagnóstico", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18))); // NOI18N

        tablaDiagnostico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "", "Nombre", "Descripción", "Fecha"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaDiagnostico.getTableHeader().setReorderingAllowed(false);
        tablaDiagnostico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaDiagnosticoMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(tablaDiagnostico);
        if (tablaDiagnostico.getColumnModel().getColumnCount() > 0) {
            tablaDiagnostico.getColumnModel().getColumn(0).setResizable(false);
            tablaDiagnostico.getColumnModel().getColumn(0).setPreferredWidth(0);
        }

        rbtTodosDiag.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtTodosDiag.setText("Ver todos");
        rbtTodosDiag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtTodosDiagActionPerformed(evt);
            }
        });

        rbtSDescDiag.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtSDescDiag.setText("Con descripción");
        rbtSDescDiag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtSDescDiagActionPerformed(evt);
            }
        });

        btnDiag.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnDiag.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/img/48_Imprimir.png"))); // NOI18N
        btnDiag.setText("Imprimir Todos");
        btnDiag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDiagActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelDiagnosticoLayout = new javax.swing.GroupLayout(panelDiagnostico);
        panelDiagnostico.setLayout(panelDiagnosticoLayout);
        panelDiagnosticoLayout.setHorizontalGroup(
            panelDiagnosticoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDiagnosticoLayout.createSequentialGroup()
                .addGroup(panelDiagnosticoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDiagnosticoLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(panelDiagnosticoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 771, Short.MAX_VALUE)
                            .addGroup(panelDiagnosticoLayout.createSequentialGroup()
                                .addComponent(rbtTodosDiag, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(rbtSDescDiag, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDiagnosticoLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDiag, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panelDiagnosticoLayout.setVerticalGroup(
            panelDiagnosticoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDiagnosticoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDiagnosticoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtTodosDiag)
                    .addComponent(rbtSDescDiag))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDiag, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout panelDiagnosticosLayout = new javax.swing.GroupLayout(panelDiagnosticos);
        panelDiagnosticos.setLayout(panelDiagnosticosLayout);
        panelDiagnosticosLayout.setHorizontalGroup(
            panelDiagnosticosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDiagnosticosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelDiagnostico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelDiagnosticosLayout.setVerticalGroup(
            panelDiagnosticosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDiagnosticosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelDiagnostico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Diagnósticos", panelDiagnosticos);

        panelTratamiento.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Tratamiento", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18))); // NOI18N

        tablaTratamientos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "", "Nombre", "Descripción", "Fecha"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaTratamientos.getTableHeader().setReorderingAllowed(false);
        tablaTratamientos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaTratamientosMouseClicked(evt);
            }
        });
        jScrollPane9.setViewportView(tablaTratamientos);
        if (tablaTratamientos.getColumnModel().getColumnCount() > 0) {
            tablaTratamientos.getColumnModel().getColumn(0).setResizable(false);
        }

        rbtTodosTrat.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtTodosTrat.setText("Ver todos");
        rbtTodosTrat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtTodosTratActionPerformed(evt);
            }
        });

        rbtSDescTrat.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtSDescTrat.setText("Con descripción");
        rbtSDescTrat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtSDescTratActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelTratamientoLayout = new javax.swing.GroupLayout(panelTratamiento);
        panelTratamiento.setLayout(panelTratamientoLayout);
        panelTratamientoLayout.setHorizontalGroup(
            panelTratamientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTratamientoLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(panelTratamientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane9)
                    .addGroup(panelTratamientoLayout.createSequentialGroup()
                        .addComponent(rbtTodosTrat, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(rbtSDescTrat, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 462, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelTratamientoLayout.setVerticalGroup(
            panelTratamientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTratamientoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTratamientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtTodosTrat)
                    .addComponent(rbtSDescTrat))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout panelTratamientosLayout = new javax.swing.GroupLayout(panelTratamientos);
        panelTratamientos.setLayout(panelTratamientosLayout);
        panelTratamientosLayout.setHorizontalGroup(
            panelTratamientosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTratamientosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelTratamiento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelTratamientosLayout.setVerticalGroup(
            panelTratamientosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTratamientosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelTratamiento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Tratamientos", panelTratamientos);

        panelTurno.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Turnos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18))); // NOI18N

        jLabel23.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel23.setText("Desde");

        tablaTurnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "", "Fecha", "Horario", "Monto", "Asistio", "Abonado", "Cancelado", "Observaciones"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaTurnos.getTableHeader().setReorderingAllowed(false);
        tablaTurnos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaTurnosMouseClicked(evt);
            }
        });
        jScrollPane11.setViewportView(tablaTurnos);
        if (tablaTurnos.getColumnModel().getColumnCount() > 0) {
            tablaTurnos.getColumnModel().getColumn(0).setResizable(false);
        }

        btnVerTurnos.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnVerTurnos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/img/secund.png"))); // NOI18N
        btnVerTurnos.setText("VER");
        btnVerTurnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerTurnosActionPerformed(evt);
            }
        });

        rbtTodosTurnos.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtTodosTurnos.setText("Todos");
        rbtTodosTurnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtTodosTurnosActionPerformed(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel25.setText("Hasta");

        rbtTurnosCancelados.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtTurnosCancelados.setText("Cancelados");
        rbtTurnosCancelados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtTurnosCanceladosActionPerformed(evt);
            }
        });

        rbtTurnosAdeudados.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtTurnosAdeudados.setText("Adeudados");
        rbtTurnosAdeudados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtTurnosAdeudadosActionPerformed(evt);
            }
        });

        rbtTurnosInasistencias.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtTurnosInasistencias.setText("Inasistencias");
        rbtTurnosInasistencias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtTurnosInasistenciasActionPerformed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel26.setText("Fecha");
        jLabel26.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel27.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel27.setText("Turnos");
        jLabel27.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnTurnos.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnTurnos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/img/48_Imprimir.png"))); // NOI18N
        btnTurnos.setText("Imprimir Todos");
        btnTurnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTurnosActionPerformed(evt);
            }
        });

        txtTurnosFDesde.setDateFormatString("dd/MM/yyyy");
        txtTurnosFDesde.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtTurnosFDesde.setMaxSelectableDate(new java.util.Date(32503694463000L));
        txtTurnosFDesde.setMinSelectableDate(new java.util.Date(441777663000L));

        txtTurnosFHasta.setDateFormatString("dd/MM/yyyy");
        txtTurnosFHasta.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtTurnosFHasta.setMaxSelectableDate(new java.util.Date(32503694463000L));
        txtTurnosFHasta.setMinSelectableDate(new java.util.Date(441777663000L));

        javax.swing.GroupLayout panelTurnoLayout = new javax.swing.GroupLayout(panelTurno);
        panelTurno.setLayout(panelTurnoLayout);
        panelTurnoLayout.setHorizontalGroup(
            panelTurnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTurnoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTurnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane11)
                    .addGroup(panelTurnoLayout.createSequentialGroup()
                        .addGroup(panelTurnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(panelTurnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelTurnoLayout.createSequentialGroup()
                                .addComponent(jLabel23)
                                .addGap(18, 18, 18)
                                .addComponent(txtTurnosFDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel25)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTurnosFHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelTurnoLayout.createSequentialGroup()
                                .addComponent(rbtTodosTurnos, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbtTurnosCancelados, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rbtTurnosAdeudados, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rbtTurnosInasistencias)
                                .addGap(16, 16, 16)))
                        .addGap(15, 15, 15)
                        .addComponent(btnVerTurnos)
                        .addGap(0, 134, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTurnoLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnTurnos, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panelTurnoLayout.setVerticalGroup(
            panelTurnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTurnoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTurnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTurnosFDesde, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtTurnosFHasta, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTurnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel23)
                        .addComponent(jLabel25)
                        .addComponent(jLabel26)
                        .addComponent(btnVerTurnos, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelTurnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtTurnosCancelados)
                    .addComponent(rbtTurnosAdeudados)
                    .addComponent(rbtTurnosInasistencias)
                    .addComponent(rbtTodosTurnos)
                    .addComponent(jLabel27))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTurnos, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout panelTurnosLayout = new javax.swing.GroupLayout(panelTurnos);
        panelTurnos.setLayout(panelTurnosLayout);
        panelTurnosLayout.setHorizontalGroup(
            panelTurnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelTurno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panelTurnosLayout.setVerticalGroup(
            panelTurnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTurnosLayout.createSequentialGroup()
                .addComponent(panelTurno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Turnos", panelTurnos);

        tablaSeguimiento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "", "fecha", "Diagnóstico", "Conclusión", "Controlar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaSeguimiento.getTableHeader().setReorderingAllowed(false);
        tablaSeguimiento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaSeguimientoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablaSeguimiento);
        if (tablaSeguimiento.getColumnModel().getColumnCount() > 0) {
            tablaSeguimiento.getColumnModel().getColumn(0).setResizable(false);
        }

        jLabel30.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel30.setText("Fecha");
        jLabel30.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel31.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel31.setText("Seguimiento");
        jLabel31.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        rbtTodosSeg.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtTodosSeg.setText("Todos");
        rbtTodosSeg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtTodosSegActionPerformed(evt);
            }
        });

        jLabel32.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel32.setText("Desde");

        jLabel33.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel33.setText("Hasta");

        verG1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        verG1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/img/secund.png"))); // NOI18N
        verG1.setText("VER");
        verG1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verG1ActionPerformed(evt);
            }
        });

        rbtConclusionSeg.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtConclusionSeg.setText("Con conclusión");
        rbtConclusionSeg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtConclusionSegActionPerformed(evt);
            }
        });

        txtSegFDesde.setDateFormatString("dd/MM/yyyy");
        txtSegFDesde.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtSegFDesde.setMaxSelectableDate(new java.util.Date(32503694463000L));
        txtSegFDesde.setMinSelectableDate(new java.util.Date(441777663000L));

        txtSegFHasta.setDateFormatString("dd/MM/yyyy");
        txtSegFHasta.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtSegFHasta.setMaxSelectableDate(new java.util.Date(32503694463000L));
        txtSegFHasta.setMinSelectableDate(new java.util.Date(441777663000L));

        javax.swing.GroupLayout panelSeguimientosLayout = new javax.swing.GroupLayout(panelSeguimientos);
        panelSeguimientos.setLayout(panelSeguimientosLayout);
        panelSeguimientosLayout.setHorizontalGroup(
            panelSeguimientosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSeguimientosLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(panelSeguimientosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 786, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelSeguimientosLayout.createSequentialGroup()
                        .addGroup(panelSeguimientosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(panelSeguimientosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelSeguimientosLayout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jLabel32)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtSegFDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel33)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSegFHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(verG1))
                            .addGroup(panelSeguimientosLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(rbtTodosSeg, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43)
                                .addComponent(rbtConclusionSeg, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        panelSeguimientosLayout.setVerticalGroup(
            panelSeguimientosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSeguimientosLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(panelSeguimientosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelSeguimientosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel32)
                        .addComponent(jLabel33)
                        .addComponent(jLabel30)
                        .addComponent(verG1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtSegFDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtSegFHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelSeguimientosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtTodosSeg)
                    .addComponent(jLabel31)
                    .addComponent(rbtConclusionSeg))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Seguimiento por Diagnóstico", panelSeguimientos);

        panelBuscar.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Paciente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18))); // NOI18N

        btnSeleccionarPac.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnSeleccionarPac.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/img/_select.png"))); // NOI18N
        btnSeleccionarPac.setText("Seleccionar");
        btnSeleccionarPac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarPacActionPerformed(evt);
            }
        });

        lblPaciente.setBackground(new java.awt.Color(255, 255, 255));
        lblPaciente.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        lblPaciente.setForeground(new java.awt.Color(51, 51, 255));
        lblPaciente.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPaciente.setText("nombre");
        lblPaciente.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        lblPaciente.setOpaque(true);

        javax.swing.GroupLayout panelBuscarLayout = new javax.swing.GroupLayout(panelBuscar);
        panelBuscar.setLayout(panelBuscarLayout);
        panelBuscarLayout.setHorizontalGroup(
            panelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBuscarLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lblPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 594, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSeleccionarPac, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelBuscarLayout.setVerticalGroup(
            panelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBuscarLayout.createSequentialGroup()
                .addGroup(panelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lblPaciente, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSeleccionarPac, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 5, Short.MAX_VALUE))
        );

        panelBuscarLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnSeleccionarPac, lblPaciente});

        panelHistorico.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setText("Próximo turno");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setText("Último turno");

        try {
            txtUltimoTurno.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtUltimoTurno.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        try {
            txtProxTurno.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtProxTurno.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        try {
            txtPrimerTurno.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtPrimerTurno.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setText("Primer turno");

        javax.swing.GroupLayout panelHistoricoLayout = new javax.swing.GroupLayout(panelHistorico);
        panelHistorico.setLayout(panelHistoricoLayout);
        panelHistoricoLayout.setHorizontalGroup(
            panelHistoricoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelHistoricoLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPrimerTurno, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addGap(2, 2, 2)
                .addComponent(txtUltimoTurno, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtProxTurno, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );
        panelHistoricoLayout.setVerticalGroup(
            panelHistoricoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelHistoricoLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(panelHistoricoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel6)
                    .addComponent(txtUltimoTurno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtProxTurno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtPrimerTurno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelHistorico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jTabbedPane1, panelBuscar, panelHistorico});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelHistorico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTelefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoKeyTyped

    }//GEN-LAST:event_txtTelefonoKeyTyped

    private void txtEmailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailKeyTyped

    }//GEN-LAST:event_txtEmailKeyTyped

    private void rbtTodosPruActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtTodosPruActionPerformed
        cargarTablaPruebas(1);
    }//GEN-LAST:event_rbtTodosPruActionPerformed

    private void rbtRtdoPruActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtRtdoPruActionPerformed
        cargarTablaPruebas(2);
    }//GEN-LAST:event_rbtRtdoPruActionPerformed

    private void rbtSDescDiagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtSDescDiagActionPerformed
        cargarTablaDiagnosticos(2);
    }//GEN-LAST:event_rbtSDescDiagActionPerformed

    private void rbtSDescTratActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtSDescTratActionPerformed
        cargarTablaTratamientos(2);
    }//GEN-LAST:event_rbtSDescTratActionPerformed

    private void rbtTodosDiagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtTodosDiagActionPerformed
        cargarTablaDiagnosticos(1);
    }//GEN-LAST:event_rbtTodosDiagActionPerformed

    private void rbtTodosTratActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtTodosTratActionPerformed
        cargarTablaTratamientos(1);
    }//GEN-LAST:event_rbtTodosTratActionPerformed

    private void tablaDiagnosticoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaDiagnosticoMouseClicked
//        txtObsDiag.setText(getObsDiag());
//        obtenerTabla("Diagnostico",tablaDiagnostico,modelDiagnosticos);
        tablaDiagnostico.setName("Diagnostico");
        obtenerTabla(tablaDiagnostico,modelDiagnosticos);
    }//GEN-LAST:event_tablaDiagnosticoMouseClicked

    private void rbtTodosTurnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtTodosTurnosActionPerformed
        cargarTablaTurnos(2);
    }//GEN-LAST:event_rbtTodosTurnosActionPerformed

    private void rbtTurnosInasistenciasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtTurnosInasistenciasActionPerformed
        cargarTablaTurnos(1);
    }//GEN-LAST:event_rbtTurnosInasistenciasActionPerformed

    private void rbtTurnosAdeudadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtTurnosAdeudadosActionPerformed
        cargarTablaTurnos(3);
    }//GEN-LAST:event_rbtTurnosAdeudadosActionPerformed

    private void rbtTurnosCanceladosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtTurnosCanceladosActionPerformed
        cargarTablaTurnos(4);
    }//GEN-LAST:event_rbtTurnosCanceladosActionPerformed

    private void rbtTodosSegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtTodosSegActionPerformed
        cargarTablaSeguimientos(1);
    }//GEN-LAST:event_rbtTodosSegActionPerformed

    private void tablaTratamientosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaTratamientosMouseClicked
//        txtObsTrat.setText(getObsTrat());
        tablaTratamientos.setName("Tratamiento");
        obtenerTabla(tablaTratamientos,modelTratamientos);
    }//GEN-LAST:event_tablaTratamientosMouseClicked

    private void tablaPruebasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaPruebasMouseClicked
//        this.txtObsPru.setText(getObsPru());
//        obtenerTabla("Prueba",tablaPruebas,modelPruebas);
        tablaPruebas.setName("Prueba");
        obtenerTabla(tablaPruebas,modelPruebas);
    }//GEN-LAST:event_tablaPruebasMouseClicked

    private void tablaTurnosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaTurnosMouseClicked
//        txtObsTurno.setText(getObsTurno());
        tablaTurnos.setName("Turno");
        obtenerTabla(tablaTurnos,modelTurnos);
    }//GEN-LAST:event_tablaTurnosMouseClicked

    private void tablaSeguimientoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaSeguimientoMouseClicked
//        txtObsSeg.setText(getObsSeg());
        tablaSeguimiento.setName("Seguimiento");
        obtenerTabla(tablaSeguimiento,modelSeguimientos);
    }//GEN-LAST:event_tablaSeguimientoMouseClicked

    private void rbtConclusionSegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtConclusionSegActionPerformed
        cargarTablaSeguimientos(2);
    }//GEN-LAST:event_rbtConclusionSegActionPerformed

    private void btnVerTurnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerTurnosActionPerformed
          
        cargarTablaTurnos(5);
    }//GEN-LAST:event_btnVerTurnosActionPerformed

    private void verG1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verG1ActionPerformed
       cargarTablaSeguimientos(3);
    }//GEN-LAST:event_verG1ActionPerformed

    private void btnPruebasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPruebasActionPerformed
        limpiarVentanas();
        iFraPruebasxPac v=new iFraPruebasxPac();
        v.setModal(true); 
        fraMenu.getEscritorio().add(v);
//        centrarVentanas();
        v.show();
    }//GEN-LAST:event_btnPruebasActionPerformed

    private void btnDiagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDiagActionPerformed
        limpiarVentanas();
        iFraRConsuDiagnosticos t=new iFraRConsuDiagnosticos();
        t.setModal(true); 
        fraMenu.getEscritorio().add(t);
//        centrarVentanas();
        t.show();
    }//GEN-LAST:event_btnDiagActionPerformed

    private void btnTurnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTurnosActionPerformed
        limpiarVentanas();
        iFraRInasistencias d=new iFraRInasistencias();
        d.setModal(true); 
        fraMenu.getEscritorio().add(d);
//        centrarVentanas();
        d.show();
    }//GEN-LAST:event_btnTurnosActionPerformed

    private void btnSeleccionarPacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarPacActionPerformed

        Frame f = JOptionPane.getFrameForComponent(this);
        dlgSeleccion dialog = new dlgSeleccion(f, true);
        dialog.setOpcion(2);
        dialog.show();
    }//GEN-LAST:event_btnSeleccionarPacActionPerformed

    private void tablaMotivosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMotivosMouseClicked
        tablaMotivos.setName("Motivo");
        obtenerTabla(tablaMotivos,modelMotivos);
    }//GEN-LAST:event_tablaMotivosMouseClicked

    private void rbtTodosMotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtTodosMotActionPerformed
         cargarTablaMotivos(1);
    }//GEN-LAST:event_rbtTodosMotActionPerformed

    private void rbtObsTurnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtObsTurnoActionPerformed
         cargarTablaMotivos(2);
    }//GEN-LAST:event_rbtObsTurnoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDiag;
    private javax.swing.ButtonGroup btnGpDiagnostico;
    private javax.swing.ButtonGroup btnGpMotivos;
    private javax.swing.ButtonGroup btnGpPruebas;
    private javax.swing.ButtonGroup btnGpSeguimiento;
    private javax.swing.ButtonGroup btnGpTratamiento;
    private javax.swing.ButtonGroup btnGpTurnos;
    private javax.swing.JButton btnPruebas;
    private javax.swing.JButton btnSeleccionarPac;
    private javax.swing.JButton btnTurnos;
    private javax.swing.JButton btnVerTurnos;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblEdad;
    private javax.swing.JLabel lblEdad1;
    private javax.swing.JLabel lblEdad2;
    private javax.swing.JLabel lblEdad3;
    private javax.swing.JLabel lblEdad4;
    private javax.swing.JLabel lblPaciente;
    private javax.swing.JPanel panelBuscar;
    private javax.swing.JPanel panelDatosContacto;
    private javax.swing.JPanel panelDatosPersonales;
    private javax.swing.JPanel panelDiagnostico;
    private javax.swing.JPanel panelDiagnosticos;
    private javax.swing.JPanel panelHistorico;
    private javax.swing.JPanel panelMotivo;
    private javax.swing.JPanel panelMotivos;
    private javax.swing.JPanel panelPacientes;
    private javax.swing.JPanel panelPrueba;
    private javax.swing.JPanel panelPruebas;
    private javax.swing.JPanel panelSeguimientos;
    private javax.swing.JPanel panelTratamiento;
    private javax.swing.JPanel panelTratamientos;
    private javax.swing.JPanel panelTurno;
    private javax.swing.JPanel panelTurnos;
    private javax.swing.JRadioButton rbtConclusionSeg;
    private javax.swing.JRadioButton rbtObsTurno;
    private javax.swing.JRadioButton rbtRtdoPru;
    private javax.swing.JRadioButton rbtSDescDiag;
    private javax.swing.JRadioButton rbtSDescTrat;
    private javax.swing.JRadioButton rbtTodosDiag;
    private javax.swing.JRadioButton rbtTodosMot;
    private javax.swing.JRadioButton rbtTodosPru;
    private javax.swing.JRadioButton rbtTodosSeg;
    private javax.swing.JRadioButton rbtTodosTrat;
    private javax.swing.JRadioButton rbtTodosTurnos;
    private javax.swing.JRadioButton rbtTurnosAdeudados;
    private javax.swing.JRadioButton rbtTurnosCancelados;
    private javax.swing.JRadioButton rbtTurnosInasistencias;
    private javax.swing.JTable tablaDiagnostico;
    private javax.swing.JTable tablaMotivos;
    private javax.swing.JTable tablaPruebas;
    private javax.swing.JTable tablaSeguimiento;
    private javax.swing.JTable tablaTratamientos;
    private javax.swing.JTable tablaTurnos;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtEdad;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEstadoCivil;
    private javax.swing.JLabel txtFechaAlta;
    private javax.swing.JFormattedTextField txtFechaNac;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtOcupacion;
    private javax.swing.JFormattedTextField txtPrimerTurno;
    private javax.swing.JFormattedTextField txtProxTurno;
    private com.toedter.calendar.JDateChooser txtSegFDesde;
    private com.toedter.calendar.JDateChooser txtSegFHasta;
    private javax.swing.JTextField txtSexo;
    private javax.swing.JTextField txtTelefono;
    private com.toedter.calendar.JDateChooser txtTurnosFDesde;
    private com.toedter.calendar.JDateChooser txtTurnosFHasta;
    private javax.swing.JFormattedTextField txtUltimoTurno;
    private javax.swing.JButton verG1;
    // End of variables declaration//GEN-END:variables


    private void arranque(){
        lblPaciente.setOpaque(true);
        lblPaciente.setBackground(Color.white);
        lblPaciente.setForeground(Color.blue); 
        lblPaciente.setText(null);
//        this.btnGuardar.setEnabled(false);
//        this.btnInforme.setEnabled(true);
//        this.btnGuardar.setText("Guardar");
        limpiar();
    }
    
    public void setPaciente(int id, String nombre){
        codPac=id;
        lblPaciente.setText(nombre.toUpperCase());
      
      if(id!=0 && !nombre.isEmpty()){
          limpiar();
          cargarTabla(1);
      }
    }
    
    private void limpiarVentanas(){
    //Ocultar todos los frame menos iFraAdm
    int cant=fraMenu.getEscritorio().getAllFrames().length;
    JInternalFrame internalFrames[] = fraMenu.getEscritorio().getAllFrames();
    for (int i=0; i<cant; i++) {
//            fraMenu.getEscritorio().remove(i);         
        if(!internalFrames[i].getTitle().equals("Historico de Paciente")){
            internalFrames[i].dispose();
        }
    }
}
    
    private void limpiar(){
        clearForm(panelTurno);
        EnableForm(panelTurno, false);
        clearForm(panelPacientes);
        EnableForm(panelPacientes, false);
        clearForm(panelMotivos);
        EnableForm(panelMotivos, false);
        clearForm(panelPruebas);
        EnableForm(panelPruebas, false);
        clearForm(panelDiagnosticos);
        EnableForm(panelDiagnosticos, false);
        clearForm(panelTratamientos);
        EnableForm(panelTratamientos, false);
        clearForm(panelSeguimientos);
        EnableForm(panelSeguimientos, false);
        clearForm(panelHistorico);
        EnableForm(panelHistorico, false);
        defaultTableModelMotivo();
        defaultTableModelPrueba();
        defaultTableModelDiagnosticos();
        defaultTableModelTratamiento();
        defaultTableModelTurnos();
        defaultTableModelSeguimientos();
//        this.btnGuardar.setEnabled(false);
        btnGpMotivos.clearSelection();
        btnGpPruebas.clearSelection();
        btnGpDiagnostico.clearSelection();
        btnGpTratamiento.clearSelection();
        btnGpTurnos.clearSelection();
        btnGpSeguimiento.clearSelection();
    }

    private void grupoBotones(){
        this.btnGpMotivos=new ButtonGroup();
        this.btnGpMotivos.add(this.rbtTodosMot);
        this.btnGpMotivos.add(this.rbtObsTurno);
        btnGpMotivos.clearSelection();
        this.btnGpPruebas=new ButtonGroup();
        this.btnGpPruebas.add(this.rbtTodosPru);
        this.btnGpPruebas.add(this.rbtRtdoPru);
        btnGpPruebas.clearSelection();
        this.btnGpDiagnostico=new ButtonGroup();
        this.btnGpDiagnostico.add(this.rbtTodosDiag);
        this.btnGpDiagnostico.add(this.rbtSDescDiag);
        btnGpDiagnostico.clearSelection();
        this.btnGpTratamiento=new ButtonGroup();
        this.btnGpTratamiento.add(this.rbtTodosTrat);
        this.btnGpTratamiento.add(rbtSDescTrat);
        btnGpTratamiento.clearSelection();
        this.btnGpTurnos=new ButtonGroup();
        this.btnGpTurnos.add(this.rbtTurnosInasistencias);
        this.btnGpTurnos.add(this.rbtTodosTurnos);
        this.btnGpTurnos.add(this.rbtTurnosAdeudados);
        this.btnGpTurnos.add(this.rbtTurnosCancelados);
        btnGpTurnos.clearSelection();
        this.btnGpSeguimiento=new ButtonGroup();
        this.btnGpSeguimiento.add(this.rbtConclusionSeg);;
        this.btnGpSeguimiento.add(this.rbtTodosSeg);
        btnGpSeguimiento.clearSelection();
    }
    
    public void centrarVentanas(String titulo){
        int x,y;
        int cant=fraMenu.getEscritorio().getAllFrames().length;
        JInternalFrame internalFrames[] = fraMenu.getEscritorio().getAllFrames();
        for (int i=0; i<cant; i++) {         
            if(!internalFrames[i].getTitle().equals(titulo)){
                x = (fraMenu.getEscritorio().getWidth()/2) - internalFrames[i].getWidth()/2;
                y = (fraMenu.getEscritorio().getHeight()/2) - internalFrames[i].getHeight()/2;
                internalFrames[i].setLocation(x, y);
            }

        }
    }
       
    public void obtenerTabla(JTable tabla, DefaultTableModel model){
       int id =0; int idT;
       String fech, nom, des;
       String op=tabla.getName();
//       if(tabla.getName().contains("Prueba")){
      String ini="<html><font size=5 style=color:black;> "; 
      Object[] options = { "SI", "NO" };
      int choice = JOptionPane.showOptionDialog(null,
          ini + "¿Desea editar este registro?",
          "Seleccione una opción",
          JOptionPane.YES_NO_OPTION,
          JOptionPane.QUESTION_MESSAGE,
          null,
          options,
          options[0]);
      if (choice == JOptionPane.YES_OPTION) {
           iFraEdicion ie=new iFraEdicion();
           int selectedRow = tabla.getSelectedRow();
           id = getId(tabla, model);
           switch(op){
               case "Motivo":            
                   id = getId(tabla, model);
                   idT=1;
                   nom= (String)tabla.getValueAt(selectedRow,2);
                   des= (String)tabla.getValueAt(selectedRow,3);
                   fech=(String)tabla.getValueAt(selectedRow,4);
                   ie.setDatos(id,idT, fech, nom, des,"Motivo");
                   break;
               case "Prueba":            
                   id = getId(tabla, model);
                   idT=1;
                   nom= (String)tabla.getValueAt(selectedRow,2);
                   des= (String)tabla.getValueAt(selectedRow,3);
                   fech=(String)tabla.getValueAt(selectedRow,4);
                   ie.setDatos(id,idT, fech, nom, des,"Prueba");
                   break;
               case "Diagnostico":
                   nom= (String)tabla.getValueAt(selectedRow,1);
                   des= (String)tabla.getValueAt(selectedRow,2);
                   fech=(String)tabla.getValueAt(selectedRow,3);
                   ie.setDatos(id,0, fech, nom, des,tabla.getName());
                   break;
               case "Tratamiento":
                   nom= (String)tabla.getValueAt(selectedRow,1);
                   des= (String)tabla.getValueAt(selectedRow,2);
                   fech=(String)tabla.getValueAt(selectedRow,3);
                   ie.setDatos(id,0, fech, nom, des,tabla.getName());
                   break;
               case "Turno":
                   des= (String)tabla.getValueAt(selectedRow,7); //Motivo
                   fech=(String)tabla.getValueAt(selectedRow,1);
                   ie.setDatos(id,0, fech, "", des,tabla.getName());
                   break;
               case "Seguimiento":
                   nom= (String)tabla.getValueAt(selectedRow,2);
                   des= (String)tabla.getValueAt(selectedRow,3);
                   fech=(String)tabla.getValueAt(selectedRow,1);
                   ie.setDatos(id,0, fech, nom, des,tabla.getName());
                   break;
               default:
                   break;        
           }
           ie.setModal(true); 
           fraMenu.getEscritorio().add(ie);
           centrarVentanas(this.getTitle());
           ie.show();
           
           reset();
      }
       
    }
    
    public void reset(){
        defaultTableModelMotivo();
       this.defaultTableModelPrueba();
       this.defaultTableModelDiagnosticos();
       this.defaultTableModelTratamiento();
       this.defaultTableModelSeguimientos();
       this.defaultTableModelTurnos();
       btnGpMotivos.clearSelection();
       btnGpPruebas.clearSelection();
       btnGpDiagnostico.clearSelection();
       btnGpTratamiento.clearSelection();
       btnGpTurnos.clearSelection();
       btnGpSeguimiento.clearSelection();
    }
    
    private int getId(JTable tabla, DefaultTableModel model){
        int selectedRow = tabla.getSelectedRow();//Obtenemos la fila seleccionada...
        Object valueAt = model.getValueAt(selectedRow, 0);//Obtenemos el valor de esa fila...
        int id = Integer.parseInt(valueAt.toString());//Convertimos el valor en entero...
        return id;
    }
    
    public void defaultTableModelMotivo(){
        this.tablaMotivos.getColumnModel().getColumn(0).setPreferredWidth(0);
        this.tablaMotivos.getColumnModel().getColumn(0).setMinWidth(0);
        this.tablaMotivos.getColumnModel().getColumn(0).setMaxWidth(0);
        this.tablaMotivos.getColumnModel().getColumn(1).setPreferredWidth(0);
        this.tablaMotivos.getColumnModel().getColumn(1).setMinWidth(0);
        this.tablaMotivos.getColumnModel().getColumn(1).setMaxWidth(0);
        this.tablaMotivos.getColumnModel().getColumn(2).setPreferredWidth(100);
        this.tablaMotivos.getColumnModel().getColumn(3).setPreferredWidth(120);
        this.tablaMotivos.getColumnModel().getColumn(4).setPreferredWidth(60);
//        this.tablaPruebas.getColumnModel().getColumn(4).setPreferredWidth(80);
        tablaMotivos.getTableHeader().setFont(new Font("Segoe UI", Font.ITALIC, 18));
        tablaMotivos.setFont(new Font("Segoe UI", Font.PLAIN, 18));
        tablaMotivos.setRowHeight(30);
        tablaMotivos.setAutoCreateRowSorter(true);
        modelMotivos = (DefaultTableModel) this.tablaMotivos.getModel();
        modelMotivos.setNumRows(0);
    }
    
    public void defaultTableModelPrueba(){
        this.tablaPruebas.getColumnModel().getColumn(0).setPreferredWidth(0);
        this.tablaPruebas.getColumnModel().getColumn(0).setMinWidth(0);
        this.tablaPruebas.getColumnModel().getColumn(0).setMaxWidth(0);
        this.tablaPruebas.getColumnModel().getColumn(1).setPreferredWidth(0);
        this.tablaPruebas.getColumnModel().getColumn(1).setMinWidth(0);
        this.tablaPruebas.getColumnModel().getColumn(1).setMaxWidth(0);
        this.tablaPruebas.getColumnModel().getColumn(2).setPreferredWidth(100);
        this.tablaPruebas.getColumnModel().getColumn(3).setPreferredWidth(120);
        this.tablaPruebas.getColumnModel().getColumn(4).setPreferredWidth(60);
//        this.tablaPruebas.getColumnModel().getColumn(4).setPreferredWidth(80);
        tablaPruebas.getTableHeader().setFont(new Font("Segoe UI", Font.ITALIC, 18));
        tablaPruebas.setFont(new Font("Segoe UI", Font.PLAIN, 18));
        tablaPruebas.setRowHeight(30);
        tablaPruebas.setAutoCreateRowSorter(true);
        modelPruebas = (DefaultTableModel) this.tablaPruebas.getModel();
        modelPruebas.setNumRows(0);
    }
    
    public void defaultTableModelDiagnosticos(){
        this.tablaDiagnostico.getColumnModel().getColumn(0).setPreferredWidth(0);
        this.tablaDiagnostico.getColumnModel().getColumn(0).setMinWidth(0);
        this.tablaDiagnostico.getColumnModel().getColumn(0).setMaxWidth(0);
//        tablaDiagnostico.removeColumn(tablaDiagnostico.getColumnModel().getColumn(0));
        this.tablaDiagnostico.getColumnModel().getColumn(1).setPreferredWidth(80);
        this.tablaDiagnostico.getColumnModel().getColumn(2).setPreferredWidth(120);
        this.tablaDiagnostico.getColumnModel().getColumn(3).setPreferredWidth(60);
        tablaDiagnostico.getTableHeader().setFont(new Font("Segoe UI", Font.ITALIC, 18));
        tablaDiagnostico.setFont(new Font("Segoe UI", Font.PLAIN, 18));
        tablaDiagnostico.setRowHeight(30);
        tablaDiagnostico.setAutoCreateRowSorter(true);
        modelDiagnosticos = (DefaultTableModel) this.tablaDiagnostico.getModel();
        modelDiagnosticos.setNumRows(0);
    }
    
    public void defaultTableModelTratamiento(){
        this.tablaTratamientos.getColumnModel().getColumn(0).setPreferredWidth(0);
        this.tablaTratamientos.getColumnModel().getColumn(0).setMinWidth(0);
        this.tablaTratamientos.getColumnModel().getColumn(0).setMaxWidth(0);
        this.tablaTratamientos.getColumnModel().getColumn(0).setPreferredWidth(100);
        this.tablaTratamientos.getColumnModel().getColumn(1).setPreferredWidth(120);
        this.tablaTratamientos.getColumnModel().getColumn(2).setPreferredWidth(60);
//        this.tablaTratamientos.getColumnModel().getColumn(3).setPreferredWidth(60);
        tablaTratamientos.getTableHeader().setFont(new Font("Segoe UI", Font.ITALIC, 18));
        tablaTratamientos.setFont(new Font("Segoe UI", Font.PLAIN, 18));
        tablaTratamientos.setRowHeight(30);
        tablaTratamientos.setAutoCreateRowSorter(true);
        modelTratamientos = (DefaultTableModel) this.tablaTratamientos.getModel();
        modelTratamientos.setNumRows(0);
    }
    
    public void defaultTableModelTurnos(){
        tablaTurnos.getColumnModel().getColumn(0).setPreferredWidth(0);
        tablaTurnos.getColumnModel().getColumn(0).setMinWidth(0);
        tablaTurnos.getColumnModel().getColumn(0).setMaxWidth(0);
        this.tablaTurnos.getColumnModel().getColumn(1).setPreferredWidth(80);
        this.tablaTurnos.getColumnModel().getColumn(2).setPreferredWidth(80);
        this.tablaTurnos.getColumnModel().getColumn(3).setPreferredWidth(50);
        this.tablaTurnos.getColumnModel().getColumn(4).setPreferredWidth(60);
        this.tablaTurnos.getColumnModel().getColumn(5).setPreferredWidth(60);
        this.tablaTurnos.getColumnModel().getColumn(6).setPreferredWidth(60);
        this.tablaTurnos.getColumnModel().getColumn(7).setPreferredWidth(100);
        tablaTurnos.getTableHeader().setFont(new Font("Segoe UI", Font.ITALIC, 18));
        tablaTurnos.setFont(new Font("Segoe UI", Font.PLAIN, 18));
        tablaTurnos.setRowHeight(30);
        tablaTurnos.setAutoCreateRowSorter(true);
//        tablaTurnos.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
//    	setViewportView(tablaTurnos); //La tabla se verá dentro del panel de barras de desplazamiento  
        modelTurnos = (DefaultTableModel) this.tablaTurnos.getModel();
        modelTurnos.setNumRows(0);
    }
    
    public void defaultTableModelSeguimientos(){
        this.tablaSeguimiento.getColumnModel().getColumn(0).setPreferredWidth(0);
        tablaSeguimiento.getColumnModel().getColumn(0).setMaxWidth(0);
        tablaSeguimiento.getColumnModel().getColumn(0).setMinWidth(0);
        this.tablaSeguimiento.getColumnModel().getColumn(1).setPreferredWidth(60);
        this.tablaSeguimiento.getColumnModel().getColumn(2).setPreferredWidth(80);
        this.tablaSeguimiento.getColumnModel().getColumn(3).setPreferredWidth(80);
        this.tablaSeguimiento.getColumnModel().getColumn(4).setPreferredWidth(40);
        tablaSeguimiento.getTableHeader().setFont(new Font("Segoe UI", Font.ITALIC, 18));
        tablaSeguimiento.setFont(new Font("Segoe UI", Font.PLAIN, 18));
        tablaSeguimiento.setRowHeight(30);
        tablaSeguimiento.setAutoCreateRowSorter(true);
        modelSeguimientos = (DefaultTableModel) this.tablaSeguimiento.getModel();
        modelSeguimientos.setNumRows(0);
    }
    
    public void cargarTabla(int op){           
        if(codPac!=0){
            cargarPaciente();
            setearFechas();
        } else{
                JOptionPane.showMessageDialog(this, "<html><font size=5>No se encontro un Paciente con estos datos.");
//                this.btnGuardar.setEnabled(false);
          }
    }
    
    private void setearFechas(){
        fecha=new Fecha();
        Calendar cal = Calendar.getInstance();
        Date fechaDef = fecha.convertirCalendaDate(cal);
        txtTurnosFDesde.setDate(fechaDef);
        txtTurnosFHasta.setDate(fechaDef);
        txtSegFDesde.setDate(fechaDef);
        txtSegFHasta.setDate(fechaDef);
    
    }

    public void cargarPaciente(){// EN LOS COMPONENTES PARA LUEGO EDITAR
        int idPac = codPac;
        Paciente pac = AbstractDAO.getEntidad(idPac, Paciente.class);
//            JOptionPane.showMessageDialog(this, pac);
        if(pac!=null){
//            this.btnGuardar.setEnabled(true);
            fecha = new Fecha();                 
            String fechaNac = fecha.retornarString(pac.getFechaNac()); 
            this.txtFechaNac.setText(fechaNac);

            this.txtEdad.setText(String.valueOf(pac.getEdad()));
            this.txtId.setText(String.valueOf(pac.getId()));
            this.txtApellido.setText(pac.getApellido());
            this.txtNombre.setText(pac.getNombre());        
            this.txtOcupacion.setText(pac.getOcupacion().getDes());//
            this.txtEmail.setText(pac.getEmail());
            this.txtTelefono.setText(pac.getTelefono());
            this.txtSexo.setText(pac.getSexo());
            this.txtEstadoCivil.setText(pac.getEstadoCivil());//
            
            fecha=new Fecha();
            String pTurno, uTurno, nTurno;
            pTurno=conexion.getInstance().getFechaTurnosXPac(codPac, 1);
            uTurno=conexion.getInstance().getFechaTurnosXPac(codPac, 2);
            nTurno=conexion.getInstance().getFechaTurnosXPac(codPac, 3);
            this.txtPrimerTurno.setText(pTurno);
            this.txtUltimoTurno.setText(uTurno);
            this.txtProxTurno.setText(nTurno);
            this.txtFechaAlta.setText("Fecha de Ingreso: "+fecha.retornarString(pac.getFechaIngreso()));
            EnableForm(panelPacientes, true);
            EnableForm(panelMotivo, true);
            EnableForm(panelTurno, true);   
            EnableForm(panelPrueba, true);
            EnableForm(panelDiagnostico, true);
            EnableForm(panelTratamiento, true);
            EnableForm(panelSeguimientos, true);
            EnableForm(panelHistorico, true);
            this.txtPrimerTurno.setEnabled(false);
            this.txtUltimoTurno.setEnabled(false);
            this.txtProxTurno.setEnabled(false);
        }
        else{
            JOptionPane.showMessageDialog(this, "<html><font size=5>No se encontro un Paciente con estos datos.");
//            this.btnGuardar.setEnabled(false);
        }
    }

public void cargarTablaMotivos(int op){
    defaultTableModelMotivo();
    String fTurno=""; fecha= new Fecha();
    List<MotivosXPac> lista = null;   
    if (op==1){ 
        int cod = codPac;
        lista=conexion.getInstance().getMotivosXPac(cod, 1);
    }
    else {
        int cod = codPac;
        lista=conexion.getInstance().getMotivosXPac(cod, 2);             
    }
        for (Iterator<MotivosXPac> it = lista.iterator(); it.hasNext();) {
            MotivosXPac m = it.next();
            fTurno = fecha.getStringXfecha(m.getFecha());
            modelMotivos.addRow(new Object[]{
                m.getNroTurno(), m.getNroMot(), m.getMotivo(), m.getObsTurno(), fTurno  
            });
        } 
    if(lista.isEmpty())JOptionPane.showMessageDialog(this, "<html><font size=5>Esta búsqueda no arrojo resultados..");
}
    
    
public void cargarTablaPruebas(int op){
    defaultTableModelPrueba();
    String fTurno=""; fecha= new Fecha();
    List<PruebasXPac> lista = null;   
    if (op==1){ 
        int cod = codPac;
        lista=conexion.getInstance().getPruebasXPac(cod, 1);
    }
    else {
        int cod = codPac;
        lista=conexion.getInstance().getPruebasXPac(cod, 2);             
    }
        for (Iterator<PruebasXPac> it = lista.iterator(); it.hasNext();) {
            PruebasXPac p = it.next();
            fTurno = fecha.getStringXfecha(p.getFecha());
            modelPruebas.addRow(new Object[]{
//                p.getNroPru(), p.getPrueba(), p.getResultado(), p.getFecha(), p.getNroTurno()
//                p.getPrueba(), p.getResultado(), fTurno  
                p.getNroTurno(), p.getNroPru(), p.getPrueba(), p.getResultado(), fTurno  
            });
        } 
    if(lista.isEmpty())JOptionPane.showMessageDialog(this, "<html><font size=5>Esta búsqueda no arrojo resultados..");
}

public void cargarTablaDiagnosticos(int op){
    defaultTableModelDiagnosticos();
    String fTurno=""; fecha= new Fecha();
    List<DiagnosticosXPac> lista = null;   
    if (op==1){ 
        int cod = codPac;
        lista=conexion.getInstance().getDiagnosticosXPac(cod, 1);
    }
    else {
        int cod = codPac;
        lista=conexion.getInstance().getDiagnosticosXPac(cod, 2);             
    }
        for (Iterator<DiagnosticosXPac> it = lista.iterator(); it.hasNext();) {
            DiagnosticosXPac p = it.next();
            fTurno = fecha.getStringXfecha(p.getFecha());
            modelDiagnosticos.addRow(new Object[]{
                p.getNroDiag(), p.getDiagnostico(), p.getDescripcion(), fTurno
//                p.getDiagnostico(), p.getDescripcion(), fTurno    
            });
        } 
    if(lista.isEmpty())JOptionPane.showMessageDialog(this, "<html><font size=5>Esta búsqueda no arrojo resultados..");
}
    
public void cargarTablaTratamientos(int op){
    defaultTableModelTratamiento();
    String fTurno=""; fecha= new Fecha();  
    List<TratamientosXPac> lista = null;   
    if (op==1){ 
        int cod = codPac;
        lista=conexion.getInstance().getTratamientosXPac(cod, 1);
    }
    else {
        int cod = codPac;
        lista=conexion.getInstance().getTratamientosXPac(cod, 2);             
    }
        for (Iterator<TratamientosXPac> it = lista.iterator(); it.hasNext();) {
            TratamientosXPac p = it.next();
            fTurno = fecha.getStringXfecha(p.getFecha());
            modelTratamientos.addRow(new Object[]{
                p.getNro(), p.getNombre(), p.getDescripcion(), fTurno
//                p.getNombre(), p.getDescripcion(), fTurno
//                p.getNro(), p.getNombre(), p.getDescripcion(), p.getFecha(), ""    
            });
        } 
    if(lista.isEmpty())JOptionPane.showMessageDialog(this, "<html><font size=5>Esta búsqueda no arrojo resultados..");
}    
    
public void cargarTablaTurnos(int op){
    
        defaultTableModelTurnos();
        boolean asistio,pagado,cancelado;
//        turnoDAO = new TurnoDAO();
        List<Turno> lista = null;
        if (op==1){ 
            lista=AbstractDAO.getListaEntidadesXPAC(Turno.class, codPac, 1); //Asistio
        } else if(op==2){
            lista=AbstractDAO.getListaEntidadesXPAC(Turno.class, codPac, 0);              
        } else if(op==3){
            lista=AbstractDAO.getListaEntidadesXPAC(Turno.class, codPac, 2); //Pago
        } else if(op==4){
            lista=AbstractDAO.getListaEntidadesXPAC(Turno.class, codPac, 3); //cancelo
        } else if(op==5){
            fecha = new Fecha();
            Calendar f1=fecha.retornarCalendar(fecha.getStringXfecha(txtTurnosFDesde.getDate()));
            Calendar f2=fecha.retornarCalendar(fecha.getStringXfecha(txtTurnosFHasta.getDate()));  
//            lista = turnoDAO.getTurnoXRangofecha(f1, f2);
            lista = AbstractDAO.getListaEntidadesXFechas(Turno.class, codPac ,f1, f2, 0);
        }
        
        if(!lista.isEmpty()){
            for (Iterator<Turno> it = lista.iterator(); it.hasNext();) {
                Turno t = it.next();

                if(t.getEstatusAsistio()==Turno.EstatusAsistio.ASISTIO) asistio=true;
                    else asistio=false;
                if(t.getEstatusPago()==Turno.EstatusPago.ABONADO) pagado=true;
                    else pagado=false;         
                if(t.getEstatusTurno()==Turno.EstatusTurno.INACTIVO) cancelado=true;
                    else cancelado=false;

                String fTurno = fecha.retornarString(t.getFecha());

                modelTurnos.addRow(new Object[]{
                    t.getNum(),
                    fTurno,  
                    t.getHora(),
                     "$ "+t.getMonto(),
                    asistio,
                    pagado,
                    cancelado,
                    t.getObservaciones()
                });
            }
        }
        else JOptionPane.showMessageDialog(this, "<html><font size=5>Esta búsqueda no arrojo resultados..");
    
    }    
    
  
public void cargarTablaSeguimientos(int op){
        String fTurno;
        defaultTableModelSeguimientos();
        boolean control;
//        turnoDAO = new TurnoDAO();
        List<Seguimiento> lista = null;
        if (op==1){ 
            lista=AbstractDAO.getListaEntidadesXPAC(Seguimiento.class, codPac, 0); 
        } else if(op==2){
            lista=AbstractDAO.getListaEntidadesXPAC(Seguimiento.class, codPac, 4);
        } else if(op==3){
           fecha = new Fecha();
           Calendar f1=fecha.retornarCalendar(fecha.getStringXfecha(txtSegFDesde.getDate()));
           Calendar f2=fecha.retornarCalendar(fecha.getStringXfecha(txtSegFHasta.getDate())); 
           //no anda!
           lista = AbstractDAO.getListaEntidadesXFechas(Seguimiento.class, codPac,f1, f2, 0);
        }
        
        if(!lista.isEmpty()){
            for (Iterator<Seguimiento> it = lista.iterator(); it.hasNext();) {
                Seguimiento t = it.next();

                if(t.getEstadoControl()==Seguimiento.control.SI) control=true;
                    else control=false;
                fecha = new Fecha();
                fTurno = fecha.retornarString(t.getFecha());

                modelSeguimientos.addRow(new Object[]{
                    t.getNum(), 
                    fTurno,  
                    t.getDiagnostico().getDes(),
                    t.getConclusion(),
                    control
                });
            }
        }
        else JOptionPane.showMessageDialog(this, "<html><font size=5>Esta búsqueda no arrojo resultados..");
    
    } 


    
/**
* Método que limpia los datos de todos los componentes
* susceptibles de ser puestos en blanco, como los "JTextField"
* "jTextAreas", etc…, que pertenezcan a un "JPanel" o "JScrollPane",
* es recursivo, asi que si dentro del panel hay otro panel con
* más componentes susceptibles también los pondrá en blanco.
     * @param panel
*/
    public void clearForm(Object panel) {
        String nombre_clase = panel.getClass().getName();
        switch (nombre_clase) {
            case "javax.swing.JPanel":
                clearPanel((javax.swing.JPanel) panel);
                break;
            case "javax.swing.JScrollPane":
                clearScrollPane((javax.swing.JScrollPane) panel);
                break;
            case "javax.swing.JTabbedPane":
                clearTabbedPane((javax.swing.JTabbedPane) panel);
                break;
        }
    }

    private void clearPanel(javax.swing.JPanel panel) {
        java.awt.Component[] componentes = panel.getComponents();
        for (Component componente : componentes) {
            clearComponent(componente);
        }
    }

    private void clearTabbedPane(javax.swing.JTabbedPane panel) {
        java.awt.Component[] componentes = panel.getComponents();
        for (Component componente : componentes) {
            clearComponent(componente);
        }
    }
    
    private void clearScrollPane(javax.swing.JScrollPane panel) {
        java.awt.Component[] componentes = panel.getViewport().getComponents();
        for (Component componente : componentes) {
            clearComponent(componente);
        }
    }

    private void clearComponent(java.awt.Component comp) {
        String nombre_clase = comp.getClass().getName();
        switch (nombre_clase) {
            case "javax.swing.JTextField":
                ((javax.swing.JTextField) comp).setText("");
                break;
            case "javax.swing.JComboBox":
                ((javax.swing.JComboBox) comp).setSelectedIndex(-1);
                break;
            case "javax.swing.JTextArea":
                ((javax.swing.JTextArea) comp).setText("");
                break;
            case "javax.swing.JFormattedTextField":
                ((javax.swing.JFormattedTextField) comp).setText("");
                break;
            case "javax.swing.JCheckBox":
            ((javax.swing.JCheckBox) comp).setSelected(false);
            break;  
            case "javax.swing.JPanel":
                clearPanel((javax.swing.JPanel) comp);
                break;
            case "javax.swing.JScrollPane":
                clearScrollPane((javax.swing.JScrollPane) comp);
                break;
            case "javax.swing.JTabbedPane":
                clearTabbedPane((javax.swing.JTabbedPane) comp);
                break;
        }
    }
    
    
    
  /**
* Método habilita o inhabilita todos los componentes
     * @param panel
     * @param op
*/
    public void EnableForm(Object panel, boolean op) {
        String nombre_clase = panel.getClass().getName();
        switch (nombre_clase) {
            case "javax.swing.JPanel":
                enablePanel((javax.swing.JPanel) panel, op);
                break;
            case "javax.swing.JScrollPane":
                enableScrollPane((javax.swing.JScrollPane) panel, op);
                break;
            case "javax.swing.JTabbedPane":
                enableTabbedPane((javax.swing.JTabbedPane) panel, op);
                break;
        }
    }

    private void enablePanel(javax.swing.JPanel panel, boolean op) {
        java.awt.Component[] componentes = panel.getComponents();
        for (Component componente : componentes) {
            enableComponent(componente, op);
        }
    }

    private void enableTabbedPane(javax.swing.JTabbedPane panel, boolean op) {
        java.awt.Component[] componentes = panel.getComponents();
        for (Component componente : componentes) {
            enableComponent(componente, op);
        }
    }
    
    private void enableScrollPane(javax.swing.JScrollPane panel, boolean op) {
        java.awt.Component[] componentes = panel.getViewport().getComponents();
        for (Component componente : componentes) {
            enableComponent(componente, op);
        }
    }

    private void enableComponent(java.awt.Component comp, boolean op) {
        String nombre_clase = comp.getClass().getName();
        switch (nombre_clase) {
            case "javax.swing.JTextField":
                ((javax.swing.JTextField) comp).setEnabled(op);
                break;
            case "javax.swing.JComboBox":
                ((javax.swing.JComboBox) comp).setEnabled(op);
                break;
            case "javax.swing.JTextArea":
                ((javax.swing.JTextArea) comp).setEnabled(op);
                break;
            case "javax.swing.JCheckBox":
                ((javax.swing.JCheckBox) comp).setEnabled(op);
                break;
            case "javax.swing.JRadioButton":
                ((javax.swing.JRadioButton) comp).setEnabled(op);
                break;
            case "javax.swing.JFormattedTextField":
                ((javax.swing.JFormattedTextField) comp).setEnabled(op);
                break;
            case "javax.swing.JLabel":
                ((javax.swing.JLabel) comp).setEnabled(op);
                break;
            case "javax.swing.JTable":
                ((javax.swing.JTable) comp).setEnabled(op);
                break;
            case "javax.swing.JButton":
                ((javax.swing.JButton) comp).setEnabled(op);
                break;
            case "com.toedter.calendar.JCalendar":
                ((com.toedter.calendar.JCalendar) comp).setEnabled(op);
                break;   
            case "javax.swing.JPanel":
                enablePanel((javax.swing.JPanel) comp, op);
                ((javax.swing.JPanel) comp).setEnabled(op);
                break;
            case "javax.swing.JScrollPane":
                enableScrollPane((javax.swing.JScrollPane) comp, op);
                ((javax.swing.JScrollPane) comp).setEnabled(op);
                break;
            case "javax.swing.JTabbedPane":
                enableTabbedPane((javax.swing.JTabbedPane) comp, op);
                ((javax.swing.JTabbedPane) comp).setEnabled(op);
                break;
        }
    } 
    
    
    
//    MessageFormat headerFormat = new MessageFormat("Listado de Clientes 2010-2012");
//          MessageFormat footerFormat = new MessageFormat("- Página {0} -");
//          
////          tablaTurnos.setAutoResizeMode(tablaTurnos.AUTO_RESIZE_ALL_COLUMNS);
//          tablaTurnos.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
////    	setViewportView(tablaTurnos); //La tabla se verá dentro del panel de barras de desplazamiento
//          try{
//              tablaTurnos.print(PrintMode.FIT_WIDTH, headerFormat, footerFormat);
//          }catch(Exception e){}
//          
////        try {
////            tablaTurnos.print();//envia los datos de la tabla a la impresora
////        } catch (PrinterException ex) {
////            Logger.getLogger(MiFormulario.class.getName()).log(Level.SEVERE, null, ex);
////        }
    
    
    

}
