/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Vista;

import Controlador.conexion;
import Reportes.DeudoresR;
import static Vista.iFraAdm.createImageIcon;
import java.awt.Frame;
import java.awt.Toolkit;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.text.ParsePosition;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import util.Fecha;
import util.modalInternalFrame;

/**
 *
 * @author usuario
 */
public class iFraRPacDeudores extends modalInternalFrame {
    private boolean ordPac,ordMonto,ordF,asc,desc,todos,algunos;
    int anio,mes;
    Fecha f;
    ImageIcon icon = createImageIcon("img/ayuda_.png");

    /**
     * Creates new form iFraRPacDeudores
     */
    public iFraRPacDeudores() {
        initComponents();
        grupoBotones();
        arranque();
        ordPac=ordMonto=ordF=asc=desc=todos=algunos=false;
        anio=mes=0;
//        SLetras(txtMotivo);
        f=null;
        SNroEntero(this.txtCant);
        SNroEntero(txtMI);
        SNroEntero(txtMF);
        SNroEntero(txtMonto);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGpOrdenar = new javax.swing.ButtonGroup();
        btnGpOrdenarTipo = new javax.swing.ButtonGroup();
        btnGpMostrar = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        panelFiltro = new javax.swing.JPanel();
        lblFecha = new javax.swing.JLabel();
        lblInclu = new javax.swing.JLabel();
        lblEntre = new javax.swing.JLabel();
        lblY1 = new javax.swing.JLabel();
        lblPaciente = new javax.swing.JLabel();
        lblNroPac = new javax.swing.JLabel();
        txtIdPac = new javax.swing.JTextField();
        lblMonto = new javax.swing.JLabel();
        lblDe = new javax.swing.JLabel();
        txtMI = new javax.swing.JTextField();
        lblY2 = new javax.swing.JLabel();
        txtMF = new javax.swing.JTextField();
        btnSeleccionarPac = new javax.swing.JButton();
        lblNomPac = new javax.swing.JLabel();
        txtNomPac = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        btnAyuda = new javax.swing.JButton();
        lblAnio = new javax.swing.JLabel();
        chooserAnio = new com.toedter.calendar.JYearChooser();
        lblMes = new javax.swing.JLabel();
        chooserMes = new com.toedter.calendar.JMonthChooser();
        chkRangoFecha = new javax.swing.JCheckBox();
        chkAnio = new javax.swing.JCheckBox();
        chkMes = new javax.swing.JCheckBox();
        chkRangoMonto = new javax.swing.JCheckBox();
        chkPaciente = new javax.swing.JCheckBox();
        cboOp = new javax.swing.JComboBox();
        txtMonto = new javax.swing.JTextField();
        lblM3 = new javax.swing.JLabel();
        chkMonto = new javax.swing.JCheckBox();
        lblM2 = new javax.swing.JLabel();
        lblM1 = new javax.swing.JLabel();
        lblIncluM = new javax.swing.JLabel();
        txtIni = new com.toedter.calendar.JDateChooser();
        txtFin = new com.toedter.calendar.JDateChooser();
        panelOrdenar = new javax.swing.JPanel();
        rbtPac = new javax.swing.JRadioButton();
        rbtFecha = new javax.swing.JRadioButton();
        rbtMonto = new javax.swing.JRadioButton();
        panelTipo = new javax.swing.JPanel();
        rbtAsc = new javax.swing.JRadioButton();
        rbtDesc = new javax.swing.JRadioButton();
        panelMostrar = new javax.swing.JPanel();
        rbtXRegistros = new javax.swing.JRadioButton();
        rbtMostrarTodos = new javax.swing.JRadioButton();
        txtCant = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        btnVer = new javax.swing.JButton();

        setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        setClosable(true);
        setTitle("Pacientes que no abonaron la consulta");

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 0, 36)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/img/note.png"))); // NOI18N
        jLabel1.setText("   Pacientes que no abonaron la consulta");
        jLabel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        panelFiltro.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        panelFiltro.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Filtro", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semilight", 0, 24))); // NOI18N

        lblFecha.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblFecha.setText(" Fecha:");
        lblFecha.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblFecha.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblFecha.setEnabled(false);
        lblFecha.setOpaque(true);

        lblInclu.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblInclu.setText("inclusive.");
        lblInclu.setEnabled(false);

        lblEntre.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblEntre.setText("Entre");
        lblEntre.setEnabled(false);

        lblY1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblY1.setText(" y");
        lblY1.setEnabled(false);

        lblPaciente.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblPaciente.setText(" Paciente: ");
        lblPaciente.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblPaciente.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblPaciente.setEnabled(false);
        lblPaciente.setOpaque(true);

        lblNroPac.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblNroPac.setText("Nro");
        lblNroPac.setEnabled(false);

        txtIdPac.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtIdPac.setEnabled(false);

        lblMonto.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblMonto.setText(" Monto: ");
        lblMonto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblMonto.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblMonto.setEnabled(false);
        lblMonto.setOpaque(true);

        lblDe.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblDe.setText("Entre");
        lblDe.setEnabled(false);

        txtMI.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtMI.setEnabled(false);

        lblY2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblY2.setText("y");
        lblY2.setEnabled(false);

        txtMF.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtMF.setEnabled(false);

        btnSeleccionarPac.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/img/_select.png"))); // NOI18N
        btnSeleccionarPac.setEnabled(false);
        btnSeleccionarPac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarPacActionPerformed(evt);
            }
        });

        lblNomPac.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblNomPac.setText("Nombre");
        lblNomPac.setEnabled(false);

        txtNomPac.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtNomPac.setEnabled(false);

        jPanel5.setBackground(java.awt.SystemColor.inactiveCaptionBorder);

        btnAyuda.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnAyuda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/img/48_ayuda.png"))); // NOI18N
        btnAyuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAyudaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(btnAyuda, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnAyuda, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, Short.MAX_VALUE)
        );

        lblAnio.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblAnio.setText(" Año:");
        lblAnio.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblAnio.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblAnio.setEnabled(false);
        lblAnio.setOpaque(true);

        chooserAnio.setEnabled(false);

        lblMes.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblMes.setText(" Mes:");
        lblMes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblMes.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblMes.setEnabled(false);
        lblMes.setOpaque(true);

        chooserMes.setEnabled(false);
        chooserMes.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N

        chkRangoFecha.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        chkRangoFecha.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        chkRangoFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkRangoFechaActionPerformed(evt);
            }
        });

        chkAnio.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        chkAnio.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        chkAnio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAnioActionPerformed(evt);
            }
        });

        chkMes.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        chkMes.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        chkMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkMesActionPerformed(evt);
            }
        });

        chkRangoMonto.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        chkRangoMonto.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        chkRangoMonto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkRangoMontoActionPerformed(evt);
            }
        });

        chkPaciente.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        chkPaciente.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        chkPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkPacienteActionPerformed(evt);
            }
        });

        cboOp.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        cboOp.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Mayor a", "Menor a", "Igual a" }));
        cboOp.setEnabled(false);

        txtMonto.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtMonto.setEnabled(false);

        lblM3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblM3.setText("$");
        lblM3.setEnabled(false);

        chkMonto.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        chkMonto.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        chkMonto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkMontoActionPerformed(evt);
            }
        });

        lblM2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblM2.setText("$");
        lblM2.setEnabled(false);

        lblM1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblM1.setText("$");
        lblM1.setEnabled(false);

        lblIncluM.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblIncluM.setText("inclusive.");
        lblIncluM.setEnabled(false);

        txtIni.setDateFormatString("dd/MM/yyyy");
        txtIni.setEnabled(false);
        txtIni.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtIni.setMaxSelectableDate(new java.util.Date(32503694463000L));
        txtIni.setMinSelectableDate(new java.util.Date(441777663000L));
        txtIni.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtIniPropertyChange(evt);
            }
        });

        txtFin.setDateFormatString("dd/MM/yyyy");
        txtFin.setEnabled(false);
        txtFin.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtFin.setMaxSelectableDate(new java.util.Date(32503694463000L));
        txtFin.setMinSelectableDate(new java.util.Date(441777663000L));
        txtFin.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtFinPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout panelFiltroLayout = new javax.swing.GroupLayout(panelFiltro);
        panelFiltro.setLayout(panelFiltroLayout);
        panelFiltroLayout.setHorizontalGroup(
            panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFiltroLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblMonto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFiltroLayout.createSequentialGroup()
                        .addComponent(lblDe)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblM1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMI, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblY2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblM2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMF, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblIncluM)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chkRangoMonto, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64)
                        .addComponent(cboOp, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblM3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMonto, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chkMonto, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8))
                    .addGroup(panelFiltroLayout.createSequentialGroup()
                        .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelFiltroLayout.createSequentialGroup()
                                .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelFiltroLayout.createSequentialGroup()
                                        .addComponent(lblMes, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(chooserMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(chkMes)
                                        .addGap(49, 49, 49)
                                        .addComponent(lblAnio, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(chooserAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(chkAnio))
                                    .addGroup(panelFiltroLayout.createSequentialGroup()
                                        .addComponent(lblEntre)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtIni, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(13, 13, 13)
                                        .addComponent(lblY1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(13, 13, 13)
                                        .addComponent(txtFin, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblInclu)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(chkRangoFecha)))
                                .addGap(18, 18, 18)
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelFiltroLayout.createSequentialGroup()
                                .addComponent(lblNroPac)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtIdPac, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblNomPac)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNomPac, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSeleccionarPac, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(chkPaciente)))
                        .addContainerGap(20, Short.MAX_VALUE))))
        );

        panelFiltroLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtMF, txtMI});

        panelFiltroLayout.setVerticalGroup(
            panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelFiltroLayout.createSequentialGroup()
                .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFiltroLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelFiltroLayout.createSequentialGroup()
                                .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chkRangoFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblEntre)
                                        .addComponent(lblY1)
                                        .addComponent(lblInclu))
                                    .addComponent(txtIni, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFin, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lblAnio, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                                    .addComponent(chooserAnio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblMes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(chooserMes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(chkAnio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(chkMes, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(panelFiltroLayout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(lblFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFiltroLayout.createSequentialGroup()
                        .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnSeleccionarPac, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                        .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(chkRangoMonto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblDe)
                                    .addComponent(txtMI, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblY2)
                                    .addComponent(txtMF, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblM2)
                                    .addComponent(lblM1)
                                    .addComponent(lblIncluM)))
                            .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(chkMonto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cboOp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMonto, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblM3)))))
                    .addGroup(panelFiltroLayout.createSequentialGroup()
                        .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNroPac)
                            .addComponent(txtIdPac, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNomPac)
                            .addComponent(txtNomPac, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(lblMonto, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        panelFiltroLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtMF, txtMI, txtMonto});

        panelOrdenar.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        panelOrdenar.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Ordenar por", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semilight", 0, 24))); // NOI18N

        rbtPac.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        rbtPac.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtPac.setText("Paciente");
        rbtPac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtPacActionPerformed(evt);
            }
        });

        rbtFecha.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        rbtFecha.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtFecha.setText("Fecha");
        rbtFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtFechaActionPerformed(evt);
            }
        });

        rbtMonto.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        rbtMonto.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtMonto.setText("Monto");
        rbtMonto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtMontoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelOrdenarLayout = new javax.swing.GroupLayout(panelOrdenar);
        panelOrdenar.setLayout(panelOrdenarLayout);
        panelOrdenarLayout.setHorizontalGroup(
            panelOrdenarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOrdenarLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(rbtPac)
                .addGap(30, 30, 30)
                .addComponent(rbtFecha)
                .addGap(35, 35, 35)
                .addComponent(rbtMonto)
                .addContainerGap(37, Short.MAX_VALUE))
        );
        panelOrdenarLayout.setVerticalGroup(
            panelOrdenarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOrdenarLayout.createSequentialGroup()
                .addGroup(panelOrdenarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtPac)
                    .addComponent(rbtFecha)
                    .addComponent(rbtMonto))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        panelTipo.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        panelTipo.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Tipo de Ordenamiento", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semilight", 0, 24))); // NOI18N

        rbtAsc.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        rbtAsc.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtAsc.setText("Ascendente");
        rbtAsc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtAscActionPerformed(evt);
            }
        });

        rbtDesc.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        rbtDesc.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtDesc.setText("Descendente");
        rbtDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtDescActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelTipoLayout = new javax.swing.GroupLayout(panelTipo);
        panelTipo.setLayout(panelTipoLayout);
        panelTipoLayout.setHorizontalGroup(
            panelTipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTipoLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(rbtAsc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(rbtDesc)
                .addGap(18, 18, 18))
        );
        panelTipoLayout.setVerticalGroup(
            panelTipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTipoLayout.createSequentialGroup()
                .addGroup(panelTipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtAsc)
                    .addComponent(rbtDesc))
                .addGap(0, 15, Short.MAX_VALUE))
        );

        panelMostrar.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        panelMostrar.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Mostrar", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semilight", 0, 24))); // NOI18N

        rbtXRegistros.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        rbtXRegistros.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtXRegistros.setText("Listrar ");
        rbtXRegistros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtXRegistrosActionPerformed(evt);
            }
        });

        rbtMostrarTodos.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        rbtMostrarTodos.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtMostrarTodos.setText("Listar todos.");
        rbtMostrarTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtMostrarTodosActionPerformed(evt);
            }
        });

        txtCant.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtCant.setEnabled(false);

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel13.setText("registros.");

        btnVer.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnVer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/img/Preview.png"))); // NOI18N
        btnVer.setText("VER");
        btnVer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelMostrarLayout = new javax.swing.GroupLayout(panelMostrar);
        panelMostrar.setLayout(panelMostrarLayout);
        panelMostrarLayout.setHorizontalGroup(
            panelMostrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMostrarLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(rbtXRegistros)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCant, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel13)
                .addGap(72, 72, 72)
                .addComponent(rbtMostrarTodos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addComponent(btnVer, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        panelMostrarLayout.setVerticalGroup(
            panelMostrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMostrarLayout.createSequentialGroup()
                .addGroup(panelMostrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtXRegistros)
                    .addComponent(txtCant, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(rbtMostrarTodos)
                    .addComponent(btnVer, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelFiltro, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(panelOrdenar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(panelTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(panelMostrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, panelFiltro, panelMostrar});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelOrdenar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelMostrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSeleccionarPacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarPacActionPerformed

        Frame f = JOptionPane.getFrameForComponent(this);
        dlgSeleccion dialog = new dlgSeleccion(f, true);
        dialog.setOpcion(2);
        dialog.show();
    }//GEN-LAST:event_btnSeleccionarPacActionPerformed

    private void btnAyudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAyudaActionPerformed
        String ini="<html><font size=5 style=color:black;> "; 
        String mensaje= ini + " Si no selecciona ninguna opción para filtrado de datos, se mostraran \n"
                + ini + "\"todos los pacientes que asistieron y no abonaron la Sesión/Consulta\"";     
        JOptionPane.showMessageDialog(this, mensaje, "AYUDA",JOptionPane.INFORMATION_MESSAGE,icon);
    }//GEN-LAST:event_btnAyudaActionPerformed

    private void chkRangoFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkRangoFechaActionPerformed
        if(this.chkRangoFecha.isSelected()){
            this.txtIni.setEnabled(true);
            this.txtFin.setEnabled(true);
            this.lblEntre.setEnabled(true);
            if(!lblFecha.isEnabled())this.lblFecha.setEnabled(true);
            this.lblInclu.setEnabled(true);
            this.lblY1.setEnabled(true);
            setearFechas();
            ///
            this.chooserAnio.setEnabled(false);
            f=new Fecha();
            chooserAnio.setYear(f.getAnio());
            this.lblAnio.setEnabled(false);
            chkAnio.setSelected(false);
            this.chooserMes.setEnabled(false);
            this.lblMes.setEnabled(false);
            f=new Fecha();
            chooserMes.setMonth(f.getMes()-1);
            chkMes.setSelected(false);
        }
        else{
            this.txtIni.setEnabled(false);
            this.txtFin.setEnabled(false);
            this.txtIni.setDate(null);
            this.txtFin.setDate(null);
            this.lblEntre.setEnabled(false);
            if(lblFecha.isEnabled())this.lblFecha.setEnabled(false);
            this.lblInclu.setEnabled(false);
            this.lblY1.setEnabled(false);
        }
    }//GEN-LAST:event_chkRangoFechaActionPerformed

    private void chkAnioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAnioActionPerformed
        if(this.chkAnio.isSelected()){
            this.chooserAnio.setEnabled(true);
            this.lblAnio.setEnabled(true);
            if(!lblFecha.isEnabled())this.lblFecha.setEnabled(true);
            //
            chkRangoFecha.setSelected(false);
            this.txtIni.setEnabled(false);
            this.txtFin.setEnabled(false);
            this.txtIni.setDate(null);
            this.txtFin.setDate(null);
            this.lblEntre.setEnabled(false);
//            this.lblFecha.setEnabled(false);
            this.lblInclu.setEnabled(false);
            this.lblY1.setEnabled(false);
        }else{
            this.chooserAnio.setEnabled(false);
            f=new Fecha();
            chooserAnio.setYear(f.getAnio());
            this.lblAnio.setEnabled(false);
            chkAnio.setSelected(false);
            if(lblFecha.isEnabled())this.lblFecha.setEnabled(false);
        }
    }//GEN-LAST:event_chkAnioActionPerformed

    private void chkMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkMesActionPerformed
        if(this.chkMes.isSelected()){
            this.chooserMes.setEnabled(true);
            this.lblMes.setEnabled(true);
            if(!lblFecha.isEnabled())this.lblFecha.setEnabled(true);
            //
            chkRangoFecha.setSelected(false);
            this.txtIni.setEnabled(false);
            this.txtFin.setEnabled(false);
            this.txtIni.setDate(null);
            this.txtFin.setDate(null);
            this.lblEntre.setEnabled(false);
//            this.lblFecha.setEnabled(false);
            this.lblInclu.setEnabled(false);
            this.lblY1.setEnabled(false);
            
        }else{
            this.chooserMes.setEnabled(false);
            this.lblMes.setEnabled(false);
            f=new Fecha();
            chooserMes.setMonth(f.getMes()-1);
            chkMes.setSelected(false);
            if(lblFecha.isEnabled())this.lblFecha.setEnabled(false);
        }
    }//GEN-LAST:event_chkMesActionPerformed

    private void chkRangoMontoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkRangoMontoActionPerformed
        if(this.chkRangoMonto.isSelected()){
            lblM1.setEnabled(true);
            lblM2.setEnabled(true);
            lblIncluM.setEnabled(true);
            this.lblDe.setEnabled(true);
            this.lblY2.setEnabled(true);
            this.txtMI.setEnabled(true);
            this.txtMF.setEnabled(true);
            if(!lblMonto.isEnabled())this.lblMonto.setEnabled(true);
            //
            this.lblM3.setEnabled(false);
            this.txtMonto.setEnabled(false);
            this.txtMonto.setText(null);
            this.cboOp.setEnabled(false);
            cboOp.setSelectedIndex(-1);
            chkMonto.setSelected(false);           
        }else{
            lblM1.setEnabled(false);
            lblM2.setEnabled(false);
            lblIncluM.setEnabled(false);
            this.lblDe.setEnabled(false);
            this.lblY2.setEnabled(false);
            this.txtMI.setEnabled(false);
            this.txtMF.setEnabled(false);
            this.txtMI.setText(null);
            this.txtMF.setText(null);
            if(lblMonto.isEnabled())this.lblMonto.setEnabled(false);
        }
    }//GEN-LAST:event_chkRangoMontoActionPerformed

    private void chkPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkPacienteActionPerformed
        if(this.chkPaciente.isSelected()){
            this.lblNomPac.setEnabled(true);
            this.lblNroPac.setEnabled(true);
            this.btnSeleccionarPac.setEnabled(true);
            this.lblPaciente.setEnabled(true);
        }else{
            this.lblNomPac.setEnabled(false);
            this.lblNroPac.setEnabled(false);
            this.txtNomPac.setText(null);
            this.txtIdPac.setText(null);
            this.btnSeleccionarPac.setEnabled(false);
            this.lblPaciente.setEnabled(false);
        }
    }//GEN-LAST:event_chkPacienteActionPerformed

    private void btnVerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerActionPerformed
//        LISTDeudores();
//        validarFechas();
        if(validar()){
//            this.dispose();
            informe(); //segun opcion es la tabla que se muestra
        }
    }//GEN-LAST:event_btnVerActionPerformed

    private void chkMontoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkMontoActionPerformed
        if(this.chkMonto.isSelected()){
            this.lblM3.setEnabled(true);
            this.txtMonto.setEnabled(true);
            this.cboOp.setEnabled(true);
            if(!lblMonto.isEnabled()) lblMonto.setEnabled(true);
            ///
            lblM1.setEnabled(false);
            lblM2.setEnabled(false);
            lblIncluM.setEnabled(false);
            this.lblDe.setEnabled(false);
            this.lblY2.setEnabled(false);
            this.txtMI.setEnabled(false);
            this.txtMF.setEnabled(false);
            this.txtMI.setText(null);
            this.txtMF.setText(null);
            chkRangoMonto.setSelected(false);
        }else{
            this.lblM3.setEnabled(false);
            this.txtMonto.setEnabled(false);
            this.txtMonto.setText(null);
            this.cboOp.setEnabled(false);
            cboOp.setSelectedIndex(-1);
            if(lblMonto.isEnabled()) lblMonto.setEnabled(false);
        }
    }//GEN-LAST:event_chkMontoActionPerformed

    private void rbtAscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtAscActionPerformed
        asc = this.rbtAsc.isSelected();
        desc = !asc;
    }//GEN-LAST:event_rbtAscActionPerformed

    private void rbtDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtDescActionPerformed
        desc = this.rbtDesc.isSelected();
        asc = !desc;
    }//GEN-LAST:event_rbtDescActionPerformed

    private void rbtXRegistrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtXRegistrosActionPerformed
        algunos=rbtXRegistros.isSelected();
        todos = !algunos;
        if(algunos)
            txtCant.setEnabled(true);
    }//GEN-LAST:event_rbtXRegistrosActionPerformed

    private void rbtMostrarTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtMostrarTodosActionPerformed
        todos = this.rbtMostrarTodos.isSelected();
        algunos=!todos;
        txtCant.setEnabled(false);
        txtCant.setText(null);
    }//GEN-LAST:event_rbtMostrarTodosActionPerformed

    private void rbtPacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtPacActionPerformed
        ordPac = this.rbtPac.isSelected();
        ordMonto=ordF=!ordPac;
    }//GEN-LAST:event_rbtPacActionPerformed

    private void rbtFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtFechaActionPerformed
        ordF = this.rbtFecha.isSelected();
        ordMonto=ordPac=!ordF;
    }//GEN-LAST:event_rbtFechaActionPerformed

    private void rbtMontoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtMontoActionPerformed
        ordMonto = this.rbtMonto.isSelected();
        ordPac=ordF=!ordMonto;
    }//GEN-LAST:event_rbtMontoActionPerformed

    private void txtIniPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtIniPropertyChange
        if(txtIni.getDate()!=null){
            if(f.checkFecha(txtIni)){
            }else txtIni.setDate(null);
        }
    }//GEN-LAST:event_txtIniPropertyChange

    private void txtFinPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtFinPropertyChange
        if(txtFin.getDate()!=null){
            if(f.checkFecha(txtFin)){
            }else txtFin.setDate(null);
        }
    }//GEN-LAST:event_txtFinPropertyChange


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAyuda;
    private javax.swing.ButtonGroup btnGpMostrar;
    private javax.swing.ButtonGroup btnGpOrdenar;
    private javax.swing.ButtonGroup btnGpOrdenarTipo;
    private javax.swing.JButton btnSeleccionarPac;
    private javax.swing.JButton btnVer;
    private javax.swing.JComboBox cboOp;
    private javax.swing.JCheckBox chkAnio;
    private javax.swing.JCheckBox chkMes;
    private javax.swing.JCheckBox chkMonto;
    private javax.swing.JCheckBox chkPaciente;
    private javax.swing.JCheckBox chkRangoFecha;
    private javax.swing.JCheckBox chkRangoMonto;
    private com.toedter.calendar.JYearChooser chooserAnio;
    private com.toedter.calendar.JMonthChooser chooserMes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JLabel lblAnio;
    private javax.swing.JLabel lblDe;
    private javax.swing.JLabel lblEntre;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblInclu;
    private javax.swing.JLabel lblIncluM;
    private javax.swing.JLabel lblM1;
    private javax.swing.JLabel lblM2;
    private javax.swing.JLabel lblM3;
    private javax.swing.JLabel lblMes;
    private javax.swing.JLabel lblMonto;
    private javax.swing.JLabel lblNomPac;
    private javax.swing.JLabel lblNroPac;
    private javax.swing.JLabel lblPaciente;
    private javax.swing.JLabel lblY1;
    private javax.swing.JLabel lblY2;
    private javax.swing.JPanel panelFiltro;
    private javax.swing.JPanel panelMostrar;
    private javax.swing.JPanel panelOrdenar;
    private javax.swing.JPanel panelTipo;
    private javax.swing.JRadioButton rbtAsc;
    private javax.swing.JRadioButton rbtDesc;
    private javax.swing.JRadioButton rbtFecha;
    private javax.swing.JRadioButton rbtMonto;
    private javax.swing.JRadioButton rbtMostrarTodos;
    private javax.swing.JRadioButton rbtPac;
    private javax.swing.JRadioButton rbtXRegistros;
    private javax.swing.JTextField txtCant;
    private com.toedter.calendar.JDateChooser txtFin;
    private javax.swing.JTextField txtIdPac;
    private com.toedter.calendar.JDateChooser txtIni;
    private javax.swing.JTextField txtMF;
    private javax.swing.JTextField txtMI;
    private javax.swing.JTextField txtMonto;
    private javax.swing.JTextField txtNomPac;
    // End of variables declaration//GEN-END:variables


private void grupoBotones(){
        this.btnGpOrdenar=new ButtonGroup();
        this.btnGpOrdenar.add(this.rbtPac);
        this.btnGpOrdenar.add(this.rbtMonto);
        this.btnGpOrdenar.add(this.rbtFecha);
        //rbtPorcentaje
        btnGpOrdenar.clearSelection();
        this.btnGpOrdenarTipo=new ButtonGroup();
        this.btnGpOrdenarTipo.add(this.rbtDesc);
        this.btnGpOrdenarTipo.add(this.rbtAsc);
        btnGpOrdenarTipo.clearSelection();
        btnGpMostrar=new ButtonGroup();
        btnGpMostrar.add(this.rbtMostrarTodos);
        btnGpMostrar.add(this.rbtXRegistros);
        btnGpMostrar.clearSelection();
    }

//public void validarFechas(){
//  String stFecha1, stFecha2; 
//  stFecha1=txtIni.getText();
//  stFecha2=txtFin.getText();
//  SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
//  
//  // El método parse devuelve null si no se ha podido parsear el string en  según el formato indicado. Este método lanza una excepción NullPointer  exception si alguno de sus parámetros es null
//  Date fecha1 = sdf.parse(stFecha1 , new ParsePosition(0));
//  // El método parse devuelve null si no se ha podido parsear el string en  según el formato indicado. Este método lanza una excepción NullPointer  exception si alguno de sus parámetros es null
//  Date fecha2 = sdf.parse(stFecha2 , new ParsePosition(0));
////  // El método parse devuelve null si no se ha podido parsear el string en  según el formato indicado. Este método lanza una excepción NullPointer  exception si alguno de sus parámetros es null
////  Date fecha3 = sdf.parse(stFecha3 , new ParsePosition(0));
//
//  // Comparaciones
//  if ( fecha1.before(fecha2) ) JOptionPane.showMessageDialog(this, " Fecha1 es anterior a fecha2.");
//  else JOptionPane.showMessageDialog(this, "Fecha1 NO es anterior a fecha2.");
//
////  if ( fecha1.before(fecha3) ) System.out.println(" Fecha1 es anterior a fecha3.");
////  else System.out.println(" Fecha1 NO es anterior a fecha3.");
////
////  if ( fecha2.before(fecha3) ) System.out.println(" Fecha2 es anterior a fecha3.");
////  else System.out.println(" Fecha2 NO es anterior a fecha3.");
//    
////    COMPARAR FECHAS:
//        
////    new Date(año,mes,día).before(new Date(año,mes,día));
////    new Date(año,mes,día).after(new Date(año,mes,día));
////    new Date(año,mes,día).equals(new Date(año,mes,día));
////En el primer caso devuelve true si la segunda fecha es menor a la primera.
////En el segundo caso devuelve true si la segunda fecha es mayor a la primera.
////En el tercer caso devuelve true si las fechas son iguales.
//
//}

public void setearFechas(){
    Calendar cal = Calendar.getInstance();
    f=new Fecha();
    Date fecha = f.convertirCalendaDate(cal);
    txtIni.setDate(fecha);
    txtFin.setDate(fecha);
}

private void arranque(){
    cboOp.setSelectedIndex(-1);
}

public void setPaciente(int id, String nombre){
      this.txtIdPac.setText(String.valueOf(id));
      this.txtNomPac.setText(nombre);
  }

public boolean validar(){
     String tit="Atención"; String msj;
    boolean res=true;
   
    if(this.chkRangoFecha.isSelected() && (txtIni.getDate()==null)){
      msj="<html><font size=5 style=color:red;>Fecha desde. Dato Requerido.";
      JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
      txtIni.grabFocus();
      return false;
    } 
    if(this.chkRangoFecha.isSelected() && (txtFin.getDate()==null)){
      msj="<html><font size=5 style=color:red;>Fecha hasta. Dato Requerido.";
      JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
      txtFin.grabFocus();
      return false;
    }
     
     if (chkRangoFecha.isSelected() && !txtIni.getDate().before(txtFin.getDate()) && !txtIni.getDate().equals(txtFin.getDate())){ 
         msj="<html><font size=5 style=color:red;>Fecha de inicio debe ser menor o igual a Fecha de fin.";
         JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
         txtIni.grabFocus();
         return false;
     }
    
    if(!this.chkAnio.isSelected())
        anio=0;
    else
        anio=chooserAnio.getYear();
    if(!this.chkMes.isSelected())
        mes=0;
    else
        mes=this.chooserMes.getMonth()+1;
    
    //Paciente
    if(this.chkPaciente.isSelected() && (txtNomPac.getText().trim()).length()==0){
      msj="<html><font size=5 style=color:red;>Paciente. Dato Requerido.";
      JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
      txtNomPac.grabFocus();
      return false;
    }
    
    if(chkMonto.isSelected() && (this.cboOp.getSelectedIndex()==-1))
      {   msj="<html><font size=5 style=color:red;>Tipo Operación. Dato Requerido";
      JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
          cboOp.grabFocus();
          return false;
      }
    
    if(chkMonto.isSelected() && ((txtMonto.getText().trim()).length()==0))
      {   msj="<html><font size=5 style=color:red;>Monto. Dato Requerido";
      JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
          txtMonto.grabFocus();
          return false;
      }
    
    if(this.chkRangoMonto.isSelected() && (txtMI.getText().trim()).length()==0){
      msj="<html><font size=5 style=color:red;>Monto desde. Dato Requerido.";
      JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
      txtMI.grabFocus();
      return false;
    } 
    
    if(this.chkRangoMonto.isSelected() && (txtMF.getText().trim()).length()==0){
      msj="<html><font size=5 style=color:red;>Monto hasta. Dato Requerido.";
      JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
      txtMF.grabFocus();
      return false;
    }
    
    if(this.chkRangoMonto.isSelected() && ((txtMF.getText().trim()).length())<((txtMI.getText().trim()).length())){
      msj="<html><font size=5 style=color:red;>Monto 1 debe ser menor o igual que Monto 2.";
      JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
      txtMI.grabFocus();
      return false;
    }
    
    if(!this.rbtPac.isSelected() && !this.rbtMonto.isSelected() && !this.rbtFecha.isSelected()){
      msj="<html><font size=5 style=color:red;>Ordenar por.. Dato Requerido.";
      JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
      rbtPac.grabFocus();
      return false;
    }
    
    if(!this.rbtAsc.isSelected() && !this.rbtDesc.isSelected()){
      msj="<html><font size=5 style=color:red;>Tipo de Ordenenamiento.. Dato Requerido.";
      JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
      rbtAsc.grabFocus();
      return false;
    }
    if(!this.rbtXRegistros.isSelected() && !this.rbtMostrarTodos.isSelected()){
      msj="<html><font size=5 style=color:red;>Opción de muestra. Dato Requerido.";
      JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
      rbtXRegistros.grabFocus();
      return false;
    }
    if(this.rbtXRegistros.isSelected() && (txtCant.getText().trim()).length()==0){
      msj="<html><font size=5 style=color:red;>Cant de registros a mostrar. Dato Requerido.";
      JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
      txtCant.grabFocus();
      return false;
    }

    return res;
} 

public void informe(){
    try {
        int c, campo, idP, MI, MF, op, opCant; String opA, ord, f1,f2;
        campo=1; ord="ASC";
        if(!txtCant.getText().isEmpty()) c=Integer.parseInt(txtCant.getText());
            else c=cantReg();
        if(!txtIdPac.getText().isEmpty()) idP=Integer.parseInt(txtIdPac.getText());
            else idP=0;
                
        op=cboOp.getSelectedIndex()+1;
        switch(op){
            case 1:
                opA=">";
                break;
            case 2:
                opA="<";
                break;
            case 3:
                opA="=";
                break;
            default:
                opA="";
                break;    
        }
        if(!txtMonto.getText().isEmpty()) opCant=Integer.parseInt(txtMonto.getText());
            else opCant=0;
        
        if(!txtMI.getText().isEmpty()) MI=Integer.parseInt(txtMI.getText());
            else MI=0;
        if(!txtMF.getText().isEmpty()) MF=Integer.parseInt(txtMF.getText());
            else MF=0;
        
        f=new Fecha();
        if(txtIni.getDate()!=null) f1=f.getFormatedFechaToCalendar(f.getStringXfecha(txtIni.getDate()));
            else f1="";
        if(txtIni.getDate()!=null) f2=f.getFormatedFechaToCalendar(f.getStringXfecha(txtFin.getDate()));
            else f2="";
        
        if((ordPac && asc && todos) || (ordPac && asc && algunos)){campo=1; ord="ASC";}
        if((ordPac && desc && todos) || (ordPac && desc && algunos)){campo=1; ord="DESC";}
        if((ordF && desc && todos) || (ordF && desc && algunos)){campo=2; ord="DESC";}
        if((ordF && asc && todos) || (ordF && asc && algunos)) {campo=2; ord="ASC";}
        if((ordMonto && desc && todos) || (ordMonto && desc && algunos)){campo=3; ord="DESC";}
        if((ordMonto && asc && todos) || (ordMonto && asc && algunos)) {campo=3; ord="ASC";}

        List inasistenciasList = new ArrayList();
        List<DeudoresR> lista = conexion.getInstance().getDeudoresR2(campo, ord, c, anio,mes,idP,MI,MF,opA,opCant,f1,f2);
        
        if(!lista.isEmpty()){
            for (Iterator<DeudoresR> it = lista.iterator(); it.hasNext();) {
                    DeudoresR t = it.next();
                    String deuda, paciente, desde, hasta;
                    paciente=t.getPaciente();
                    desde=t.getDesde();
                    hasta=t.getHasta();
                    deuda=t.getDeuda();
                    if (desde.equals(hasta)) hasta="";

                    inasistenciasList.add(new DeudoresR(paciente, deuda, desde, hasta));
                }
            JasperReport report  = (JasperReport)JRLoader.loadObject(ClassLoader.getSystemResource("Reportes/ReportDeudores.jasper"));
            JasperPrint fillReport = JasperFillManager.fillReport(report, null,new JRBeanCollectionDataSource(inasistenciasList));
            JasperViewer jviewer = new JasperViewer(fillReport,false);
            jviewer.setTitle("Deudas por paciente.");
            jviewer.setVisible(true); 
        }else{
//            this.dispose();
            JOptionPane.showMessageDialog(this, "<html><font size=5>No hay información suficiente para generar el documento.");
        }  
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "<html><font size=5 style=color:red;>Error cargando reporte." + e);
    }
}
  
  public int cantReg(){
        int num = 0;
        List<DeudoresR> lista = conexion.getInstance().getDeudoresR();
        for (Iterator<DeudoresR> it = lista.iterator(); it.hasNext();) {
            DeudoresR t = it.next();
            num = num + 1;
        }
        if(num==0){
            num=1;
        }
        return num;
    }

public void LISTDeudores(){
    try {                   
        List inasistenciasList = new ArrayList();
        List<DeudoresR> lista = conexion.getInstance().getDeudoresR();
        
        if(!lista.isEmpty()){
            for (Iterator<DeudoresR> it = lista.iterator(); it.hasNext();) {
                    DeudoresR t = it.next();
                    String deuda, paciente, desde, hasta;
                    paciente=t.getPaciente();
                    desde=t.getDesde();
                    hasta=t.getHasta();
                    deuda=t.getDeuda();
                    if (desde.equals(hasta)) hasta="";

                    inasistenciasList.add(new DeudoresR(paciente, deuda, desde, hasta));
                }
            JasperReport report  = (JasperReport)JRLoader.loadObject(ClassLoader.getSystemResource("Reportes/ReportDeudores.jasper"));
            JasperPrint fillReport = JasperFillManager.fillReport(report, null,new JRBeanCollectionDataSource(inasistenciasList));
            JasperViewer jviewer = new JasperViewer(fillReport,false);
            jviewer.setVisible(true); 
        }else{
            JOptionPane.showMessageDialog(this, "<html><font size=5>No hay información suficiente para generar el documento.");
        }  
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "<html><font size=5 style=color:red;>Error cargando reporte." + e);
    }
}


    
    private void SNroEntero(JTextField a){   
        a.addKeyListener(new KeyAdapter() {
       @Override public void keyTyped(KeyEvent e) {            
		String text = ((JTextField) e.getSource()).getText();
		
                if(!Character.isDigit(e.getKeyChar()) && !Character.isISOControl(e.getKeyChar()))
                {
                     Toolkit.getDefaultToolkit().beep();

                     e.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
                    JOptionPane.showMessageDialog(null, "<html><font size=5 style=color:red;>Solo puede ingresar números", "Validando Datos",
                            JOptionPane.ERROR_MESSAGE);
                    e.consume();
                }

                //Limitar el numero de caracteres. Solo se pueden ingresar 5 caracteres
                if (text.length() >= 5) {
                    e.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
                    JOptionPane.showMessageDialog(null, "<html><font size=5 style=color:red;>Ha excedido el numero maximo de caracteres!!! (5)", "Validando Datos",
                            JOptionPane.ERROR_MESSAGE);
                }                     
        }
        });  
    }




}
