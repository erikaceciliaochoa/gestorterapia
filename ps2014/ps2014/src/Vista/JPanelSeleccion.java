/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Vista;

import Controlador.AbstractDAO;
import Controlador.PacientesDAO;
import Modelo.Motivo;
import Modelo.Prueba;
import java.awt.Font;
import java.util.Iterator;
import java.util.List;
import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static Vista.iFraAdm.createImageIcon;
import java.awt.Toolkit;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.JTextField;

/**
 *
 * @author usuario
 */
public class JPanelSeleccion extends javax.swing.JPanel {
    private DefaultTableModel model;
    PacientesDAO pacientesDAO=null;
    private int opcion=0;
    public int idMotivo;
    public String desMotivo;
    public int idPrueba;
    public String desPrueba;
    iFraRegistrarConsulta iFrame;
    ImageIcon icon;

    /**
     * Creates new form JPanelSeleccion
     */
    public JPanelSeleccion() {
        initComponents();
        grupoBotones();
        arranque();
        SLetras(this.txtNombreBuscar);
        SNroEntero(this.txtIdBuscar);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        panelBuscar = new javax.swing.JPanel();
        txtIdBuscar = new javax.swing.JTextField();
        txtNombreBuscar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnBuscar = new javax.swing.JButton();
        rbtNro = new javax.swing.JRadioButton();
        rbtNombre = new javax.swing.JRadioButton();

        panelBuscar.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Buscar", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18))); // NOI18N
        panelBuscar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        txtIdBuscar.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N

        txtNombreBuscar.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        jTable1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Nro", "Nombre"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        btnBuscar.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/img/search-16.png"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        rbtNro.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        rbtNro.setText("Número");
        rbtNro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtNroActionPerformed(evt);
            }
        });

        rbtNombre.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        rbtNombre.setText("Nombre");
        rbtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtNombreActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBuscarLayout = new javax.swing.GroupLayout(panelBuscar);
        panelBuscar.setLayout(panelBuscarLayout);
        panelBuscarLayout.setHorizontalGroup(
            panelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBuscarLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(panelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBuscarLayout.createSequentialGroup()
                        .addComponent(rbtNro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtIdBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(rbtNombre)
                    .addComponent(txtNombreBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        panelBuscarLayout.setVerticalGroup(
            panelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBuscarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(panelBuscarLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(panelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtIdBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rbtNro, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbtNombre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNombreBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscar)))
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
    int showConfirmDialog;
        switch (opcion){
            case 1:
                showConfirmDialog = JOptionPane.showConfirmDialog(this, "<html><font size=5>.¿Selecciono el Motivo: "+ getNom() +"?", "Mensaje del Sistema.", JOptionPane.YES_NO_OPTION);
                if(showConfirmDialog == 0){
                    //Si. borro toda la tabla.
                    iFraRegistrarConsulta.btnSelect.setText("Confirmar selección");
                    icon = createImageIcon("img/ok.png");
                    iFraRegistrarConsulta.btnSelect.setIcon(icon);
                }
                else{
                    //No. vuelvo el combo al dia. y foco en 
                    iFraRegistrarConsulta.btnSelect.setText("Cancelar Selección");
                    icon = createImageIcon("img/cancel.png");
                    iFraRegistrarConsulta.btnSelect.setIcon(icon);
                    //
                    desMotivo=""; idMotivo=0;
                    defaultTableModel();
                }

            break;
            case 2:
                showConfirmDialog = JOptionPane.showConfirmDialog(this, "<html><font size=5>¿Selecciono la Prueba: " + getNom() +"?", "Mensaje del Sistema.", JOptionPane.YES_NO_OPTION);
                if(showConfirmDialog == 0){
                    //Si. borro toda la tabla.
                    iFraRegistrarConsulta.btnSelect.setText("Confirmar selección");
                    icon = createImageIcon("img/ok.png");
                    iFraRegistrarConsulta.btnSelect.setIcon(icon);
                }
                else{
                    //No. vuelvo el combo al dia. y foco en 
                    iFraRegistrarConsulta.btnSelect.setText("Cancelar Selección");
                    icon = createImageIcon("img/cancel.png");
                    iFraRegistrarConsulta.btnSelect.setIcon(icon);
                    //
                    desPrueba=""; idPrueba=0;
                    defaultTableModel();
                }
            break;
            default:
            break;

        }       
    }//GEN-LAST:event_jTable1MouseClicked
private String getNom(){
        String nom="";
        try{
            int selectedRow = jTable1.getSelectedRow();//Obtenemos la fila seleccionada...
            Object valueAt = model.getValueAt(selectedRow, 1);//Obtenemos el valor de esa fila...
            nom = valueAt.toString();//Convertimos el valor en entero...
        }catch(Exception e){}

        return nom;
    }
    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:

        switch (opcion){
            case 1:
                defaultTableModel();

                if(this.rbtNro.isSelected())
                {
                    if(txtIdBuscar.getText().trim().length()!=0)
                    cargarTabla(1);
                    else {JOptionPane.showMessageDialog(this, "<html><font size=5>Ingrese un Nro a buscar..");
                        txtIdBuscar.grabFocus(); }
                }
                else{
                    if(txtNombreBuscar.getText().trim().length()!=0)
                    cargarTabla(2);
                    else {JOptionPane.showMessageDialog(this, "<html><font size=5>Ingrese un nombre a buscar..");
                        txtNombreBuscar.grabFocus(); }
                }
                break;
            case 2:
//                tableModelPac();
                defaultTableModel();
                if(this.rbtNro.isSelected())
                {
                    if(txtIdBuscar.getText().trim().length()!=0)
                    cargarTablaPrueba(1);
                    else {JOptionPane.showMessageDialog(this, "<html><font size=5>Ingrese un Nro a buscar..");
                        txtIdBuscar.grabFocus(); }
                }
                else{
                    if(txtNombreBuscar.getText().trim().length()!=0)
                    cargarTablaPrueba(2);
                    else {JOptionPane.showMessageDialog(this, "<html><font size=5>Ingrese un nombre a buscar..");
                        txtNombreBuscar.grabFocus(); }
                }
                break;
            default:
            break;

        }

    }//GEN-LAST:event_btnBuscarActionPerformed

    private void rbtNroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtNroActionPerformed
        // TODO add your handling code here:
        habilitarBusqueda(true);
    }//GEN-LAST:event_rbtNroActionPerformed

    private void rbtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtNombreActionPerformed
        // TODO add your handling code here:
        habilitarBusqueda(false);
    }//GEN-LAST:event_rbtNombreActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JPanel panelBuscar;
    private javax.swing.JRadioButton rbtNombre;
    private javax.swing.JRadioButton rbtNro;
    private javax.swing.JTextField txtIdBuscar;
    private javax.swing.JTextField txtNombreBuscar;
    // End of variables declaration//GEN-END:variables




public void defaultTableModel(){
    this.jTable1.getColumnModel().getColumn(0).setPreferredWidth(60);
    this.jTable1.getColumnModel().getColumn(1).setPreferredWidth(150);
    jTable1.getTableHeader().setFont(new Font("Segoe UI", Font.ITALIC, 18));
    jTable1.setFont(new Font("Segoe UI", Font.PLAIN, 18));
    jTable1.setRowHeight(30);
    model = (DefaultTableModel) this.jTable1.getModel();
    model.setNumRows(0);
}


private void grupoBotones(){
        this.buttonGroup1=new ButtonGroup();
        this.buttonGroup1.add(rbtNro);
        this.buttonGroup1.add(rbtNombre);
    }

public void cargarTablaPrueba(int op){
    List<Prueba> lista = null;
    if (op==1){ 
        int cod = Integer.parseInt(txtIdBuscar.getText());    
        lista=AbstractDAO.getListaEntidadesXid(Prueba.class, cod);
    }
    else {
        String nom = txtNombreBuscar.getText();
        lista=AbstractDAO.getListaEntidadesXnom(Prueba.class, nom); 
    }
    for (Iterator<Prueba> it = lista.iterator(); it.hasNext();) {
            Prueba p = it.next();
            model.addRow(new Object[]{
                p.getId(), p.getDes()
            });
        }
    
    if(lista.isEmpty())JOptionPane.showMessageDialog(this, "<html><font size=5>Esta búsqueda no arrojo resultados..");
}

public void cargarTabla(int op){
    List<Motivo> lista = null;   
    if (op==1){ 
        int cod = Integer.parseInt(txtIdBuscar.getText());
        lista=AbstractDAO.getListaEntidadesXid(Motivo.class, cod);
    }
    else {
        String nom = txtNombreBuscar.getText();
        lista=AbstractDAO.getListaEntidadesXnom(Motivo.class, nom);              
    }
    
    for (Iterator<Motivo> it = lista.iterator(); it.hasNext();) {
            Motivo m = it.next();
            model.addRow(new Object[]{
                m.getId(), m.getDes()
            });
        } 
    if(lista.isEmpty())JOptionPane.showMessageDialog(this, "<html><font size=5>Esta búsqueda no arrojo resultados..");
}

public int getId(){
    int selectedRow=0;
    int id=0;
    try{
        selectedRow = this.jTable1.getSelectedRow();
        Object valueAt = model.getValueAt(selectedRow, 0);
        id = Integer.parseInt(valueAt.toString());  
    }catch(Exception e){}
    
    return id;
}

public String getDes(){
    String des="";
    try{
    int selectedRow = this.jTable1.getSelectedRow();
    Object valueAt = model.getValueAt(selectedRow, 1);
    des = valueAt.toString();
    }catch(Exception e){}
    return des;
}

public int getOpcion(){
    if(this.jTable1.isEnabled()) return 0;
    else return 1;
}

public void setOpcion(int op){
    opcion=op;
}

public int getMotivo(){
    idMotivo=getId();
    return idMotivo;
}

public String getMotivoDes(){
    desMotivo=getDes();
    return desMotivo;
}

public int getPrueba(){
    idPrueba=getId();
    return idPrueba;
}

public String getPruebaDes(){
    desPrueba=getDes();
    return desPrueba;
}

public void habilitarBusqueda(boolean op){
        this.txtNombreBuscar.setEnabled(!op);
        this.txtIdBuscar.setEnabled(op);
        this.txtIdBuscar.setText(null);
        this.txtNombreBuscar.setText(null);
        if(op) this.txtIdBuscar.grabFocus();
        if(!op) this.txtNombreBuscar.grabFocus();
        defaultTableModel();
    }

public void arranque(){
//    habilitarCampos(false);
//    limpiarCampos();
    this.jTable1.setEnabled(true);   
    this.rbtNro.setSelected(true);
    this.txtIdBuscar.grabFocus();
    habilitarBusqueda(true);
//    tableModel();
//    //cargarTabla();
//    tamOriginal();
    defaultTableModel();
}

public void limpiarCampos(){    
    this.txtIdBuscar.setText(null);
    this.txtNombreBuscar.setText(null);
}


    private void SLetras(JTextField a){
        a.addKeyListener(new KeyAdapter() {
       @Override public void keyTyped(KeyEvent e) {            
            char car = e.getKeyChar();       
            if((car<'a' || car>'z') && (car<'A' || car>'Z')            
                && car !='á'          
                && car !='é'           
                && car !='í'           
                && car !='ó'          
                && car !='ú'  
                && car !='Á'           
                && car !='É'           
                && car !='Í'           
                && car !='Ó'
                && car !='Ú'
                && car !='ñ'
                && car !='Ñ'    
                && (car!=(char)KeyEvent.VK_SPACE)
                && (car!=(char)KeyEvent.VK_BACK_SPACE))
            {
              Toolkit.getDefaultToolkit().beep();
              e.setKeyChar((char) KeyEvent.VK_CLEAR);
                    JOptionPane.showMessageDialog(null, "<html><font size=5 style=color:red;>Solo puede ingresar letras", "Validando Datos",
                            JOptionPane.ERROR_MESSAGE);
              e.consume(); 
            }
            String text = ((JTextField) e.getSource()).getText();
            if (text.length() >= 50) {
                e.setKeyChar((char) KeyEvent.VK_CLEAR);
                JOptionPane.showMessageDialog(null, "<html><font size=5 style=color:red;>Ha excedido el número máximo de caracteres!!! (50)", "Validando Datos",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
        });          
    }

    private void SNroEntero(JTextField a){   
        a.addKeyListener(new KeyAdapter() {
       @Override public void keyTyped(KeyEvent e) {            
                String text = ((JTextField) e.getSource()).getText();

                if(!Character.isDigit(e.getKeyChar()) && !Character.isISOControl(e.getKeyChar()))
                {
                     Toolkit.getDefaultToolkit().beep();

                     e.setKeyChar((char) KeyEvent.VK_CLEAR);
                    JOptionPane.showMessageDialog(null, "<html><font size=5 style=color:red;>Solo puede ingresar números", "Validando Datos",
                            JOptionPane.ERROR_MESSAGE);
                    e.consume();
                }
                if (text.length() >= 5) {
                    e.setKeyChar((char) KeyEvent.VK_CLEAR);
                    JOptionPane.showMessageDialog(null, "<html><font size=5 style=color:red;>Ha excedido el numero maximo de caracteres!!! (5)", "Validando Datos",
                            JOptionPane.ERROR_MESSAGE);
                }                     
        }
        });  
    }










}
