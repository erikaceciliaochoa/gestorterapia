/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Vista;

import Controlador.conexion;
import Reportes.DiagnosticoXPacR;
import static Vista.iFraAdm.createImageIcon;
import java.awt.Frame;
import java.awt.Toolkit;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import util.Fecha;
import util.modalInternalFrame;

/**
 *
 * @author usuario
 */
public class iFraRConsuDiagnosticos extends modalInternalFrame {
    private boolean ordPac,ordDiag,ordObs,ordFecha,asc,desc,todos,algunos;
    int anio,mes;
    Fecha f;
    ImageIcon icon = createImageIcon("img/ayuda_.png");
    /**
     * Creates new form iFraRConsuDiagnosticos
     */
    public iFraRConsuDiagnosticos() {
        initComponents();
        grupoBotones();
        ordPac=ordDiag=ordObs=ordFecha=asc=desc=todos=algunos=false;
        anio=mes=0;
        f=null;
        SNroEntero(this.txtCant);
//        SNroEntero(txtEdadDesde);
        SLetras(txtObservaciones);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGpOrdenar = new javax.swing.ButtonGroup();
        btnGpOrdenarTipo = new javax.swing.ButtonGroup();
        btnGpMostrar = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        panelFiltro = new javax.swing.JPanel();
        lblFecha = new javax.swing.JLabel();
        lblPaciente = new javax.swing.JLabel();
        lblObs = new javax.swing.JLabel();
        txtObservaciones = new javax.swing.JTextField();
        lblDiag = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        btnAyuda = new javax.swing.JButton();
        lblAnio = new javax.swing.JLabel();
        chooserAnio = new com.toedter.calendar.JYearChooser();
        lblMes = new javax.swing.JLabel();
        chooserMes = new com.toedter.calendar.JMonthChooser();
        chkAnio = new javax.swing.JCheckBox();
        chkMes = new javax.swing.JCheckBox();
        chkObs = new javax.swing.JCheckBox();
        chkPaciente = new javax.swing.JCheckBox();
        chkDiag = new javax.swing.JCheckBox();
        btnSeleccionarDiag = new javax.swing.JButton();
        txtNomDiag = new javax.swing.JTextField();
        txtIdDiag = new javax.swing.JTextField();
        txtIdPac = new javax.swing.JTextField();
        txtNomPac = new javax.swing.JTextField();
        btnSeleccionarPac = new javax.swing.JButton();
        panelTipo = new javax.swing.JPanel();
        rbtAsc = new javax.swing.JRadioButton();
        rbtDesc = new javax.swing.JRadioButton();
        panelOrdenar = new javax.swing.JPanel();
        rbtPac = new javax.swing.JRadioButton();
        rbtDiag = new javax.swing.JRadioButton();
        rbtObs = new javax.swing.JRadioButton();
        rbtFecha = new javax.swing.JRadioButton();
        panelMostrar = new javax.swing.JPanel();
        rbtXRegistros = new javax.swing.JRadioButton();
        rbtMostrarTodos = new javax.swing.JRadioButton();
        txtCant = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        btnVer = new javax.swing.JButton();

        setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        setClosable(true);
        setTitle("Listado Consultas que poseen diagn칩stico");

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 0, 36)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/img/note.png"))); // NOI18N
        jLabel1.setText("    Listado Diagn칩sticos por paciente");
        jLabel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        panelFiltro.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        panelFiltro.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Filtro", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semilight", 0, 24))); // NOI18N

        lblFecha.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblFecha.setText(" Fecha:");
        lblFecha.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblFecha.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblFecha.setEnabled(false);
        lblFecha.setOpaque(true);

        lblPaciente.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblPaciente.setText(" Paciente: ");
        lblPaciente.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblPaciente.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblPaciente.setEnabled(false);
        lblPaciente.setOpaque(true);

        lblObs.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblObs.setText("Observaciones: ");
        lblObs.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblObs.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblObs.setEnabled(false);
        lblObs.setOpaque(true);

        txtObservaciones.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtObservaciones.setEnabled(false);

        lblDiag.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblDiag.setText("Diagn칩stico:");
        lblDiag.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblDiag.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblDiag.setEnabled(false);
        lblDiag.setOpaque(true);

        jPanel5.setBackground(java.awt.SystemColor.inactiveCaptionBorder);

        btnAyuda.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnAyuda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/img/48_ayuda.png"))); // NOI18N
        btnAyuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAyudaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(btnAyuda, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnAyuda, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, Short.MAX_VALUE)
        );

        lblAnio.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblAnio.setText(" A침o:");
        lblAnio.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblAnio.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblAnio.setEnabled(false);
        lblAnio.setOpaque(true);

        chooserAnio.setEnabled(false);

        lblMes.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblMes.setText(" Mes:");
        lblMes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblMes.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblMes.setEnabled(false);
        lblMes.setOpaque(true);

        chooserMes.setEnabled(false);
        chooserMes.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N

        chkAnio.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        chkAnio.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        chkAnio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAnioActionPerformed(evt);
            }
        });

        chkMes.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        chkMes.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        chkMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkMesActionPerformed(evt);
            }
        });

        chkObs.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        chkObs.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        chkObs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkObsActionPerformed(evt);
            }
        });

        chkPaciente.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        chkPaciente.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        chkPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkPacienteActionPerformed(evt);
            }
        });

        chkDiag.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        chkDiag.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        chkDiag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkDiagActionPerformed(evt);
            }
        });

        btnSeleccionarDiag.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/img/_select.png"))); // NOI18N
        btnSeleccionarDiag.setEnabled(false);
        btnSeleccionarDiag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarDiagActionPerformed(evt);
            }
        });

        txtNomDiag.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtNomDiag.setEnabled(false);

        txtIdDiag.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtIdDiag.setEnabled(false);

        txtIdPac.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtIdPac.setEnabled(false);

        txtNomPac.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtNomPac.setEnabled(false);

        btnSeleccionarPac.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/img/_select.png"))); // NOI18N
        btnSeleccionarPac.setEnabled(false);
        btnSeleccionarPac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarPacActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelFiltroLayout = new javax.swing.GroupLayout(panelFiltro);
        panelFiltro.setLayout(panelFiltroLayout);
        panelFiltroLayout.setHorizontalGroup(
            panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFiltroLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblObs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblDiag, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFiltroLayout.createSequentialGroup()
                        .addComponent(lblMes, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chooserMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chkMes)
                        .addGap(16, 16, 16)
                        .addComponent(lblAnio, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chooserAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chkAnio)
                        .addGap(27, 27, 27)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelFiltroLayout.createSequentialGroup()
                        .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(panelFiltroLayout.createSequentialGroup()
                                .addComponent(txtIdPac, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNomPac, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnSeleccionarPac, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelFiltroLayout.createSequentialGroup()
                                .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtObservaciones)
                                    .addGroup(panelFiltroLayout.createSequentialGroup()
                                        .addComponent(txtIdDiag, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtNomDiag)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnSeleccionarDiag, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(chkObs, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkDiag)
                            .addComponent(chkPaciente))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelFiltroLayout.setVerticalGroup(
            panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelFiltroLayout.createSequentialGroup()
                .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFiltroLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblAnio, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                            .addComponent(chooserAnio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblMes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(chooserMes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(chkAnio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(chkMes, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtIdPac, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(chkPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                    .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnSeleccionarPac, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtNomPac, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblObs, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtObservaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(chkObs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkDiag, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                    .addGroup(panelFiltroLayout.createSequentialGroup()
                        .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblDiag, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtIdDiag, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnSeleccionarDiag, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNomDiag, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 3, Short.MAX_VALUE)))
                .addContainerGap())
        );

        panelTipo.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        panelTipo.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Tipo de Ordenamiento", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semilight", 0, 24))); // NOI18N

        rbtAsc.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        rbtAsc.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtAsc.setText("Ascendente");
        rbtAsc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtAscActionPerformed(evt);
            }
        });

        rbtDesc.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        rbtDesc.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtDesc.setText("Descendente");
        rbtDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtDescActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelTipoLayout = new javax.swing.GroupLayout(panelTipo);
        panelTipo.setLayout(panelTipoLayout);
        panelTipoLayout.setHorizontalGroup(
            panelTipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTipoLayout.createSequentialGroup()
                .addComponent(rbtAsc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbtDesc))
        );
        panelTipoLayout.setVerticalGroup(
            panelTipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTipoLayout.createSequentialGroup()
                .addGroup(panelTipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtAsc)
                    .addComponent(rbtDesc))
                .addGap(0, 15, Short.MAX_VALUE))
        );

        panelOrdenar.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        panelOrdenar.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Ordenar por", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semilight", 0, 24))); // NOI18N

        rbtPac.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        rbtPac.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtPac.setText("Paciente");
        rbtPac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtPacActionPerformed(evt);
            }
        });

        rbtDiag.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        rbtDiag.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtDiag.setText("Diagn칩stico");
        rbtDiag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtDiagActionPerformed(evt);
            }
        });

        rbtObs.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        rbtObs.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtObs.setText("Observaciones");
        rbtObs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtObsActionPerformed(evt);
            }
        });

        rbtFecha.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        rbtFecha.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtFecha.setText("Fecha");
        rbtFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtFechaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelOrdenarLayout = new javax.swing.GroupLayout(panelOrdenar);
        panelOrdenar.setLayout(panelOrdenarLayout);
        panelOrdenarLayout.setHorizontalGroup(
            panelOrdenarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOrdenarLayout.createSequentialGroup()
                .addComponent(rbtPac)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rbtDiag)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbtObs)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbtFecha)
                .addGap(44, 44, 44))
        );
        panelOrdenarLayout.setVerticalGroup(
            panelOrdenarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOrdenarLayout.createSequentialGroup()
                .addGroup(panelOrdenarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtPac)
                    .addComponent(rbtDiag)
                    .addComponent(rbtObs)
                    .addComponent(rbtFecha))
                .addGap(0, 15, Short.MAX_VALUE))
        );

        panelMostrar.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        panelMostrar.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Mostrar", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semilight", 0, 24))); // NOI18N

        rbtXRegistros.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        rbtXRegistros.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtXRegistros.setText("Listrar ");
        rbtXRegistros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtXRegistrosActionPerformed(evt);
            }
        });

        rbtMostrarTodos.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        rbtMostrarTodos.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtMostrarTodos.setText("Listar todos.");
        rbtMostrarTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtMostrarTodosActionPerformed(evt);
            }
        });

        txtCant.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtCant.setEnabled(false);

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel13.setText("registros.");

        btnVer.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnVer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/img/Preview.png"))); // NOI18N
        btnVer.setText("VER");
        btnVer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelMostrarLayout = new javax.swing.GroupLayout(panelMostrar);
        panelMostrar.setLayout(panelMostrarLayout);
        panelMostrarLayout.setHorizontalGroup(
            panelMostrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMostrarLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(rbtXRegistros)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCant, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel13)
                .addGap(72, 72, 72)
                .addComponent(rbtMostrarTodos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnVer, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        panelMostrarLayout.setVerticalGroup(
            panelMostrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMostrarLayout.createSequentialGroup()
                .addGroup(panelMostrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtXRegistros)
                    .addComponent(txtCant, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(rbtMostrarTodos)
                    .addComponent(btnVer, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 704, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelOrdenar, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panelTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(panelMostrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelFiltro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panelTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelOrdenar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelMostrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAyudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAyudaActionPerformed
        String ini="<html><font size=5 style=color:black;> "; 
        String mensaje= ini + " Si no selecciona ninguna opci칩n para filtrado de datos, se mostraran \n"
                + ini + "\"todos los diagn칩sticos de los pacientes que asistieron a la consulta,\n"
                + ini + " sin considerar el pago de la misma.\"";     
        JOptionPane.showMessageDialog(this, mensaje, "AYUDA",JOptionPane.INFORMATION_MESSAGE, icon);
    }//GEN-LAST:event_btnAyudaActionPerformed

    private void chkAnioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAnioActionPerformed
        if(this.chkAnio.isSelected()){
            this.chooserAnio.setEnabled(true);
            this.lblAnio.setEnabled(true);
            lblFecha.setEnabled(true);
        }else{
            this.chooserAnio.setEnabled(false);
            this.lblAnio.setEnabled(false);
            f=new Fecha();
            chooserAnio.setYear(f.getAnio());
            lblFecha.setEnabled(false);
        }
    }//GEN-LAST:event_chkAnioActionPerformed

    private void chkMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkMesActionPerformed
        if(this.chkMes.isSelected()){
            this.chooserMes.setEnabled(true);
            this.lblMes.setEnabled(true);
            lblFecha.setEnabled(true);
        }else{
            this.chooserMes.setEnabled(false);
            this.lblMes.setEnabled(false);
            lblFecha.setEnabled(false);
            f=new Fecha();
            chooserMes.setMonth(f.getMes()-1);
        }
    }//GEN-LAST:event_chkMesActionPerformed

    private void chkObsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkObsActionPerformed
        if(this.chkObs.isSelected()){
            this.lblObs.setEnabled(true);
            this.txtObservaciones.setEnabled(true);
        }else{
            this.lblObs.setEnabled(false);
            this.txtObservaciones.setEnabled(false);
            this.txtObservaciones.setText(null);
        }
    }//GEN-LAST:event_chkObsActionPerformed

    private void chkPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkPacienteActionPerformed
       if(this.chkPaciente.isSelected()){
           this.lblPaciente.setEnabled(true);
           btnSeleccionarPac.setEnabled(true);
       }else{
           this.txtNomPac.setText(null);
            this.txtIdPac.setText(null);
           this.lblPaciente.setEnabled(false);
           btnSeleccionarPac.setEnabled(false);
       }
    }//GEN-LAST:event_chkPacienteActionPerformed

    private void chkDiagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkDiagActionPerformed
       if(this.chkDiag.isSelected()){
           this.lblDiag.setEnabled(true);
           btnSeleccionarDiag.setEnabled(true);
       }else{
           this.txtNomDiag.setText(null);
            this.txtIdDiag.setText(null);
           this.lblDiag.setEnabled(false);
           btnSeleccionarDiag.setEnabled(false);
       }
    }//GEN-LAST:event_chkDiagActionPerformed

    private void rbtXRegistrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtXRegistrosActionPerformed
        algunos=rbtXRegistros.isSelected();
        todos = !algunos;
        if(algunos)
            txtCant.setEnabled(true);
    }//GEN-LAST:event_rbtXRegistrosActionPerformed

    private void rbtMostrarTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtMostrarTodosActionPerformed
        todos = this.rbtMostrarTodos.isSelected();
        algunos=!todos;
        txtCant.setEnabled(false);
        txtCant.setText(null);
    }//GEN-LAST:event_rbtMostrarTodosActionPerformed

    private void btnVerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerActionPerformed
//        LISTconsultasDiag();
        if(validar()){
//            this.dispose();
            informe(); //segun opcion es la tabla que se muestra
        }
    }//GEN-LAST:event_btnVerActionPerformed

    private void btnSeleccionarDiagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarDiagActionPerformed
        Frame f = JOptionPane.getFrameForComponent(this);
        dlgSeleccion dialog = new dlgSeleccion(f, true);
        dialog.setOpcion(5);
        dialog.show();
    }//GEN-LAST:event_btnSeleccionarDiagActionPerformed

    private void btnSeleccionarPacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarPacActionPerformed
        Frame f = JOptionPane.getFrameForComponent(this);
        dlgSeleccion dialog = new dlgSeleccion(f, true);
        dialog.setOpcion(2);
        dialog.show();
    }//GEN-LAST:event_btnSeleccionarPacActionPerformed

    private void rbtPacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtPacActionPerformed
        ordPac = this.rbtPac.isSelected();
        ordDiag=ordObs=ordFecha=!ordPac;
        
    }//GEN-LAST:event_rbtPacActionPerformed

    private void rbtDiagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtDiagActionPerformed
        ordDiag = this.rbtDiag.isSelected();
        ordPac=ordObs=ordFecha=!ordDiag;
    }//GEN-LAST:event_rbtDiagActionPerformed

    private void rbtObsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtObsActionPerformed
        ordObs = this.rbtObs.isSelected();
        ordPac=ordDiag=ordFecha=!ordObs;
    }//GEN-LAST:event_rbtObsActionPerformed

    private void rbtFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtFechaActionPerformed
        ordFecha = this.rbtFecha.isSelected();
        ordPac=ordDiag=ordObs=!ordFecha;
    }//GEN-LAST:event_rbtFechaActionPerformed

    private void rbtAscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtAscActionPerformed
        asc = this.rbtAsc.isSelected();
        desc = !asc;
    }//GEN-LAST:event_rbtAscActionPerformed

    private void rbtDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtDescActionPerformed
        desc = this.rbtDesc.isSelected();
        asc = !desc;
    }//GEN-LAST:event_rbtDescActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAyuda;
    private javax.swing.ButtonGroup btnGpMostrar;
    private javax.swing.ButtonGroup btnGpOrdenar;
    private javax.swing.ButtonGroup btnGpOrdenarTipo;
    private javax.swing.JButton btnSeleccionarDiag;
    private javax.swing.JButton btnSeleccionarPac;
    private javax.swing.JButton btnVer;
    private javax.swing.JCheckBox chkAnio;
    private javax.swing.JCheckBox chkDiag;
    private javax.swing.JCheckBox chkMes;
    private javax.swing.JCheckBox chkObs;
    private javax.swing.JCheckBox chkPaciente;
    private com.toedter.calendar.JYearChooser chooserAnio;
    private com.toedter.calendar.JMonthChooser chooserMes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JLabel lblAnio;
    private javax.swing.JLabel lblDiag;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblMes;
    private javax.swing.JLabel lblObs;
    private javax.swing.JLabel lblPaciente;
    private javax.swing.JPanel panelFiltro;
    private javax.swing.JPanel panelMostrar;
    private javax.swing.JPanel panelOrdenar;
    private javax.swing.JPanel panelTipo;
    private javax.swing.JRadioButton rbtAsc;
    private javax.swing.JRadioButton rbtDesc;
    private javax.swing.JRadioButton rbtDiag;
    private javax.swing.JRadioButton rbtFecha;
    private javax.swing.JRadioButton rbtMostrarTodos;
    private javax.swing.JRadioButton rbtObs;
    private javax.swing.JRadioButton rbtPac;
    private javax.swing.JRadioButton rbtXRegistros;
    private javax.swing.JTextField txtCant;
    private javax.swing.JTextField txtIdDiag;
    private javax.swing.JTextField txtIdPac;
    private javax.swing.JTextField txtNomDiag;
    private javax.swing.JTextField txtNomPac;
    private javax.swing.JTextField txtObservaciones;
    // End of variables declaration//GEN-END:variables


private void grupoBotones(){
        this.btnGpOrdenar=new ButtonGroup();
        this.btnGpOrdenar.add(this.rbtPac);
        this.btnGpOrdenar.add(this.rbtDiag);
        this.btnGpOrdenar.add(this.rbtObs);
        this.btnGpOrdenar.add(this.rbtFecha);
        btnGpOrdenar.clearSelection();
        this.btnGpOrdenarTipo=new ButtonGroup();
        this.btnGpOrdenarTipo.add(this.rbtDesc);
        this.btnGpOrdenarTipo.add(this.rbtAsc);
        btnGpOrdenarTipo.clearSelection();
        btnGpMostrar=new ButtonGroup();
        btnGpMostrar.add(this.rbtMostrarTodos);
        btnGpMostrar.add(this.rbtXRegistros);
        btnGpMostrar.clearSelection();
    }

public void setPaciente(int id, String nombre){
      this.txtIdPac.setText(String.valueOf(id));
      this.txtNomPac.setText(nombre);
  }

public void setDiag(int id, String nombre){
      this.txtIdDiag.setText(String.valueOf(id));
      this.txtNomDiag.setText(nombre);
  }

public boolean validar(){
    String tit="Atenci칩n"; String msj; 
    boolean res=true;
        
    if(!this.chkAnio.isSelected())
        anio=0;
    else
        anio=chooserAnio.getYear();
    if(!this.chkMes.isSelected())
        mes=0;
    else
        mes=this.chooserMes.getMonth()+1;
    
    //Paciente
    if(this.chkPaciente.isSelected() && (txtNomPac.getText().trim()).length()==0){
      msj="<html><font size=5 style=color:red;>Paciente. Dato Requerido.";
      JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
      txtNomPac.grabFocus();
      return false;
    }

    //Observaciones
    if(this.chkObs.isSelected() && (txtObservaciones.getText().trim()).length()==0){
      msj="<html><font size=5 style=color:red;>Observaciones. Dato Requerido.";
      JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
      txtObservaciones.grabFocus();
      return false;
    }
    
    //Diagnostico
    if(this.chkDiag.isSelected() && (txtNomDiag.getText().trim()).length()==0){
      msj="<html><font size=5 style=color:red;>Diagn칩stico. Dato Requerido.";
      JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
      txtNomDiag.grabFocus();
      return false;
    }
    
    if(!this.rbtPac.isSelected() && !this.rbtDiag.isSelected() && !this.rbtObs.isSelected() && !this.rbtFecha.isSelected()){
      msj="<html><font size=5 style=color:red;>Ordenar por.. Dato Requerido.";
      JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
      rbtPac.grabFocus();
      return false;
    }
    
    if(!this.rbtAsc.isSelected() && !this.rbtDesc.isSelected()){
      msj="<html><font size=5 style=color:red;>Tipo de Ordenenamiento.. Dato Requerido.";
      JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
      rbtAsc.grabFocus();
      return false;
    }
    if(!this.rbtXRegistros.isSelected() && !this.rbtMostrarTodos.isSelected()){
      msj="<html><font size=5 style=color:red;>Opci칩n de muestra. Dato Requerido.";
      JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
      rbtXRegistros.grabFocus();
      return false;
    }
    if(this.rbtXRegistros.isSelected() && (txtCant.getText().trim()).length()==0){
      msj="<html><font size=5 style=color:red;>Cant de registros a mostrar. Dato Requerido.";
      JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
      txtCant.grabFocus();
      return false;
    }

    return res;
}  

public void informe(){
    try {
        int c, campo, idP, idDiag; String obs, ord;
        campo=1; ord="ASC";
        if(!txtCant.getText().isEmpty()) c=Integer.parseInt(txtCant.getText());
            else c=cantReg();
        if(!txtIdPac.getText().isEmpty()) idP=Integer.parseInt(txtIdPac.getText());
            else idP=0;
        if(!txtObservaciones.getText().isEmpty()) obs=txtObservaciones.getText();
            else obs="";
        if(!txtIdDiag.getText().isEmpty()) idDiag=Integer.parseInt(txtIdDiag.getText());
            else idDiag=0;
        
        
        if((ordPac && asc && todos) || (ordPac && asc && algunos)){campo=1; ord="ASC";}
        if((ordPac && desc && todos) || (ordPac && desc && algunos)){campo=1; ord="DESC";}
        if((ordDiag && desc && todos) || (ordDiag && desc && algunos)){campo=2; ord="DESC";}
        if((ordDiag && asc && todos) || (ordDiag && asc && algunos)) {campo=2; ord="ASC";}
        if((ordObs && desc && todos) || (ordObs && desc && algunos)){campo=3; ord="DESC";}
        if((ordObs && asc && todos) || (ordObs && asc && algunos)) {campo=3; ord="ASC";}
        if((ordFecha && desc && todos) || (ordFecha && desc && algunos)){campo=4; ord="DESC";}
        if((ordFecha && asc && todos) || (ordFecha && asc && algunos)) {campo=4; ord="ASC";}

        List inasistenciasList = new ArrayList();
//        JOptionPane.showMessageDialog(this, "Mes: " + mes + "Anio: " + anio);
        List<DiagnosticoXPacR> lista = conexion.getInstance().getDiagnosticoXPacR2(campo,ord,c,anio,mes,idP,idDiag,obs);
        
        if(!lista.isEmpty()){
            for (Iterator<DiagnosticoXPacR> it = lista.iterator(); it.hasNext();) {
                    DiagnosticoXPacR t = it.next();
                    String observaciones, paciente, fecha, diagnostico;
                    paciente=t.getPaciente();
                    fecha=t.getFecha();
                    observaciones=t.getObservaciones();
                    diagnostico=t.getDiagnostico();

                    inasistenciasList.add(new DiagnosticoXPacR(paciente, diagnostico, observaciones, fecha));
                }
            JasperReport report  = (JasperReport)JRLoader.loadObject(ClassLoader.getSystemResource("Reportes/ReportConsultasDiagnostico.jasper"));
            JasperPrint fillReport = JasperFillManager.fillReport(report, null,new JRBeanCollectionDataSource(inasistenciasList));
            JasperViewer jviewer = new JasperViewer(fillReport,false);
            jviewer.setTitle("Diagn칩sticos por paciente.");
            jviewer.setVisible(true); 
            this.dispose();
        }else{
//            this.dispose();
            JOptionPane.showMessageDialog(this, "<html><font size=5>No hay informaci칩n suficiente para generar el documento.");
        }  
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "<html><font size=5 style=color:red;>Error cargando reporte." + e);
    }
}

public int cantReg(){
        int num = 0;
        List<DiagnosticoXPacR> lista = conexion.getInstance().getDiagnosticoXPacR();
        for (Iterator<DiagnosticoXPacR> it = lista.iterator(); it.hasNext();) {
            DiagnosticoXPacR t = it.next();
            num = num + 1;
        }
        if(num==0){
            num=1;
        }
        return num;
    }

public void LISTconsultasDiag(){
    try {                   
        List inasistenciasList = new ArrayList();
        List<DiagnosticoXPacR> lista = conexion.getInstance().getDiagnosticoXPacR();
        
        if(!lista.isEmpty()){
            for (Iterator<DiagnosticoXPacR> it = lista.iterator(); it.hasNext();) {
                    DiagnosticoXPacR t = it.next();
                    String observaciones, paciente, fecha, diagnostico;
                    paciente=t.getPaciente();
                    fecha=t.getFecha();
                    observaciones=t.getObservaciones();
                    diagnostico=t.getDiagnostico();

                    inasistenciasList.add(new DiagnosticoXPacR(paciente, diagnostico, observaciones, fecha));
                }
            JasperReport report  = (JasperReport)JRLoader.loadObject(ClassLoader.getSystemResource("Reportes/ReportConsultasDiagnostico.jasper"));
            JasperPrint fillReport = JasperFillManager.fillReport(report, null,new JRBeanCollectionDataSource(inasistenciasList));
            JasperViewer jviewer = new JasperViewer(fillReport,false);
//                    jviewer.setTitle("Inasistencias Generales.");
            jviewer.setVisible(true); 
        }else{
            JOptionPane.showMessageDialog(this, "<html><font size=5>No hay informaci칩n suficiente para generar el documento.");
        }  
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "<html><font size=5 style=color:red;>Error cargando reporte." + e);
    }
}

private void SLetras(JTextField a){
        a.addKeyListener(new KeyAdapter() {
       @Override public void keyTyped(KeyEvent e) {            
            char car = e.getKeyChar();       
            if((car<'a' || car>'z') && (car<'A' || car>'Z')            
                && car !='치' //Min칰sculas            
                && car !='칠'           
                && car !='칤'           
                && car !='칩'          
                && car !='칰'  
                && car !='츼' //May칰sculas            
                && car !='칄'           
                && car !='칈'           
                && car !='칍'
                && car !='칔'
                && car !='침'
                && car !='칌'    
                && (car!=(char)KeyEvent.VK_SPACE)
                && (car!=(char)KeyEvent.VK_BACK_SPACE)    
                    )
            {
              Toolkit.getDefaultToolkit().beep();
              e.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
                    JOptionPane.showMessageDialog(null, "<html><font size=5 style=color:red;>Solo puede ingresar letras", "Validando Datos",
                            JOptionPane.ERROR_MESSAGE);
              e.consume(); 
            }
            String text = ((JTextField) e.getSource()).getText();
            if (text.length() >= 40) {
                e.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
                JOptionPane.showMessageDialog(null, "<html><font size=5 style=color:red;>Ha excedido el n칰mero m치ximo de caracteres!!! (40)", "Validando Datos",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
        });          
    }
    
    private void SNroEntero(JTextField a){   
        a.addKeyListener(new KeyAdapter() {
       @Override public void keyTyped(KeyEvent e) {            
		String text = ((JTextField) e.getSource()).getText();
		
                if(!Character.isDigit(e.getKeyChar()) && !Character.isISOControl(e.getKeyChar()))
                {
                     Toolkit.getDefaultToolkit().beep();

                     e.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
                    JOptionPane.showMessageDialog(null, "<html><font size=5 style=color:red;>Solo puede ingresar n칰meros", "Validando Datos",
                            JOptionPane.ERROR_MESSAGE);
                    e.consume();
                }

                //Limitar el numero de caracteres. Solo se pueden ingresar 5 caracteres
                if (text.length() >= 5) {
                    e.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
                    JOptionPane.showMessageDialog(null, "<html><font size=5 style=color:red;>Ha excedido el numero maximo de caracteres!!! (5)", "Validando Datos",
                            JOptionPane.ERROR_MESSAGE);
                }                     
        }
        });  
    }



}
