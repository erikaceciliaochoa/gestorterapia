/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Vista;

import Controlador.conexion;
import Reportes.PruebasXPacR;
import static Vista.iFraAdm.createImageIcon;
import java.awt.Component;
import java.awt.Frame;
import java.awt.Toolkit;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.text.ParsePosition;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import util.Fecha;
import util.modalInternalFrame;

/**
 *
 * @author usuario
 */
public class iFraPruebasxPac extends modalInternalFrame {
    private boolean ordPru,ordRdo,ordF,ordHr,ordPac,asc,desc,todos,algunos;
    int anio,mes;
    Fecha f;
    ImageIcon icon = createImageIcon("img/ayuda_.png");
    /**
     * Creates new form iFraPruebasxPac
     */
    public iFraPruebasxPac() {
        initComponents();
        grupoBotones();
        arranque();
        ordPru=ordRdo=ordF=ordHr=ordPac=asc=desc=todos=algunos=false;
        anio=mes=0;
//        SLetras(txtMotivo);
        f=null;
        SNroEntero(this.txtCant);
        SNroEntero(txtEdadDesde);
        SNroEntero(txtEdadHasta);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGpMostrar = new javax.swing.ButtonGroup();
        btnGpOrdenar = new javax.swing.ButtonGroup();
        btnGpOrdenarTipo = new javax.swing.ButtonGroup();
        panelMostrar = new javax.swing.JPanel();
        rbtXRegistros = new javax.swing.JRadioButton();
        rbtMostrarTodos = new javax.swing.JRadioButton();
        txtCant = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        verF = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        panelFiltro = new javax.swing.JPanel();
        lblFecha = new javax.swing.JLabel();
        lblInclu = new javax.swing.JLabel();
        lblEntre = new javax.swing.JLabel();
        lblY = new javax.swing.JLabel();
        lblPaciente = new javax.swing.JLabel();
        lblNroPac = new javax.swing.JLabel();
        txtIdPac = new javax.swing.JTextField();
        lblSexo = new javax.swing.JLabel();
        lblEdad = new javax.swing.JLabel();
        cboSexo = new javax.swing.JComboBox();
        lblDe = new javax.swing.JLabel();
        txtEdadDesde = new javax.swing.JTextField();
        lblA = new javax.swing.JLabel();
        txtEdadHasta = new javax.swing.JTextField();
        lblAnios = new javax.swing.JLabel();
        btnSeleccionarPac = new javax.swing.JButton();
        lblPrueba = new javax.swing.JLabel();
        lblNomPac = new javax.swing.JLabel();
        txtNomPac = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        btnAyuda = new javax.swing.JButton();
        lblAnio = new javax.swing.JLabel();
        chooserAnio = new com.toedter.calendar.JYearChooser();
        lblMes = new javax.swing.JLabel();
        chooserMes = new com.toedter.calendar.JMonthChooser();
        chkRangoFecha = new javax.swing.JCheckBox();
        chkAnio = new javax.swing.JCheckBox();
        chkMes = new javax.swing.JCheckBox();
        chkRangoEdad = new javax.swing.JCheckBox();
        lblIdPru = new javax.swing.JLabel();
        txtIdPrueba = new javax.swing.JTextField();
        lblNomPrue = new javax.swing.JLabel();
        txtNomPrueba = new javax.swing.JTextField();
        btnSeleccionarPrueba = new javax.swing.JButton();
        chkPaciente = new javax.swing.JCheckBox();
        chkPrueba = new javax.swing.JCheckBox();
        chkSexo = new javax.swing.JCheckBox();
        txtIni = new com.toedter.calendar.JDateChooser();
        txtFin = new com.toedter.calendar.JDateChooser();
        panelOrdenar = new javax.swing.JPanel();
        rbtPac = new javax.swing.JRadioButton();
        rbtRdo = new javax.swing.JRadioButton();
        rbtPrueba = new javax.swing.JRadioButton();
        rbtFecha = new javax.swing.JRadioButton();
        rbtHorario = new javax.swing.JRadioButton();
        panelTipo = new javax.swing.JPanel();
        rbtAsc = new javax.swing.JRadioButton();
        rbtDesc = new javax.swing.JRadioButton();

        setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        setClosable(true);
        setTitle("Pruebas realizadas por paciente");

        panelMostrar.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        panelMostrar.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Mostrar", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semilight", 0, 24))); // NOI18N

        rbtXRegistros.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        rbtXRegistros.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtXRegistros.setText("Listrar ");
        rbtXRegistros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtXRegistrosActionPerformed(evt);
            }
        });

        rbtMostrarTodos.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        rbtMostrarTodos.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtMostrarTodos.setText("Listar todos.");
        rbtMostrarTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtMostrarTodosActionPerformed(evt);
            }
        });

        txtCant.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtCant.setEnabled(false);

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel13.setText("registros.");

        verF.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        verF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/img/Preview.png"))); // NOI18N
        verF.setText("VER");
        verF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelMostrarLayout = new javax.swing.GroupLayout(panelMostrar);
        panelMostrar.setLayout(panelMostrarLayout);
        panelMostrarLayout.setHorizontalGroup(
            panelMostrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMostrarLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(rbtXRegistros)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCant, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel13)
                .addGap(72, 72, 72)
                .addComponent(rbtMostrarTodos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(verF, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        panelMostrarLayout.setVerticalGroup(
            panelMostrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMostrarLayout.createSequentialGroup()
                .addGroup(panelMostrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtXRegistros)
                    .addComponent(txtCant, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(rbtMostrarTodos)
                    .addComponent(verF, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 0, 36)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/img/note.png"))); // NOI18N
        jLabel1.setText("        Pruebas realizadas por Paciente");
        jLabel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        panelFiltro.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        panelFiltro.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Filtro", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semilight", 0, 24))); // NOI18N

        lblFecha.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblFecha.setText(" Fecha:");
        lblFecha.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblFecha.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblFecha.setOpaque(true);

        lblInclu.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblInclu.setText("inclusive.");

        lblEntre.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblEntre.setText("Entre");

        lblY.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblY.setText("y");

        lblPaciente.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblPaciente.setText(" Paciente: ");
        lblPaciente.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblPaciente.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblPaciente.setOpaque(true);

        lblNroPac.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblNroPac.setText("Nro");

        txtIdPac.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtIdPac.setEnabled(false);

        lblSexo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblSexo.setText(" Sexo: ");
        lblSexo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblSexo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblSexo.setOpaque(true);

        lblEdad.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblEdad.setText(" Edad: ");
        lblEdad.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblEdad.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblEdad.setOpaque(true);

        cboSexo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cboSexo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ambos", "Femenino", "Masculino" }));
        cboSexo.setBorder(javax.swing.BorderFactory.createCompoundBorder());

        lblDe.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblDe.setText("De");

        txtEdadDesde.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        lblA.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblA.setText("a");

        txtEdadHasta.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        lblAnios.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblAnios.setText("años");

        btnSeleccionarPac.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/img/_select.png"))); // NOI18N
        btnSeleccionarPac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarPacActionPerformed(evt);
            }
        });

        lblPrueba.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblPrueba.setText(" Prueba:");
        lblPrueba.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblPrueba.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblPrueba.setOpaque(true);

        lblNomPac.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblNomPac.setText("Nombre");

        txtNomPac.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtNomPac.setEnabled(false);

        jPanel5.setBackground(java.awt.SystemColor.inactiveCaptionBorder);

        btnAyuda.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnAyuda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/img/48_ayuda.png"))); // NOI18N
        btnAyuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAyudaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(btnAyuda, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnAyuda, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, Short.MAX_VALUE)
        );

        lblAnio.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblAnio.setText(" Año:");
        lblAnio.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblAnio.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblAnio.setOpaque(true);

        lblMes.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblMes.setText(" Mes:");
        lblMes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblMes.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblMes.setOpaque(true);

        chooserMes.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N

        chkRangoFecha.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        chkRangoFecha.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        chkRangoFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkRangoFechaActionPerformed(evt);
            }
        });

        chkAnio.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        chkAnio.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        chkAnio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAnioActionPerformed(evt);
            }
        });

        chkMes.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        chkMes.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        chkMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkMesActionPerformed(evt);
            }
        });

        chkRangoEdad.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        chkRangoEdad.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        chkRangoEdad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkRangoEdadActionPerformed(evt);
            }
        });

        lblIdPru.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblIdPru.setText("Nro");

        txtIdPrueba.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtIdPrueba.setEnabled(false);

        lblNomPrue.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblNomPrue.setText("Nombre");

        txtNomPrueba.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtNomPrueba.setEnabled(false);

        btnSeleccionarPrueba.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/img/_select.png"))); // NOI18N
        btnSeleccionarPrueba.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarPruebaActionPerformed(evt);
            }
        });

        chkPaciente.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        chkPaciente.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        chkPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkPacienteActionPerformed(evt);
            }
        });

        chkPrueba.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        chkPrueba.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        chkPrueba.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkPruebaActionPerformed(evt);
            }
        });

        chkSexo.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        chkSexo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        chkSexo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSexoActionPerformed(evt);
            }
        });

        txtIni.setDateFormatString("dd/MM/yyyy");
        txtIni.setEnabled(false);
        txtIni.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtIni.setMaxSelectableDate(new java.util.Date(32503694463000L));
        txtIni.setMinSelectableDate(new java.util.Date(441777663000L));
        txtIni.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtIniPropertyChange(evt);
            }
        });

        txtFin.setDateFormatString("dd/MM/yyyy");
        txtFin.setEnabled(false);
        txtFin.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtFin.setMaxSelectableDate(new java.util.Date(32503694463000L));
        txtFin.setMinSelectableDate(new java.util.Date(441777663000L));
        txtFin.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtFinPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout panelFiltroLayout = new javax.swing.GroupLayout(panelFiltro);
        panelFiltro.setLayout(panelFiltroLayout);
        panelFiltroLayout.setHorizontalGroup(
            panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFiltroLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                    .addComponent(lblSexo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblEdad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblPrueba, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFiltroLayout.createSequentialGroup()
                        .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(panelFiltroLayout.createSequentialGroup()
                                .addComponent(lblMes, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chooserMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(chkMes)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                                .addComponent(lblAnio, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(chooserAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelFiltroLayout.createSequentialGroup()
                                .addComponent(lblEntre)
                                .addGap(8, 8, 8)
                                .addComponent(txtIni, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblY)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtFin, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblInclu)
                                .addGap(14, 14, 14)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkRangoFecha)
                            .addComponent(chkAnio))
                        .addGap(27, 27, 27)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelFiltroLayout.createSequentialGroup()
                        .addComponent(lblIdPru)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtIdPrueba, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblNomPrue)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNomPrueba, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSeleccionarPrueba, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chkPrueba)
                        .addGap(111, 111, 111))
                    .addGroup(panelFiltroLayout.createSequentialGroup()
                        .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(panelFiltroLayout.createSequentialGroup()
                                .addComponent(lblNroPac)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtIdPac, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblNomPac)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNomPac)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSeleccionarPac, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelFiltroLayout.createSequentialGroup()
                                .addComponent(cboSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(chkSexo)
                                .addGap(318, 318, 318))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelFiltroLayout.createSequentialGroup()
                                .addComponent(lblDe)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtEdadDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblA)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtEdadHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblAnios)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(chkRangoEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chkPaciente)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        panelFiltroLayout.setVerticalGroup(
            panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelFiltroLayout.createSequentialGroup()
                .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFiltroLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelFiltroLayout.createSequentialGroup()
                                .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chkRangoFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblEntre)
                                        .addComponent(lblY)
                                        .addComponent(lblInclu))
                                    .addComponent(txtIni, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFin, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lblAnio, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                                    .addComponent(chooserAnio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblMes, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                                    .addComponent(chooserMes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(chkAnio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(chkMes, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(panelFiltroLayout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(lblFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFiltroLayout.createSequentialGroup()
                        .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSeleccionarPac, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(panelFiltroLayout.createSequentialGroup()
                        .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNroPac)
                            .addComponent(txtIdPac, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNomPac)
                            .addComponent(txtNomPac, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)))
                .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(chkSexo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cboSexo)
                    .addGroup(panelFiltroLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(lblSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblDe)
                        .addComponent(txtEdadDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblA)
                        .addComponent(txtEdadHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblAnios))
                    .addComponent(chkRangoEdad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSeleccionarPrueba, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkPrueba, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                    .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(lblPrueba, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblIdPru)
                            .addComponent(txtIdPrueba, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNomPrue)
                            .addComponent(txtNomPrueba, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        panelFiltroLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnSeleccionarPac, txtIdPac});

        panelOrdenar.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        panelOrdenar.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Ordenar por", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semilight", 0, 24))); // NOI18N

        rbtPac.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        rbtPac.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtPac.setText("Paciente");
        rbtPac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtPacActionPerformed(evt);
            }
        });

        rbtRdo.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        rbtRdo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtRdo.setText("Resultado");
        rbtRdo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtRdoActionPerformed(evt);
            }
        });

        rbtPrueba.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        rbtPrueba.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtPrueba.setText("Prueba");
        rbtPrueba.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtPruebaActionPerformed(evt);
            }
        });

        rbtFecha.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        rbtFecha.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtFecha.setText("Fecha");
        rbtFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtFechaActionPerformed(evt);
            }
        });

        rbtHorario.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        rbtHorario.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtHorario.setText("Horario");
        rbtHorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtHorarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelOrdenarLayout = new javax.swing.GroupLayout(panelOrdenar);
        panelOrdenar.setLayout(panelOrdenarLayout);
        panelOrdenarLayout.setHorizontalGroup(
            panelOrdenarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOrdenarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rbtPac)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbtPrueba)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbtRdo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbtFecha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbtHorario))
        );
        panelOrdenarLayout.setVerticalGroup(
            panelOrdenarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOrdenarLayout.createSequentialGroup()
                .addGroup(panelOrdenarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtPac)
                    .addComponent(rbtRdo)
                    .addComponent(rbtPrueba)
                    .addComponent(rbtFecha)
                    .addComponent(rbtHorario))
                .addGap(0, 15, Short.MAX_VALUE))
        );

        panelTipo.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        panelTipo.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Tipo de Ordenamiento", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semilight", 0, 24))); // NOI18N

        rbtAsc.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        rbtAsc.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtAsc.setText("Ascendente");
        rbtAsc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtAscActionPerformed(evt);
            }
        });

        rbtDesc.setBackground(java.awt.SystemColor.inactiveCaptionBorder);
        rbtDesc.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtDesc.setText("Descendente");
        rbtDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtDescActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelTipoLayout = new javax.swing.GroupLayout(panelTipo);
        panelTipo.setLayout(panelTipoLayout);
        panelTipoLayout.setHorizontalGroup(
            panelTipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTipoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rbtAsc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbtDesc))
        );
        panelTipoLayout.setVerticalGroup(
            panelTipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTipoLayout.createSequentialGroup()
                .addGroup(panelTipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtAsc)
                    .addComponent(rbtDesc))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelOrdenar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(panelTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(panelMostrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelOrdenar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelTipo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelMostrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void verFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verFActionPerformed
//        LISTpruebasXpac();
        if(validar()){
//            this.dispose();
            informe(); //segun opcion es la tabla que se muestra
        }
    }//GEN-LAST:event_verFActionPerformed

    private void btnAyudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAyudaActionPerformed
        String ini="<html><font size=5 style=color:black;> "; 
        String mensaje= ini + " Si no selecciona ninguna opción para filtrado de datos, se mostraran \n"
                + ini + "\"todos las pruebas realizadas a los pacientes que asistieron a la consulta,\n"
                + ini + " sin considerar el pago de la misma.\"";     
        JOptionPane.showMessageDialog(this, mensaje, "AYUDA",JOptionPane.INFORMATION_MESSAGE, icon);
    }//GEN-LAST:event_btnAyudaActionPerformed

    private void btnSeleccionarPacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarPacActionPerformed
        
        Frame f = JOptionPane.getFrameForComponent(this);
        dlgSeleccion dialog = new dlgSeleccion(f, true);
        dialog.setOpcion(2);
        dialog.show();
    }//GEN-LAST:event_btnSeleccionarPacActionPerformed

    private void chkRangoFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkRangoFechaActionPerformed

        if(this.chkRangoFecha.isSelected()){
            this.txtIni.setEnabled(true);
            this.txtFin.setEnabled(true);
            this.lblEntre.setEnabled(true);
            if(!lblFecha.isEnabled())this.lblFecha.setEnabled(true);
            this.lblInclu.setEnabled(true);
            this.lblY.setEnabled(true);
            setearFechas();
            ///
            this.chooserAnio.setEnabled(false);
            f=new Fecha();
            chooserAnio.setYear(f.getAnio());
            this.lblAnio.setEnabled(false);
            chkAnio.setSelected(false);
            this.chooserMes.setEnabled(false);
            this.lblMes.setEnabled(false);
            f=new Fecha();
            chooserMes.setMonth(f.getMes()-1);
            chkMes.setSelected(false);
        }
        else{
            this.txtIni.setEnabled(false);
            this.txtFin.setEnabled(false);
            this.txtIni.setDate(null);
            this.txtFin.setDate(null);
            this.lblEntre.setEnabled(false);
            if(lblFecha.isEnabled())this.lblFecha.setEnabled(false);
            this.lblInclu.setEnabled(false);
            this.lblY.setEnabled(false);
        }
    }//GEN-LAST:event_chkRangoFechaActionPerformed

    private void chkAnioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAnioActionPerformed
        if(this.chkAnio.isSelected()){
            this.chooserAnio.setEnabled(true);
            this.lblAnio.setEnabled(true);
            if(!lblFecha.isEnabled())this.lblFecha.setEnabled(true);
            //
            chkRangoFecha.setSelected(false);
            this.txtIni.setEnabled(false);
            this.txtFin.setEnabled(false);
            this.txtIni.setDate(null);
            this.txtFin.setDate(null);
            this.lblEntre.setEnabled(false);
//            this.lblFecha.setEnabled(false);
            this.lblInclu.setEnabled(false);
            this.lblY.setEnabled(false);
        }else{
            this.chooserAnio.setEnabled(false);
            f=new Fecha();
            chooserAnio.setYear(f.getAnio());
            this.lblAnio.setEnabled(false);
            chkAnio.setSelected(false);
            if(lblFecha.isEnabled())this.lblFecha.setEnabled(false);
        }
    }//GEN-LAST:event_chkAnioActionPerformed

    private void chkMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkMesActionPerformed
        if(this.chkMes.isSelected()){
            this.chooserMes.setEnabled(true);
            this.lblMes.setEnabled(true);
            if(!lblFecha.isEnabled())this.lblFecha.setEnabled(true);
            //
            chkRangoFecha.setSelected(false);
            this.txtIni.setEnabled(false);
            this.txtFin.setEnabled(false);
            this.txtIni.setDate(null);
            this.txtFin.setDate(null);
            this.lblEntre.setEnabled(false);
//            this.lblFecha.setEnabled(false);
            this.lblInclu.setEnabled(false);
            this.lblY.setEnabled(false);
            
        }else{
            this.chooserMes.setEnabled(false);
            this.lblMes.setEnabled(false);
            f=new Fecha();
            chooserMes.setMonth(f.getMes()-1);
            chkMes.setSelected(false);
            if(lblFecha.isEnabled())this.lblFecha.setEnabled(false);
        }
    }//GEN-LAST:event_chkMesActionPerformed

    private void chkRangoEdadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkRangoEdadActionPerformed
        if(this.chkRangoEdad.isSelected()){
            this.lblEdad.setEnabled(true);
            this.lblAnios.setEnabled(true);
            this.lblDe.setEnabled(true);
            this.lblA.setEnabled(true);
            this.txtEdadDesde.setEnabled(true);
            this.txtEdadHasta.setEnabled(true);
        }else{
            this.lblEdad.setEnabled(false);
            this.lblAnios.setEnabled(false);
            this.lblDe.setEnabled(false);
            this.lblA.setEnabled(false);
            this.txtEdadDesde.setEnabled(false);
            this.txtEdadHasta.setEnabled(false);
            this.txtEdadDesde.setText(null);
            this.txtEdadHasta.setText(null);
        }
    }//GEN-LAST:event_chkRangoEdadActionPerformed

    private void btnSeleccionarPruebaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarPruebaActionPerformed
        Frame f = JOptionPane.getFrameForComponent(this);
        dlgSeleccion dialog = new dlgSeleccion(f, true);
        dialog.setOpcion(3);
        dialog.show();
    }//GEN-LAST:event_btnSeleccionarPruebaActionPerformed

    private void chkPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkPacienteActionPerformed
       if(this.chkPaciente.isSelected()){
           this.lblNomPac.setEnabled(true);
           this.lblNroPac.setEnabled(true);
           this.btnSeleccionarPac.setEnabled(true);
           this.lblPaciente.setEnabled(true);
       }else{
           this.lblNomPac.setEnabled(false);
           this.lblNroPac.setEnabled(false);
           this.txtNomPac.setText(null);
            this.txtIdPac.setText(null);
           this.btnSeleccionarPac.setEnabled(false);
           this.lblPaciente.setEnabled(false);
       }
    }//GEN-LAST:event_chkPacienteActionPerformed

    private void chkPruebaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkPruebaActionPerformed
        if(this.chkPrueba.isSelected()){
            this.lblPrueba.setEnabled(true);
            this.lblIdPru.setEnabled(true);
            this.lblNomPrue.setEnabled(true);
            this.btnSeleccionarPrueba.setEnabled(true);
        }else{
            this.lblPrueba.setEnabled(false);
            this.lblIdPru.setEnabled(false);
            this.txtNomPrueba.setText(null);
            this.txtIdPrueba.setText(null);
            this.lblNomPrue.setEnabled(false);
            this.btnSeleccionarPrueba.setEnabled(false);
        }
    }//GEN-LAST:event_chkPruebaActionPerformed

    private void chkSexoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSexoActionPerformed
        if(this.chkSexo.isSelected()){
            this.lblSexo.setEnabled(true);
            this.cboSexo.setEnabled(true);
        }else{
           this.lblSexo.setEnabled(false);
           this.cboSexo.setEnabled(false);
           cboSexo.setSelectedIndex(0);
        }
    }//GEN-LAST:event_chkSexoActionPerformed

    private void rbtXRegistrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtXRegistrosActionPerformed
        algunos=rbtXRegistros.isSelected();
        todos = !algunos;
        if(algunos)
            txtCant.setEnabled(true);
    }//GEN-LAST:event_rbtXRegistrosActionPerformed

    private void rbtMostrarTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtMostrarTodosActionPerformed
        todos = this.rbtMostrarTodos.isSelected();
        algunos=!todos;
        txtCant.setEnabled(false);
        txtCant.setText(null);
    }//GEN-LAST:event_rbtMostrarTodosActionPerformed

    private void rbtAscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtAscActionPerformed
        asc = this.rbtAsc.isSelected();
        desc = !asc;
    }//GEN-LAST:event_rbtAscActionPerformed

    private void rbtDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtDescActionPerformed
        desc = this.rbtDesc.isSelected();
        asc = !desc;
    }//GEN-LAST:event_rbtDescActionPerformed

    private void rbtPacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtPacActionPerformed
        ordPac = this.rbtPac.isSelected();
        ordPru=ordRdo=ordF=ordHr=!ordPac;
    }//GEN-LAST:event_rbtPacActionPerformed

    private void rbtPruebaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtPruebaActionPerformed
        ordPru = this.rbtPrueba.isSelected();
        ordPac=ordRdo=ordF=ordHr=!ordPru;
    }//GEN-LAST:event_rbtPruebaActionPerformed

    private void rbtRdoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtRdoActionPerformed
        ordRdo = this.rbtRdo.isSelected();
        ordPru=ordPac=ordF=ordHr=!ordRdo;
    }//GEN-LAST:event_rbtRdoActionPerformed

    private void rbtFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtFechaActionPerformed
        ordF = this.rbtFecha.isSelected();
        ordPru=ordPac=ordRdo=ordHr=!ordF;
    }//GEN-LAST:event_rbtFechaActionPerformed

    private void rbtHorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtHorarioActionPerformed
        ordHr = this.rbtHorario.isSelected();
        ordPru=ordPac=ordF=ordRdo=!ordHr;
    }//GEN-LAST:event_rbtHorarioActionPerformed

    private void txtFinPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtFinPropertyChange
        if(txtFin.getDate()!=null){
            if(f.checkFecha(txtFin)){
            }else txtFin.setDate(null);
        }
    }//GEN-LAST:event_txtFinPropertyChange

    private void txtIniPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtIniPropertyChange
       if(txtIni.getDate()!=null){
            if(f.checkFecha(txtIni)){
            }else txtIni.setDate(null);
        }
    }//GEN-LAST:event_txtIniPropertyChange


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAyuda;
    private javax.swing.ButtonGroup btnGpMostrar;
    private javax.swing.ButtonGroup btnGpOrdenar;
    private javax.swing.ButtonGroup btnGpOrdenarTipo;
    private javax.swing.JButton btnSeleccionarPac;
    private javax.swing.JButton btnSeleccionarPrueba;
    private javax.swing.JComboBox cboSexo;
    private javax.swing.JCheckBox chkAnio;
    private javax.swing.JCheckBox chkMes;
    private javax.swing.JCheckBox chkPaciente;
    private javax.swing.JCheckBox chkPrueba;
    private javax.swing.JCheckBox chkRangoEdad;
    private javax.swing.JCheckBox chkRangoFecha;
    private javax.swing.JCheckBox chkSexo;
    private com.toedter.calendar.JYearChooser chooserAnio;
    private com.toedter.calendar.JMonthChooser chooserMes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JLabel lblA;
    private javax.swing.JLabel lblAnio;
    private javax.swing.JLabel lblAnios;
    private javax.swing.JLabel lblDe;
    private javax.swing.JLabel lblEdad;
    private javax.swing.JLabel lblEntre;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblIdPru;
    private javax.swing.JLabel lblInclu;
    private javax.swing.JLabel lblMes;
    private javax.swing.JLabel lblNomPac;
    private javax.swing.JLabel lblNomPrue;
    private javax.swing.JLabel lblNroPac;
    private javax.swing.JLabel lblPaciente;
    private javax.swing.JLabel lblPrueba;
    private javax.swing.JLabel lblSexo;
    private javax.swing.JLabel lblY;
    private javax.swing.JPanel panelFiltro;
    private javax.swing.JPanel panelMostrar;
    private javax.swing.JPanel panelOrdenar;
    private javax.swing.JPanel panelTipo;
    private javax.swing.JRadioButton rbtAsc;
    private javax.swing.JRadioButton rbtDesc;
    private javax.swing.JRadioButton rbtFecha;
    private javax.swing.JRadioButton rbtHorario;
    private javax.swing.JRadioButton rbtMostrarTodos;
    private javax.swing.JRadioButton rbtPac;
    private javax.swing.JRadioButton rbtPrueba;
    private javax.swing.JRadioButton rbtRdo;
    private javax.swing.JRadioButton rbtXRegistros;
    private javax.swing.JTextField txtCant;
    private javax.swing.JTextField txtEdadDesde;
    private javax.swing.JTextField txtEdadHasta;
    private com.toedter.calendar.JDateChooser txtFin;
    private javax.swing.JTextField txtIdPac;
    private javax.swing.JTextField txtIdPrueba;
    private com.toedter.calendar.JDateChooser txtIni;
    private javax.swing.JTextField txtNomPac;
    private javax.swing.JTextField txtNomPrueba;
    private javax.swing.JButton verF;
    // End of variables declaration//GEN-END:variables

    private void grupoBotones(){
        this.btnGpMostrar=new ButtonGroup();
        this.btnGpMostrar.add(rbtXRegistros);
        this.btnGpMostrar.add(rbtMostrarTodos);
        btnGpMostrar.clearSelection();
        this.btnGpOrdenar=new ButtonGroup();
        this.btnGpOrdenar.add(this.rbtFecha);
        this.btnGpOrdenar.add(this.rbtHorario);
        this.btnGpOrdenar.add(this.rbtPac);
        this.btnGpOrdenar.add(this.rbtPrueba);
        this.btnGpOrdenar.add(this.rbtRdo);
        btnGpOrdenar.clearSelection();
        this.btnGpOrdenarTipo=new ButtonGroup();
        this.btnGpOrdenarTipo.add(this.rbtDesc);
        this.btnGpOrdenarTipo.add(this.rbtAsc);
        btnGpOrdenarTipo.clearSelection();
    }
    
private void arranque(){
    EnableForm(panelFiltro, false);
//    EnableForm(panelFiltro, false);
    EnableChk(true);
    this.chooserAnio.setEnabled(false);
    this.chooserMes.setEnabled(false);
    this.btnAyuda.setEnabled(true);
}

public void setearFechas(){
    Calendar cal = Calendar.getInstance();
    f=new Fecha();
    Date fecha = f.convertirCalendaDate(cal);
    txtIni.setDate(fecha);
    txtFin.setDate(fecha);
}
    
  public void setPaciente(int id, String nombre){
      this.txtIdPac.setText(String.valueOf(id));
      this.txtNomPac.setText(nombre);
  }
  
  public void setPrueba(int id, String nombre){
      this.txtIdPrueba.setText(String.valueOf(id));
      this.txtNomPrueba.setText(nombre);
  }
  
  public void EnableChk(boolean op){
      this.chkAnio.setEnabled(op);
      this.chkMes.setEnabled(op);
      this.chkPrueba.setEnabled(op);
      this.chkRangoEdad.setEnabled(op);
      this.chkPaciente.setEnabled(op);
      this.chkRangoFecha.setEnabled(op);
      this.chkSexo.setEnabled(op);
  }
  
  public void informe(){
    try {
        int c, campo, idP, idPru, ED, EH; String s, ord, f1,f2;
        campo=1; ord="ASC";
        if(!txtCant.getText().isEmpty()) c=Integer.parseInt(txtCant.getText());
            else c=cantReg();
        if(!txtIdPac.getText().isEmpty()) idP=Integer.parseInt(txtIdPac.getText());
            else idP=0;
        if(!txtIdPrueba.getText().isEmpty()) idPru=Integer.parseInt(txtIdPrueba.getText());
            else idPru=0;
        
        if(!cboSexo.getSelectedItem().equals("Ambos")) s=cboSexo.getSelectedItem().toString();
            else s="";
        
        if(!txtEdadDesde.getText().isEmpty()) ED=Integer.parseInt(txtEdadDesde.getText());
            else ED=0;
        if(!txtEdadHasta.getText().isEmpty()) EH=Integer.parseInt(txtEdadHasta.getText());
            else EH=0;
        
        f=new Fecha();
        if(txtIni.getDate()!=null) f1=f.getFormatedFechaToCalendar(f.getStringXfecha(txtIni.getDate()));
            else f1="";
        if(txtIni.getDate()!=null) f2=f.getFormatedFechaToCalendar(f.getStringXfecha(txtFin.getDate()));
            else f2="";
        
        
        if((ordPac && asc && todos) || (ordPac && asc && algunos)){campo=1; ord="ASC";}
        if((ordPac && desc && todos) || (ordPac && desc && algunos)){campo=1; ord="DESC";}
        if((ordPru && desc && todos) || (ordPru && desc && algunos)){campo=2; ord="DESC";}
        if((ordPru && asc && todos) || (ordPru && asc && algunos)) {campo=2; ord="ASC";}
        if((ordRdo && desc && todos) || (ordRdo && desc && algunos)){campo=3; ord="DESC";}
        if((ordRdo && asc && todos) || (ordRdo && asc && algunos)) {campo=3; ord="ASC";}
        if((ordF && desc && todos) || (ordF && desc && algunos)){campo=4; ord="DESC";}
        if((ordF && asc && todos) || (ordF && asc && algunos)) {campo=4; ord="ASC";}
        if((ordHr && desc && todos) || (ordHr && desc && algunos)){campo=5; ord="DESC";}
        if((ordHr && asc && todos) || (ordHr && asc && algunos)) {campo=5; ord="ASC";}

        List inasistenciasList = new ArrayList();
//        JOptionPane.showMessageDialog(this, "Mes: " + mes + "Anio: " + anio);
        List<PruebasXPacR> lista = conexion.getInstance().getPruebasXPacR2(campo, ord, c, anio,mes,idP,idPru,ED,EH,f1,f2,s);
//        List<PruebasXPacR> lista = conexion.getInstance().getPruebasXPacR();
        
        if(!lista.isEmpty()){
            for (Iterator<PruebasXPacR> it = lista.iterator(); it.hasNext();) {
                    PruebasXPacR t = it.next();
                    String prueba, resultado, paciente, fecha, horario;
                    paciente=t.getPaciente();
                    fecha=t.getFecha();
                    horario=t.getHorario();
                    prueba=t.getPrueba();
                    resultado=t.getResultado();

                    inasistenciasList.add(new PruebasXPacR(paciente, prueba, resultado, fecha, horario));
                }
            JasperReport report  = (JasperReport)JRLoader.loadObject(ClassLoader.getSystemResource("Reportes/ReportPruebas.jasper"));
            JasperPrint fillReport = JasperFillManager.fillReport(report, null,new JRBeanCollectionDataSource(inasistenciasList));
            JasperViewer jviewer = new JasperViewer(fillReport,false);
            jviewer.setTitle("Pruebas por paciente.");
            jviewer.setVisible(true); 
            this.dispose();
        }else{
//            this.dispose();
            JOptionPane.showMessageDialog(this, "<html><font size=5>No hay información suficiente para generar el documento.");
        }  
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "<html><font size=5 style=color:red;>Error cargando reporte." + e);
    }
}
  
  public int cantReg(){
        int num = 0;
        List<PruebasXPacR> lista = conexion.getInstance().getPruebasXPacR();
        for (Iterator<PruebasXPacR> it = lista.iterator(); it.hasNext();) {
            PruebasXPacR t = it.next();
            num = num + 1;
        }
        if(num==0){
            num=1;
        }
        return num;
    }
  
  public void LISTpruebasXpac(){
    try {                   
        List inasistenciasList = new ArrayList();
        List<PruebasXPacR> lista = conexion.getInstance().getPruebasXPacR();
        
        if(!lista.isEmpty()){
            for (Iterator<PruebasXPacR> it = lista.iterator(); it.hasNext();) {
                    PruebasXPacR t = it.next();
                    String prueba, resultado, paciente, fecha, horario;
                    paciente=t.getPaciente();
                    fecha=t.getFecha();
                    horario=t.getHorario();
                    prueba=t.getPrueba();
                    resultado=t.getResultado();

                    inasistenciasList.add(new PruebasXPacR(paciente, prueba, resultado, fecha, horario));
                }
            JasperReport report  = (JasperReport)JRLoader.loadObject(ClassLoader.getSystemResource("Reportes/ReportPruebas.jasper"));
            JasperPrint fillReport = JasperFillManager.fillReport(report, null,new JRBeanCollectionDataSource(inasistenciasList));
            JasperViewer jviewer = new JasperViewer(fillReport,false);
            jviewer.setTitle("Pruebas por paciente.");
            jviewer.setVisible(true); 
        }else{
            JOptionPane.showMessageDialog(this, "<html><font size=5>No hay información suficiente para generar el documento.");
        }  
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "<html><font size=5 style=color:red;>Error cargando reporte." + e);
    }
 }
  
public boolean validar(){
    String tit="Atención"; String msj; 
    boolean res=true;
    
    //rangoFechas
    if(this.chkRangoFecha.isSelected() && (txtIni.getDate()==null)){
      msj="<html><font size=5 <font size=5 style=color:red;>Fecha desde. Dato Requerido.";
      JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
      txtIni.grabFocus();
      return false;
    } 
    if(this.chkRangoFecha.isSelected() && (txtFin.getDate()==null)){
      msj="<html><font size=5 <font size=5 style=color:red;>Fecha hasta. Dato Requerido.";
      JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
      txtFin.grabFocus();
      return false;
    }
    
     
     if (chkRangoFecha.isSelected() && !txtIni.getDate().before(txtFin.getDate()) && !txtIni.getDate().equals(txtFin.getDate())){ 
         msj="<html><font size=5 style=color:red;>Fecha de inicio debe ser menor o igual a Fecha de fin.";
         JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
         txtIni.grabFocus();
         return false;
     }
    
    if(!this.chkAnio.isSelected())
        anio=0;
    else
        anio=chooserAnio.getYear();
    if(!this.chkMes.isSelected())
        mes=0;
    else
        mes=this.chooserMes.getMonth()+1;
    
    //Paciente
    if(this.chkPaciente.isSelected() && (txtNomPac.getText().trim()).length()==0){
      msj="<html><font size=5 <font size=5 style=color:red;>Paciente. Dato Requerido.";
      JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
      txtNomPac.grabFocus();
      return false;
    }
    
    //sexo
    if(this.cboSexo.getSelectedIndex()==-1)
      {   msj="<html><font size=5 <font size=5 style=color:red;>Sexo. Dato Requerido";
          JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
          cboSexo.grabFocus();
          return false;
      }
    
    if(this.chkRangoEdad.isSelected() && (txtEdadDesde.getText().trim()).length()==0){
      msj="<html><font size=5 <font size=5 style=color:red;>Edad desde. Dato Requerido.";
      JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
      txtEdadDesde.grabFocus();
      return false;
    } 
    
    if(this.chkRangoEdad.isSelected() && (txtEdadHasta.getText().trim()).length()==0){
      msj="<html><font size=5 font size=5 style=color:red;>Edad hasta. Dato Requerido.";
      JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
      txtEdadHasta.grabFocus();
      return false;
    }
    
    if(this.chkRangoEdad.isSelected() && ((txtEdadHasta.getText().trim()).length())<((txtEdadDesde.getText().trim()).length())){
      msj="<html><font size=5 style=color:red;>Edad 1 debe ser menor o igual que Edad 2.";
      JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
      txtEdadDesde.grabFocus();
      return false;
    }
    
    //Prueba
    if(this.chkPrueba.isSelected() && (txtNomPrueba.getText().trim()).length()==0){
      msj="<html><font size=5 style=color:red;>Prueba. Dato Requerido.";
      JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
      txtNomPrueba.grabFocus();
      return false;
    }
    
    if(!this.rbtPac.isSelected() && !this.rbtPrueba.isSelected() && !this.rbtRdo.isSelected() && !this.rbtFecha.isSelected() && !this.rbtHorario.isSelected()){
      msj="<html><font size=5 style=color:red;>Ordenar por.. Dato Requerido.";
      JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
      rbtPac.grabFocus();
      return false;
    }
    
    if(!this.rbtAsc.isSelected() && !this.rbtDesc.isSelected()){
      msj="<html><font size=5 style=color:red;>Tipo de Ordenenamiento.. Dato Requerido.";
      JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
      rbtAsc.grabFocus();
      return false;
    }
    if(!this.rbtXRegistros.isSelected() && !this.rbtMostrarTodos.isSelected()){
      msj="<html><font size=5 style=color:red;>Opción de muestra. Dato Requerido.";
      JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
      rbtXRegistros.grabFocus();
      return false;
    }
    if(this.rbtXRegistros.isSelected() && (txtCant.getText().trim()).length()==0){
      msj="<html><font size=5 style=color:red;>Cant de registros a mostrar. Dato Requerido.";
      JOptionPane.showMessageDialog(this, msj,tit,JOptionPane.WARNING_MESSAGE);
      txtCant.grabFocus();
      return false;
    }

    return res;
}  
  
  
  

    
    
    
  /**
* Método habilita o inhabilita todos los componentes
     * @param panel
     * @param op
*/
    public void EnableForm(Object panel, boolean op) {
        String nombre_clase = panel.getClass().getName();
        switch (nombre_clase) {
            case "javax.swing.JPanel":
                enablePanel((javax.swing.JPanel) panel, op);
                break;
            case "javax.swing.JScrollPane":
                enableScrollPane((javax.swing.JScrollPane) panel, op);
                break;
            case "javax.swing.JTabbedPane":
                enableTabbedPane((javax.swing.JTabbedPane) panel, op);
                break;
        }
    }

    private void enablePanel(javax.swing.JPanel panel, boolean op) {
        java.awt.Component[] componentes = panel.getComponents();
        for (Component componente : componentes) {
            enableComponent(componente, op);
        }
    }

    private void enableTabbedPane(javax.swing.JTabbedPane panel, boolean op) {
        java.awt.Component[] componentes = panel.getComponents();
        for (Component componente : componentes) {
            enableComponent(componente, op);
        }
    }
    
    private void enableScrollPane(javax.swing.JScrollPane panel, boolean op) {
        java.awt.Component[] componentes = panel.getViewport().getComponents();
        for (Component componente : componentes) {
            enableComponent(componente, op);
        }
    }

    private void enableComponent(java.awt.Component comp, boolean op) {
        String nombre_clase = comp.getClass().getName();
        switch (nombre_clase) {
            case "javax.swing.JTextField":
                ((javax.swing.JTextField) comp).setEnabled(op);
                break;
            case "javax.swing.JComboBox":
                ((javax.swing.JComboBox) comp).setEnabled(op);
                break;
            case "javax.swing.JTextArea":
                ((javax.swing.JTextArea) comp).setEnabled(op);
                break;
            case "javax.swing.JCheckBox":
                ((javax.swing.JCheckBox) comp).setEnabled(op);
                break;
            case "javax.swing.JRadioButton":
                ((javax.swing.JRadioButton) comp).setEnabled(op);
                break;
            case "javax.swing.JFormattedTextField":
                ((javax.swing.JFormattedTextField) comp).setEnabled(op);
                break;
            case "javax.swing.JLabel":
                ((javax.swing.JLabel) comp).setEnabled(op);
                break;
            case "javax.swing.JTable":
                ((javax.swing.JTable) comp).setEnabled(op);
                break;
            case "javax.swing.JButton":
                ((javax.swing.JButton) comp).setEnabled(op);
                break;
            case "javax.swing.JPanel":
                enablePanel((javax.swing.JPanel) comp, op);
                ((javax.swing.JPanel) comp).setEnabled(op);
                break;
            case "javax.swing.JScrollPane":
                enableScrollPane((javax.swing.JScrollPane) comp, op);
                ((javax.swing.JScrollPane) comp).setEnabled(op);
                break;
            case "javax.swing.JTabbedPane":
                enableTabbedPane((javax.swing.JTabbedPane) comp, op);
                ((javax.swing.JTabbedPane) comp).setEnabled(op);
                break;
        }
    } 
    
    private void SLetras(JTextField a){
        a.addKeyListener(new KeyAdapter() {
       @Override public void keyTyped(KeyEvent e) {            
            char car = e.getKeyChar();       
            if((car<'a' || car>'z') && (car<'A' || car>'Z')            
                && car !='á' //Minúsculas            
                && car !='é'           
                && car !='í'           
                && car !='ó'          
                && car !='ú'  
                && car !='Á' //Mayúsculas            
                && car !='É'           
                && car !='Í'           
                && car !='Ó'
                && car !='Ú'
                && car !='ñ'
                && car !='Ñ'    
                && (car!=(char)KeyEvent.VK_SPACE)
                && (car!=(char)KeyEvent.VK_BACK_SPACE)    
                    )
            {
              Toolkit.getDefaultToolkit().beep();
              e.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
                    JOptionPane.showMessageDialog(null, "<html><font size=5 style=color:red;>Solo puede ingresar letras", "Validando Datos",
                            JOptionPane.ERROR_MESSAGE);
              e.consume(); 
            }
            String text = ((JTextField) e.getSource()).getText();
            if (text.length() >= 40) {
                e.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
                JOptionPane.showMessageDialog(null, "<html><font size=5 style=color:red;>Ha excedido el número máximo de caracteres!!! (40)", "Validando Datos",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
        });          
    }
    
    private void SNroEntero(JTextField a){   
        a.addKeyListener(new KeyAdapter() {
       @Override public void keyTyped(KeyEvent e) {            
		String text = ((JTextField) e.getSource()).getText();
		
                if(!Character.isDigit(e.getKeyChar()) && !Character.isISOControl(e.getKeyChar()))
                {
                     Toolkit.getDefaultToolkit().beep();

                     e.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
                    JOptionPane.showMessageDialog(null, "<html><font size=5 style=color:red;>Solo puede ingresar números", "Validando Datos",
                            JOptionPane.ERROR_MESSAGE);
                    e.consume();
                }

                //Limitar el numero de caracteres. Solo se pueden ingresar 5 caracteres
                if (text.length() >= 5) {
                    e.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
                    JOptionPane.showMessageDialog(null, "<html><font size=5 style=color:red;>Ha excedido el numero maximo de caracteres!!! (5)", "Validando Datos",
                            JOptionPane.ERROR_MESSAGE);
                }                     
        }
        });  
    }
    
    
    
    
    

}
